42a43,45
> 
> 
> 
59a63,69
>     private TickType tickType;
>     
>     
> 
> 
> 
> 
69c79
<         super(label, textAnchor, rotationAnchor, angle);
---
>         this(TickType.MAJOR, value, label, textAnchor, rotationAnchor, angle);
72a83,104
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public ValueTick(TickType tickType, double value, String label, 
>                      TextAnchor textAnchor, TextAnchor rotationAnchor, 
>                      double angle) {
>                           
>         super(label, textAnchor, rotationAnchor, angle);
>         this.value = value;
>         this.tickType = tickType;   
>     }    
89a122,132
>     public TickType getTickType() {
>         return this.tickType;
>     }
>     
>     
> 
> 
> 
> 
> 
> 
94,99c137,145
<         if (obj instanceof ValueTick && super.equals(obj)) {
<             ValueTick vt = (ValueTick) obj;
<             if (!(this.value == vt.value)) {
<                 return false;   
<             }
<             return true;
---
>         if (!(obj instanceof ValueTick)) {
>             return false;
>         }
>         ValueTick that = (ValueTick) obj;
>         if (this.value != that.value) {
>             return false;   
>         }
>         if (!this.tickType.equals(that.tickType)) {
>             return false;
101c147
<         return false;
---
>         return super.equals(obj);
