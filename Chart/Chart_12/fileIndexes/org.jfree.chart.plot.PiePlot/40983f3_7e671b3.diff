157a158,159
> 
> 
170a173
> import java.awt.geom.CubicCurve2D;
173a177
> import java.awt.geom.QuadCurve2D;
395a400,406
> 
> 
> 
> 
>     private PieLabelLinkStyle labelLinkStyle = PieLabelLinkStyle.STANDARD;
>     
>     
1503a1515,1545
> 
>     public PieLabelLinkStyle getLabelLinkStyle() {
>     	return this.labelLinkStyle;
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public void setLabelLinkStyle(PieLabelLinkStyle style) {
>     	if (style == null) {
>     		throw new IllegalArgumentException("Null 'style' argument.");
>     	}
>     	this.labelLinkStyle = style;
>     	fireChangeEvent();
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
2754,2756c2796,2813
<             g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));
<             g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));
<             g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));
---
>             PieLabelLinkStyle style = getLabelLinkStyle();
>             if (style.equals(PieLabelLinkStyle.STANDARD)) {
>                 g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));
>                 g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));
>                 g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));
>             }
>             else if (style.equals(PieLabelLinkStyle.QUAD_CURVE)) {
>             	QuadCurve2D q = new QuadCurve2D.Float();
>                 q.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY);
>                 g2.draw(q);
>                 g2.draw(new Line2D.Double(elbowX, elbowY, linkX, linkY));            	
>             }
>             else if (style.equals(PieLabelLinkStyle.CUBIC_CURVE)) {
>             	CubicCurve2D c = new CubicCurve2D .Float();
>                 c.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY, 
>                 		linkX, linkY);
>                 g2.draw(c);
>             }
2790,2792c2847,2864
<             g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));
<             g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));
<             g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));
---
>             PieLabelLinkStyle style = getLabelLinkStyle();
>             if (style.equals(PieLabelLinkStyle.STANDARD)) {
>                 g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));
>                 g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));
>                 g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));
>             }
>             else if (style.equals(PieLabelLinkStyle.QUAD_CURVE)) {
>             	QuadCurve2D q = new QuadCurve2D.Float();
>                 q.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY);
>                 g2.draw(q);
>                 g2.draw(new Line2D.Double(elbowX, elbowY, linkX, linkY));            	
>             }
>             else if (style.equals(PieLabelLinkStyle.CUBIC_CURVE)) {
>             	CubicCurve2D c = new CubicCurve2D .Float();
>                 c.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY, 
>                 		linkX, linkY);
>                 g2.draw(c);
>             }
2927a3000,3002
>         }
>         if (!this.labelLinkStyle.equals(that.labelLinkStyle)) {
>         	return false;
