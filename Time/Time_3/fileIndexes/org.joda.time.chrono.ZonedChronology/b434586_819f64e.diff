153c153
<         HashMap converted = new HashMap();
---
>         HashMap<Object, Object> converted = new HashMap<Object, Object>();
199c199
<     private DurationField convertField(DurationField field, HashMap converted) {
---
>     private DurationField convertField(DurationField field, HashMap<Object, Object> converted) {
211c211
<     private DateTimeField convertField(DateTimeField field, HashMap converted) {
---
>     private DateTimeField convertField(DateTimeField field, HashMap<Object, Object> converted) {
226a227,263
>     
>     
> 
> 
> 
> 
> 
> 
> 
>     public boolean equals(Object obj) {
>         if (this == obj) {
>             return true;
>         }
>         if (obj instanceof ZonedChronology == false) {
>             return false;
>         }
>         ZonedChronology chrono = (ZonedChronology) obj;
>         return
>             getBase().equals(chrono.getBase()) &&
>             getZone().equals(chrono.getZone());
>     }
> 
>     
> 
> 
> 
> 
> 
>     public int hashCode() {
>         return 326565 + getZone().hashCode() * 11 + getBase().hashCode() * 7;
>     }
> 
>     
> 
> 
> 
> 
232c269
< 
---
>     
257c294
<             return iTimeField ? iField.isPrecise() : this.iZone.isFixed();
---
>             return iTimeField ? iField.isPrecise() : iField.isPrecise() && this.iZone.isFixed();
327,333c364
<             int offset = this.iZone.getOffset(instant);
<             long sum = instant + offset;
<             
<             if ((instant ^ sum) < 0 && (instant ^ offset) >= 0) {
<                 throw new ArithmeticException("Adding time zone offset caused overflow");
<             }
<             return sum;
---
>             return iZone.convertUTCToLocal(instant);
375c406,407
<             return iField.get(addOffset(instant));
---
>             long localInstant = iZone.convertUTCToLocal(instant);
>             return iField.get(localInstant);
379c411,412
<             return iField.getAsText(addOffset(instant), locale);
---
>             long localInstant = iZone.convertUTCToLocal(instant);
>             return iField.getAsText(localInstant, locale);
383c416,417
<             return iField.getAsShortText(addOffset(instant), locale);
---
>             long localInstant = iZone.convertUTCToLocal(instant);
>             return iField.getAsShortText(localInstant, locale);
395,397c429,437
<             int offset = getOffsetToAdd(instant);
<             instant = iField.add(instant + offset, value);
<             return instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant));
---
>             if (iTimeField) {
>                 int offset = getOffsetToAdd(instant);
>                 long localInstant = iField.add(instant + offset, value);
>                 return localInstant - offset;
>             } else {
>                long localInstant = iZone.convertUTCToLocal(instant);
>                localInstant = iField.add(localInstant, value);
>                return iZone.convertLocalToUTC(localInstant, false, instant);
>             }
401,403c441,449
<             int offset = getOffsetToAdd(instant);
<             instant = iField.add(instant + offset, value);
<             return instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant));
---
>             if (iTimeField) {
>                 int offset = getOffsetToAdd(instant);
>                 long localInstant = iField.add(instant + offset, value);
>                 return localInstant - offset;
>             } else {
>                long localInstant = iZone.convertUTCToLocal(instant);
>                localInstant = iField.add(localInstant, value);
>                return iZone.convertLocalToUTC(localInstant, false, instant);
>             }
407,409c453,461
<             int offset = getOffsetToAdd(instant);
<             instant = iField.addWrapField(instant + offset, value);
<             return instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant));
---
>             if (iTimeField) {
>                 int offset = getOffsetToAdd(instant);
>                 long localInstant = iField.addWrapField(instant + offset, value);
>                 return localInstant - offset;
>             } else {
>                 long localInstant = iZone.convertUTCToLocal(instant);
>                 localInstant = iField.addWrapField(localInstant, value);
>                 return iZone.convertLocalToUTC(localInstant, false, instant);
>             }
413,423c465,472
<             long offset = getOffsetToAdd(instant);
< 
<             instant = iField.set(instant + offset, value);
<             long offsetFromLocal = getOffsetFromLocalToSubtract(instant);
<             instant -= offsetFromLocal;
< 
<             if (offset != offsetFromLocal) {
<                 if (get(instant) != value) {
<                     throw new IllegalFieldValueException
<                         (iField.getType(), new Integer(value), null, null);
<                 }
---
>             long localInstant = iZone.convertUTCToLocal(instant);
>             localInstant = iField.set(localInstant, value);
>             long result = iZone.convertLocalToUTC(localInstant, false, instant);
>             if (get(result) != value) {
>                 throw new IllegalFieldValueException(iField.getType(), new Integer(value),
>                     "Illegal instant due to time zone offset transition: " +
>                     DateTimeFormat.forPattern("yyyy-MM-dd'T'HH:mm:ss.SSS").print(new Instant(localInstant)) +
>                     " (" + iZone.getID() + ")");
425,426c474
< 
<             return instant;
---
>             return result;
430d477
<             instant = iField.set(addOffset(instant), text, locale);
432c479,481
<             return instant - getOffsetFromLocalToSubtract(instant);
---
>             long localInstant = iZone.convertUTCToLocal(instant);
>             localInstant = iField.set(localInstant, text, locale);
>             return iZone.convertLocalToUTC(localInstant, false, instant);
458c507,508
<             return iField.isLeap(addOffset(instant));
---
>             long localInstant = iZone.convertUTCToLocal(instant);
>             return iField.isLeap(localInstant);
462c512,513
<             return iField.getLeapAmount(addOffset(instant));
---
>             long localInstant = iZone.convertUTCToLocal(instant);
>             return iField.getLeapAmount(localInstant);
470,472c521,529
<             int offset = getOffsetToAdd(instant);
<             instant = iField.roundFloor(instant + offset);
<             return instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant));
---
>             if (iTimeField) {
>                 int offset = getOffsetToAdd(instant);
>                 instant = iField.roundFloor(instant + offset);
>                 return instant - offset;
>             } else {
>                 long localInstant = iZone.convertUTCToLocal(instant);
>                 localInstant = iField.roundFloor(localInstant);
>                 return iZone.convertLocalToUTC(localInstant, false, instant);
>             }
476,478c533,541
<             int offset = getOffsetToAdd(instant);
<             instant = iField.roundCeiling(instant + offset);
<             return instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant));
---
>             if (iTimeField) {
>                 int offset = getOffsetToAdd(instant);
>                 instant = iField.roundCeiling(instant + offset);
>                 return instant - offset;
>             } else {
>                 long localInstant = iZone.convertUTCToLocal(instant);
>                 localInstant = iField.roundCeiling(localInstant);
>                 return iZone.convertLocalToUTC(localInstant, false, instant);
>             }
482c545,546
<             return iField.remainder(addOffset(instant));
---
>             long localInstant = iZone.convertUTCToLocal(instant);
>             return iField.remainder(localInstant);
490c554,555
<             return iField.getMinimumValue(addOffset(instant));
---
>             long localInstant = iZone.convertUTCToLocal(instant);
>             return iField.getMinimumValue(localInstant);
506c571,572
<             return iField.getMaximumValue(addOffset(instant));
---
>             long localInstant = iZone.convertUTCToLocal(instant);
>             return iField.getMaximumValue(localInstant);
533,552d598
<         }
< 
<         private int getOffsetFromLocalToSubtract(long instant) {
<             int offset = this.iZone.getOffsetFromLocal(instant);
<             long diff = instant - offset;
<             
<             if ((instant ^ diff) < 0 && (instant ^ offset) < 0) {
<                 throw new ArithmeticException("Subtracting time zone offset caused overflow");
<             }
<             return offset;
<         }
< 
<         private long addOffset(long instant) {
<             int offset = this.iZone.getOffset(instant);
<             long sum = instant + offset;
<             
<             if ((instant ^ sum) < 0 && (instant ^ offset) >= 0) {
<                 throw new ArithmeticException("Adding time zone offset caused overflow");
<             }
<             return sum;
