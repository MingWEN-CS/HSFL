64,65c64,65
< import org.joda.time.field.AbstractDateTimeField;
< import org.joda.time.field.AbstractDurationField;
---
> import org.joda.time.field.BaseDateTimeField;
> import org.joda.time.field.BaseDurationField;
119c119
<     public DateTimeZone getDateTimeZone() {
---
>     public DateTimeZone getZone() {
127c127
<     public Chronology withDateTimeZone(DateTimeZone zone) {
---
>     public Chronology withZone(DateTimeZone zone) {
169c169
<                           (instant + getDateTimeZone().getOffset(instant),
---
>                           (instant + getZone().getOffset(instant),
187c187
<         DateTimeZone zone = getDateTimeZone();
---
>         DateTimeZone zone = getZone();
251c251
<         ZonedDurationField zonedField = new ZonedDurationField(field, getDateTimeZone());
---
>         ZonedDurationField zonedField = new ZonedDurationField(field, getZone());
264c264
<             new ZonedDateTimeField(field, getDateTimeZone(),
---
>             new ZonedDateTimeField(field, getZone(),
273c273
<         return "ZonedChronology[" + getBase() + ", " + getDateTimeZone().getID() + ']';
---
>         return "ZonedChronology[" + getBase() + ", " + getZone().getID() + ']';
284c284
<     static class ZonedDurationField extends AbstractDurationField {
---
>     static class ZonedDurationField extends BaseDurationField {
358c358
<     static final class ZonedDateTimeField extends AbstractDateTimeField {
---
>     static final class ZonedDateTimeField extends BaseDateTimeField {
