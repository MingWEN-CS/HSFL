63c63
< import org.joda.time.property.MutableDateTimeFieldProperty;
---
> import org.joda.time.property.ReadWritableInstantFieldProperty;
918,919c918,919
<     public MutableDateTimeFieldProperty era() {
<         return new MutableDateTimeFieldProperty(this, getChronology().era());
---
>     public ReadWritableInstantFieldProperty era() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().era());
927,928c927,928
<     public MutableDateTimeFieldProperty centuryOfEra() {
<         return new MutableDateTimeFieldProperty(this, getChronology().centuryOfEra());
---
>     public ReadWritableInstantFieldProperty centuryOfEra() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().centuryOfEra());
936,937c936,937
<     public MutableDateTimeFieldProperty yearOfCentury() {
<         return new MutableDateTimeFieldProperty(this, getChronology().yearOfCentury());
---
>     public ReadWritableInstantFieldProperty yearOfCentury() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().yearOfCentury());
945,946c945,946
<     public MutableDateTimeFieldProperty yearOfEra() {
<         return new MutableDateTimeFieldProperty(this, getChronology().yearOfEra());
---
>     public ReadWritableInstantFieldProperty yearOfEra() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().yearOfEra());
954,955c954,955
<     public MutableDateTimeFieldProperty year() {
<         return new MutableDateTimeFieldProperty(this, getChronology().year());
---
>     public ReadWritableInstantFieldProperty year() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().year());
963,964c963,964
<     public MutableDateTimeFieldProperty weekyear() {
<         return new MutableDateTimeFieldProperty(this, getChronology().weekyear());
---
>     public ReadWritableInstantFieldProperty weekyear() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().weekyear());
972,973c972,973
<     public MutableDateTimeFieldProperty monthOfYear() {
<         return new MutableDateTimeFieldProperty(this, getChronology().monthOfYear());
---
>     public ReadWritableInstantFieldProperty monthOfYear() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().monthOfYear());
981,982c981,982
<     public MutableDateTimeFieldProperty weekOfWeekyear() {
<         return new MutableDateTimeFieldProperty(this, getChronology().weekOfWeekyear());
---
>     public ReadWritableInstantFieldProperty weekOfWeekyear() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().weekOfWeekyear());
990,991c990,991
<     public MutableDateTimeFieldProperty dayOfYear() {
<         return new MutableDateTimeFieldProperty(this, getChronology().dayOfYear());
---
>     public ReadWritableInstantFieldProperty dayOfYear() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().dayOfYear());
1001,1002c1001,1002
<     public MutableDateTimeFieldProperty dayOfMonth() {
<         return new MutableDateTimeFieldProperty(this, getChronology().dayOfMonth());
---
>     public ReadWritableInstantFieldProperty dayOfMonth() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().dayOfMonth());
1012,1013c1012,1013
<     public MutableDateTimeFieldProperty dayOfWeek() {
<         return new MutableDateTimeFieldProperty(this, getChronology().dayOfWeek());
---
>     public ReadWritableInstantFieldProperty dayOfWeek() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().dayOfWeek());
1023,1024c1023,1024
<     public MutableDateTimeFieldProperty hourOfDay() {
<         return new MutableDateTimeFieldProperty(this, getChronology().hourOfDay());
---
>     public ReadWritableInstantFieldProperty hourOfDay() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().hourOfDay());
1032,1033c1032,1033
<     public MutableDateTimeFieldProperty minuteOfDay() {
<         return new MutableDateTimeFieldProperty(this, getChronology().minuteOfDay());
---
>     public ReadWritableInstantFieldProperty minuteOfDay() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().minuteOfDay());
1041,1042c1041,1042
<     public MutableDateTimeFieldProperty minuteOfHour() {
<         return new MutableDateTimeFieldProperty(this, getChronology().minuteOfHour());
---
>     public ReadWritableInstantFieldProperty minuteOfHour() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().minuteOfHour());
1050,1051c1050,1051
<     public MutableDateTimeFieldProperty secondOfDay() {
<         return new MutableDateTimeFieldProperty(this, getChronology().secondOfDay());
---
>     public ReadWritableInstantFieldProperty secondOfDay() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().secondOfDay());
1059,1060c1059,1060
<     public MutableDateTimeFieldProperty secondOfMinute() {
<         return new MutableDateTimeFieldProperty(this, getChronology().secondOfMinute());
---
>     public ReadWritableInstantFieldProperty secondOfMinute() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().secondOfMinute());
1068,1069c1068,1069
<     public MutableDateTimeFieldProperty millisOfDay() {
<         return new MutableDateTimeFieldProperty(this, getChronology().millisOfDay());
---
>     public ReadWritableInstantFieldProperty millisOfDay() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().millisOfDay());
1077,1078c1077,1078
<     public MutableDateTimeFieldProperty millisOfSecond() {
<         return new MutableDateTimeFieldProperty(this, getChronology().millisOfSecond());
---
>     public ReadWritableInstantFieldProperty millisOfSecond() {
>         return new ReadWritableInstantFieldProperty(this, getChronology().millisOfSecond());
