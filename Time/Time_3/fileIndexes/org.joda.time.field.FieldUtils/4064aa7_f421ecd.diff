82a83,97
>     public static int safeAdd(int val1, int val2) {
>         long total = ((long) val1) + ((long) val2);
>         if (total < Integer.MIN_VALUE || total > Integer.MAX_VALUE) {
>             throw new ArithmeticException("The calculation caused an overflow: " + val1 +" + " + val2);
>         }
>         return (int) total;
>     }
>     
>     
> 
> 
> 
> 
> 
> 
100a116,132
>     public static long safeSubtract(long val1, long val2) {
>         if (val2 == Long.MIN_VALUE) {
>             if (val1 <= 0L) {
>                 return (val1 - val2);
>             }
>             throw new ArithmeticException("The calculation caused an overflow: " + val1 +" - " + val2);
>         }
>         return safeAdd(val1, -val2);
>     }
>     
>     
> 
> 
> 
> 
> 
> 
123a156,157
>     
>     
124a159,168
> 
> 
> 
> 
> 
>     public static int safeMultiplyToInt(long val1, long val2) {
>         long val = FieldUtils.safeMultiply(val1, val2);
>         return FieldUtils.safeToInt(val);
>     }
>     
