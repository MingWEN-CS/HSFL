318c318
<         return UnsupportedDateTimeField.getInstance("millisOfSecond", millis());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.millisOfSecond(), millis());
327c327
<         return UnsupportedDateTimeField.getInstance("millisOfDay", millis());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.millisOfDay(), millis());
347c347
<         return UnsupportedDateTimeField.getInstance("secondOfMinute", seconds());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.secondOfMinute(), seconds());
356c356
<         return UnsupportedDateTimeField.getInstance("secondOfDay", seconds());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.secondOfDay(), seconds());
376c376
<         return UnsupportedDateTimeField.getInstance("minuteOfHour", minutes());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.minuteOfHour(), minutes());
385c385
<         return UnsupportedDateTimeField.getInstance("minuteOfDay", minutes());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.minuteOfDay(), minutes());
405c405
<         return UnsupportedDateTimeField.getInstance("hourOfDay", hours());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.hourOfDay(), hours());
414c414
<         return UnsupportedDateTimeField.getInstance("clockhourOfDay", hours());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.clockhourOfDay(), hours());
423c423
<         return UnsupportedDateTimeField.getInstance("hourOfHalfday", hours());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.hourOfHalfday(), hours());
432c432
<         return UnsupportedDateTimeField.getInstance("clockhourOfHalfday", hours());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.clockhourOfHalfday(), hours());
442c442
<             ("halfdayOfDay", UnsupportedDurationField.getInstance("halfdays"));
---
>             (DateTimeFieldType.halfdayOfDay(), UnsupportedDurationField.getInstance("halfdays"));
466c466
<         return UnsupportedDateTimeField.getInstance("dayOfWeek", days());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.dayOfWeek(), days());
475c475
<         return UnsupportedDateTimeField.getInstance("dayOfMonth", days());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.dayOfMonth(), days());
484c484
<         return UnsupportedDateTimeField.getInstance("dayOfYear", days());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.dayOfYear(), days());
504c504
<         return UnsupportedDateTimeField.getInstance("weekOfWeekyear", weeks());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.weekOfWeekyear(), weeks());
522c522
<         return UnsupportedDateTimeField.getInstance("weekyear", weekyears());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.weekyear(), weekyears());
542c542
<         return UnsupportedDateTimeField.getInstance("monthOfYear", months());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.monthOfYear(), months());
562c562
<         return UnsupportedDateTimeField.getInstance("year", years());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.year(), years());
571c571
<         return UnsupportedDateTimeField.getInstance("yearOfEra", years());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.yearOfEra(), years());
580c580
<         return UnsupportedDateTimeField.getInstance("yearOfCentury", years());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.yearOfCentury(), years());
598c598
<         return UnsupportedDateTimeField.getInstance("centuryOfEra", centuries());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.centuryOfEra(), centuries());
616c616
<         return UnsupportedDateTimeField.getInstance("era", eras());
---
>         return UnsupportedDateTimeField.getInstance(DateTimeFieldType.era(), eras());
