




















































package org.joda.time.field;

import java.io.Serializable;
import org.joda.time.DurationField;















public abstract class BaseDurationField extends DurationField implements Serializable {

    
    private static final long serialVersionUID = -2554245107589433218L;

    
    private final String iName;

    protected BaseDurationField(String name) {
        super();
        if (name == null) {
            throw new IllegalArgumentException("The name must not be null");
        }
        iName = name;
    }

    public final String getName() {
        return iName;
    }

    


    public final boolean isSupported() {
        return true;
    }

    
    







    public int getValue(long duration) {
        return FieldUtils.safeToInt(getValueAsLong(duration));
    }

    







    public long getValueAsLong(long duration) {
        return duration / getUnitMillis();
    }

    















    public int getValue(long duration, long instant) {
        return FieldUtils.safeToInt(getValueAsLong(duration, instant));
    }

    







    public long getMillis(int value) {
        return value * getUnitMillis();
    }

    







    public long getMillis(long value) {
        return value * getUnitMillis();
    }

    
    
    public int getDifference(long minuendInstant, long subtrahendInstant) {
        return FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant, subtrahendInstant));
    }

    
    public int compareTo(Object durationField) {
        DurationField otherField = (DurationField) durationField;
        long otherMillis = otherField.getUnitMillis();
        long thisMillis = getUnitMillis();
        
        if (thisMillis == otherMillis) {
            return 0;
        }
        if (thisMillis < otherMillis) {
            return -1;
        } else {
            return 1;
        }
    }

    




    public String toString() {
        return "DurationField[" + getName() + ']';
    }

}
