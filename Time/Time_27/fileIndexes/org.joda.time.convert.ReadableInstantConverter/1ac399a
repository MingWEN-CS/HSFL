




















































package org.joda.time.convert;

import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.ReadableInstant;
import org.joda.time.chrono.ISOChronology;







class ReadableInstantConverter extends AbstractConverter
        implements InstantConverter, PartialConverter {

    


    static final ReadableInstantConverter INSTANCE = new ReadableInstantConverter();
    
    


    protected ReadableInstantConverter() {
        super();
    }

    
    





    public long getInstantMillis(Object object) {
        return ((ReadableInstant) object).getMillis();
    }
    
    







    public Chronology getChronology(Object object) {
        Chronology chrono = ((ReadableInstant) object).getChronology();
        if (chrono == null) {
            return ISOChronology.getInstance();
        }
        return chrono;
    }
    
    










    public Chronology getChronology(Object object, DateTimeZone zone) {
        Chronology chrono = ((ReadableInstant) object).getChronology();
        if (chrono == null) {
            return ISOChronology.getInstance(zone);
        }
        DateTimeZone chronoZone = chrono.getZone();
        if (chronoZone != zone) {
            chrono = chrono.withZone(zone);
            if (chrono == null) {
                return ISOChronology.getInstance(zone);
            }
        }
        return chrono;
    }

    
    




    public Class getSupportedType() {
        return ReadableInstant.class;
    }

}
