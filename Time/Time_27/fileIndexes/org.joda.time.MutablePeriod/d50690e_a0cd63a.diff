83c83
<         super(0L, null);
---
>         super(0L, null, null);
92c92
<         super(0L, type);
---
>         super(0L, type, null);
102a103,105
>     public MutablePeriod(int hours, int minutes, int seconds, int millis) {
>         super(0, 0, 0, 0, hours, minutes, seconds, millis, PeriodType.time());
>     }
103a107
>     
114a119,122
>     public MutablePeriod(int years, int months, int weeks, int days,
>                   int hours, int minutes, int seconds, int millis) {
>         super(years, months, weeks, days, hours, minutes, seconds, millis, PeriodType.standard());
>     }
115a124
>     
121,122c130,140
<     public MutablePeriod(long duration) {
<         super(duration, null);
---
> 
> 
> 
> 
> 
> 
> 
> 
>     public MutablePeriod(int years, int months, int weeks, int days,
>                     int hours, int minutes, int seconds, int millis, PeriodType type) {
>         super(years, months, weeks, days, hours, minutes, seconds, millis, type);
142,143c160,170
<     public MutablePeriod(long duration, PeriodType type) {
<         super(duration, type);
---
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public MutablePeriod(long duration) {
>         super(duration, null, null);
155,156c182,190
<     public MutablePeriod(int hours, int minutes, int seconds, int millis) {
<         super(0, 0, 0, 0, hours, minutes, seconds, millis, null);
---
> 
> 
> 
> 
> 
> 
> 
>     public MutablePeriod(long duration, PeriodType type) {
>         super(duration, type, null);
171,173c205,211
<     public MutablePeriod(int years, int months, int weeks, int days,
<                     int hours, int minutes, int seconds, int millis) {
<         super(years, months, weeks, days, hours, minutes, seconds, millis, null);
---
> 
> 
> 
> 
> 
>     public MutablePeriod(long duration, Chronology chronology) {
>         super(duration, null, chronology);
190,192c228,232
<     public MutablePeriod(int years, int months, int weeks, int days,
<                     int hours, int minutes, int seconds, int millis, PeriodType type) {
<         super(years, months, weeks, days, hours, minutes, seconds, millis, type);
---
> 
> 
> 
>     public MutablePeriod(long duration, PeriodType type, Chronology chronology) {
>         super(duration, type, chronology);
203c243
<         super(startInstant, endInstant, null);
---
>         super(startInstant, endInstant, null, null);
213d252
< 
215c254,278
<         super(startInstant, endInstant, type);
---
>         super(startInstant, endInstant, type, null);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
>     public MutablePeriod(long startInstant, long endInstant, Chronology chrono) {
>         super(startInstant, endInstant, null, chrono);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
>     public MutablePeriod(long startInstant, long endInstant, PeriodType type, Chronology chrono) {
>         super(startInstant, endInstant, type, chrono);
236d298
< 
250c312
<         super(period, null);
---
>         super(period, null, null);
263c325,338
<         super(period, type);
---
>         super(period, type, null);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public MutablePeriod(Object period, Chronology chrono) {
>         super(period, null, chrono);
266a342,368
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public MutablePeriod(Object period, PeriodType type, Chronology chrono) {
>         super(period, type, chrono);
>     }
> 
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public void set(DurationFieldType field, int value) {
>         super.setField(field, value);
>     }
> 
274,282c376
<         if (period == null) {
<             setPeriod(0L);
<         } else {
<             setPeriod(
<                 period.getYears(), period.getMonths(),
<                 period.getWeeks(), period.getDays(),
<                 period.getHours(), period.getMinutes(),
<                 period.getSeconds(), period.getMillis());
<         }
---
>         super.setPeriod(period);
299,301c393,394
<                             int hours, int minutes, int seconds, int millis) {
<         super.setPeriod(years, months, weeks, days,
<                           hours, minutes, seconds, millis);
---
>                           int hours, int minutes, int seconds, int millis) {
>         super.setPeriod(years, months, weeks, days, hours, minutes, seconds, millis);
310a404,414
>         setPeriod(interval, null);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
>     public void setPeriod(ReadableInterval interval, Chronology chrono) {
314c418
<             setPeriod(interval.getStartMillis(), interval.getEndMillis());
---
>             setPeriod(interval.getStartMillis(), interval.getEndMillis(), chrono);
326c430,442
<         super.setPeriod(startInstant, endInstant);
---
>         setPeriod(startInstant, endInstant, null);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
>     public void setPeriod(long startInstant, long endInstant, Chronology chrono) {
>         super.setPeriod(startInstant, endInstant, chrono);
339a456,470
>         setPeriod(duration, null);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public void setPeriod(ReadableDuration duration, Chronology chrono) {
341c472
<         setPeriod(durationMillis);
---
>         setPeriod(durationMillis, chrono);
355c486
<         super.setPeriod(duration);
---
>         setPeriod(duration, null);
356a488,503
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public void setPeriod(long duration, Chronology chrono) {
>         super.setPeriod(duration, chrono);
>     }
> 
358a506,519
> 
> 
> 
> 
> 
> 
> 
> 
>     public void add(DurationFieldType field, int value) {
>         if (value != 0) {
>             set(field, FieldUtils.safeAdd(get(field), value));
>         }
>     }
> 
369,378c530
<             setPeriod(
<                 FieldUtils.safeAdd(getYears(), period.getYears()),
<                 FieldUtils.safeAdd(getMonths(), period.getMonths()),
<                 FieldUtils.safeAdd(getWeeks(), period.getWeeks()),
<                 FieldUtils.safeAdd(getDays(), period.getDays()),
<                 FieldUtils.safeAdd(getHours(), period.getHours()),
<                 FieldUtils.safeAdd(getMinutes(), period.getMinutes()),
<                 FieldUtils.safeAdd(getSeconds(), period.getSeconds()),
<                 FieldUtils.safeAdd(getMillis(), period.getMillis())
<             );
---
>             addPeriod(period);
448a601,628
>     
> 
> 
> 
> 
>     public int getYears() {
>         return getPeriodType().getYears(this);
>     }
> 
>     
> 
> 
> 
> 
>     public int getMonths() {
>         return getPeriodType().getMonths(this);
>     }
> 
>     
> 
> 
> 
> 
>     public int getWeeks() {
>         return getPeriodType().getWeeks(this);
>     }
> 
>     
452a633,667
>     public int getDays() {
>         return getPeriodType().getDays(this);
>     }
> 
>     
>     
> 
> 
> 
> 
>     public int getHours() {
>         return getPeriodType().getHours(this);
>     }
> 
>     
> 
> 
> 
> 
>     public int getMinutes() {
>         return getPeriodType().getMinutes(this);
>     }
> 
>     
> 
> 
> 
> 
>     public int getSeconds() {
>         return getPeriodType().getSeconds(this);
>     }
> 
>     
> 
> 
455,456c670,671
<     public void normalize() {
<         setPeriod(toDurationMillis());
---
>     public int getMillis() {
>         return getPeriodType().getMillis(this);
467c682
<         super.setYears(years);
---
>         super.setField(DurationFieldType.years(), years);
491c706
<         super.setMonths(months);
---
>         super.setField(DurationFieldType.months(), months);
515c730
<         super.setWeeks(weeks);
---
>         super.setField(DurationFieldType.weeks(), weeks);
539c754
<         super.setDays(days);
---
>         super.setField(DurationFieldType.days(), days);
563c778
<         super.setHours(hours);
---
>         super.setField(DurationFieldType.hours(), hours);
587c802
<         super.setMinutes(minutes);
---
>         super.setField(DurationFieldType.minutes(), minutes);
611c826
<         super.setSeconds(seconds);
---
>         super.setField(DurationFieldType.seconds(), seconds);
635c850
<         super.setMillis(millis);
---
>         super.setField(DurationFieldType.millis(), millis);
