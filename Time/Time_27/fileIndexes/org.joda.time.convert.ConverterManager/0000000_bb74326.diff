1a2,302
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> package org.joda.time.convert;
> 
> import java.util.ArrayList;
> import java.util.Arrays;
> import java.util.List;
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> public final class ConverterManager {
> 
>     
> 
> 
>     private static ConverterManager INSTANCE;
> 
>     public static ConverterManager getInstance() {
>         if (INSTANCE == null) {
>             INSTANCE = new ConverterManager();
>         }
>         return INSTANCE;
>     }
>     
>     private ConverterSet iInstantConverters;
>     private ConverterSet iDurationConverters;
>     
>     
> 
> 
>     protected ConverterManager() {
>         super();
> 
>         iInstantConverters = new ConverterSet(new Converter[] {
>             ReadableInstantConverter.INSTANCE,
>             PartialInstantConverter.INSTANCE,
>             StringConverter.INSTANCE,
>             CalendarConverter.INSTANCE,
>             DateConverter.INSTANCE,
>             LongConverter.INSTANCE,
>         });
> 
>         iDurationConverters = new ConverterSet(new Converter[] {
>             ReadableDurationConverter.INSTANCE,
>             LongConverter.INSTANCE,
>         });
>     }
>     
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public InstantConverter getInstantConverter(Object object) {
>         InstantConverter converter =
>             (InstantConverter)iInstantConverters.select(object == null ? null : object.getClass());
>         if (converter != null) {
>             return converter;
>         }
>         throw new IllegalArgumentException("No instant converter found for type: " +
>             (object == null ? "null" : object.getClass().getName()));
>     }
>     
>     
>     
> 
> 
> 
> 
>     public InstantConverter[] getInstantConverters() {
>         ConverterSet set = iInstantConverters;
>         InstantConverter[] converters = new InstantConverter[set.size()];
>         set.copyInto(converters);
>         return converters;
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public InstantConverter addInstantConverter(InstantConverter converter) {
>         if (converter == null) {
>             return null;
>         }
>         InstantConverter[] removed = new InstantConverter[1];
>         iInstantConverters = iInstantConverters.add(converter, removed);
>         return removed[0];
>     }
>     
>     
> 
> 
> 
> 
> 
> 
>     public InstantConverter removeInstantConverter(InstantConverter converter) {
>         if (converter == null) {
>             return null;
>         }
>         InstantConverter[] removed = new InstantConverter[1];
>         iInstantConverters = iInstantConverters.remove(converter, removed);
>         return removed[0];
>     }
>     
>     
> 
> 
> 
> 
> 
> 
>     public InstantConverter removeInstantConverter(int index) {
>         InstantConverter[] removed = new InstantConverter[1];
>         iInstantConverters = iInstantConverters.remove(index, removed);
>         return removed[0];
>     }
> 
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public DurationConverter getDurationConverter(Object object) {
>         DurationConverter converter =
>             (DurationConverter)iDurationConverters.select(object == null ? null : object.getClass());
>         if (converter != null) {
>             return converter;
>         }
>         throw new IllegalArgumentException("No duration converter found for type: " +
>             (object == null ? "null" : object.getClass().getName()));
>     }
>     
>     
>     
> 
> 
> 
> 
>     public DurationConverter[] getDurationConverters() {
>         ConverterSet set = iDurationConverters;
>         DurationConverter[] converters = new DurationConverter[set.size()];
>         set.copyInto(converters);
>         return converters;
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DurationConverter addDurationConverter(DurationConverter converter) {
>         if (converter == null) {
>             return null;
>         }
>         DurationConverter[] removed = new DurationConverter[1];
>         iDurationConverters = iDurationConverters.add(converter, removed);
>         return removed[0];
>     }
>     
>     
> 
> 
> 
> 
> 
> 
>     public DurationConverter removeDurationConverter(DurationConverter converter) {
>         if (converter == null) {
>             return null;
>         }
>         DurationConverter[] removed = new DurationConverter[1];
>         iDurationConverters = iDurationConverters.remove(converter, removed);
>         return removed[0];
>     }
>     
>     
> 
> 
> 
> 
> 
> 
>     public DurationConverter removeDurationConverter(int index) {
>         DurationConverter[] removed = new DurationConverter[1];
>         iDurationConverters = iDurationConverters.remove(index, removed);
>         return removed[0];
>     }
> 
>     
>     
> 
> 
>     public String toString() {
>         return "ConverterManager[" +
>             iInstantConverters.size() + " instant converters," +
>             iDurationConverters.size() + " duration converters]";
>     }
> 
> }
