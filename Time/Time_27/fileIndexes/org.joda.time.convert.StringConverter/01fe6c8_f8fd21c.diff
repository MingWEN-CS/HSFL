57a58,61
> import org.joda.time.DurationType;
> import org.joda.time.MutableDuration;
> import org.joda.time.ReadableDuration;
> import org.joda.time.ReadableInstant;
58a63
> import org.joda.time.ReadWritableInterval;
72c77,78
< class StringConverter extends AbstractConverter implements InstantConverter, DurationConverter {
---
> class StringConverter extends AbstractConverter
>     implements InstantConverter, DurationConverter, IntervalConverter {
154a161,225
> 
> 
> 
> 
> 
> 
>     public DurationType getDurationType(Object object) {
>         String str = (String) object;
>         if (str.indexOf('W') >= 0) {
>             return DurationType.getYearWeekType();
>         }
>         return DurationType.getYearMonthType();
>     }
> 
>     public void setInto(ReadWritableInterval writableInterval, Object object) {
>         String str = (String) object;
> 
>         int separator = str.indexOf('/');
>         if (separator < 0) {
>             throw new IllegalArgumentException("Format requires a '/' separator: " + str);
>         }
> 
>         String leftStr = str.substring(0, separator);
>         if (leftStr.length() <= 0) {
>             throw new IllegalArgumentException();
>         }
>         String rightStr = str.substring(separator + 1);
>         if (rightStr.length() <= 0) {
>             throw new IllegalArgumentException();
>         }
> 
>         long startInstant;
>         ReadableDuration duration;
> 
>         char c = leftStr.charAt(0);
>         if (c == 'P' || c == 'p') {
>             startInstant = 0;
>             duration = ISODurationFormat.getInstance().standard()
>                 .parseDuration(getDurationType(leftStr), leftStr);
>         } else {
>             startInstant = ISODateTimeFormat.getInstanceUTC().dateTimeParser().parseMillis(leftStr);
>             duration = null;
>         }
> 
>         c = rightStr.charAt(0);
>         if (c == 'P' || c == 'p') {
>             if (duration != null) {
>                 throw new IllegalArgumentException("Interval composed of two durations: " + str);
>             }
>             duration = ISODurationFormat.getInstance().standard()
>                 .parseDuration(getDurationType(rightStr), rightStr);
>             writableInterval.setStartMillis(startInstant);
>             writableInterval.setDurationAfterStart(duration);
>         } else {
>             long endInstant = ISODateTimeFormat.getInstanceUTC().dateTimeParser().parseMillis(rightStr);
>             writableInterval.setEndMillis(endInstant);
>             if (duration == null) {
>                 writableInterval.setStartMillis(startInstant);
>             } else {
>                 writableInterval.setDurationBeforeEnd(duration);
>             }
>         }
>     }
> 
>     
163c234
<     
---
> 
