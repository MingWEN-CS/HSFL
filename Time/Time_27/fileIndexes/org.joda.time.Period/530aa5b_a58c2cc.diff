87a88,199
>     
> 
> 
> 
> 
> 
> 
>     public static Period years(int years) {
>         return new Period(new int[] {years}, PeriodType.standard());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
>     public static Period months(int months) {
>         return new Period(new int[] {months}, PeriodType.standard());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
>     public static Period weeks(int weeks) {
>         return new Period(new int[] {weeks}, PeriodType.standard());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
>     public static Period days(int days) {
>         return new Period(new int[] {days}, PeriodType.standard());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
>     public static Period hours(int hours) {
>         return new Period(new int[] {hours}, PeriodType.standard());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
>     public static Period minutes(int minutes) {
>         return new Period(new int[] {minutes}, PeriodType.standard());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
>     public static Period seconds(int seconds) {
>         return new Period(new int[] {seconds}, PeriodType.standard());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
>     public static Period millis(int millis) {
>         return new Period(new int[] {millis}, PeriodType.standard());
>     }
> 
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period() {
>         super(0L, null, null);
>     }
> 
>     
96c208
<         super(0, 0, 0, 0, hours, minutes, seconds, millis, PeriodType.time());
---
>         super(0, 0, 0, 0, hours, minutes, seconds, millis, PeriodType.standard());
129a242,245
> 
> 
> 
> 
347a464,473
> 
> 
> 
> 
> 
>     private Period(int[] values, PeriodType type) {
>         super(values, type);
>     }
> 
>     
365c491
<         return getPeriodType().getYears(this);
---
>         return getPeriodType().getIndexedField(this, PeriodType.YEAR_INDEX);
374c500
<         return getPeriodType().getMonths(this);
---
>         return getPeriodType().getIndexedField(this, PeriodType.MONTH_INDEX);
383c509
<         return getPeriodType().getWeeks(this);
---
>         return getPeriodType().getIndexedField(this, PeriodType.WEEK_INDEX);
392c518
<         return getPeriodType().getDays(this);
---
>         return getPeriodType().getIndexedField(this, PeriodType.DAY_INDEX);
402c528
<         return getPeriodType().getHours(this);
---
>         return getPeriodType().getIndexedField(this, PeriodType.HOUR_INDEX);
411c537
<         return getPeriodType().getMinutes(this);
---
>         return getPeriodType().getIndexedField(this, PeriodType.MINUTE_INDEX);
420c546
<         return getPeriodType().getSeconds(this);
---
>         return getPeriodType().getIndexedField(this, PeriodType.SECOND_INDEX);
429c555
<         return getPeriodType().getMillis(this);
---
>         return getPeriodType().getIndexedField(this, PeriodType.MILLI_INDEX);
446a573,838
>     }
> 
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period withYears(int years) {
>         int[] values = getValues();  
>         getPeriodType().setIndexedField(this, PeriodType.YEAR_INDEX, values, years);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period withMonths(int months) {
>         int[] values = getValues();  
>         getPeriodType().setIndexedField(this, PeriodType.MONTH_INDEX, values, months);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period withWeeks(int weeks) {
>         int[] values = getValues();  
>         getPeriodType().setIndexedField(this, PeriodType.WEEK_INDEX, values, weeks);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period withDays(int days) {
>         int[] values = getValues();  
>         getPeriodType().setIndexedField(this, PeriodType.DAY_INDEX, values, days);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period withHours(int hours) {
>         int[] values = getValues();  
>         getPeriodType().setIndexedField(this, PeriodType.HOUR_INDEX, values, hours);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period withMinutes(int minutes) {
>         int[] values = getValues();  
>         getPeriodType().setIndexedField(this, PeriodType.MINUTE_INDEX, values, minutes);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period withSeconds(int seconds) {
>         int[] values = getValues();  
>         getPeriodType().setIndexedField(this, PeriodType.SECOND_INDEX, values, seconds);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period withMillis(int millis) {
>         int[] values = getValues();  
>         getPeriodType().setIndexedField(this, PeriodType.MILLI_INDEX, values, millis);
>         return new Period(values, getPeriodType());
>     }
> 
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period plusYears(int years) {
>         if (years == 0) {
>             return this;
>         }
>         int[] values = getValues();  
>         getPeriodType().addIndexedField(this, PeriodType.YEAR_INDEX, values, years);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period plusMonths(int months) {
>         if (months == 0) {
>             return this;
>         }
>         int[] values = getValues();  
>         getPeriodType().addIndexedField(this, PeriodType.MONTH_INDEX, values, months);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period plusWeeks(int weeks) {
>         if (weeks == 0) {
>             return this;
>         }
>         int[] values = getValues();  
>         getPeriodType().addIndexedField(this, PeriodType.WEEK_INDEX, values, weeks);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period plusDays(int days) {
>         if (days == 0) {
>             return this;
>         }
>         int[] values = getValues();  
>         getPeriodType().addIndexedField(this, PeriodType.DAY_INDEX, values, days);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period plusHours(int hours) {
>         if (hours == 0) {
>             return this;
>         }
>         int[] values = getValues();  
>         getPeriodType().addIndexedField(this, PeriodType.HOUR_INDEX, values, hours);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period plusMinutes(int minutes) {
>         if (minutes == 0) {
>             return this;
>         }
>         int[] values = getValues();  
>         getPeriodType().addIndexedField(this, PeriodType.MINUTE_INDEX, values, minutes);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period plusSeconds(int seconds) {
>         if (seconds == 0) {
>             return this;
>         }
>         int[] values = getValues();  
>         getPeriodType().addIndexedField(this, PeriodType.SECOND_INDEX, values, seconds);
>         return new Period(values, getPeriodType());
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public Period plusMillis(int millis) {
>         if (millis == 0) {
>             return this;
>         }
>         int[] values = getValues();  
>         getPeriodType().addIndexedField(this, PeriodType.MILLI_INDEX, values, millis);
>         return new Period(values, getPeriodType());
