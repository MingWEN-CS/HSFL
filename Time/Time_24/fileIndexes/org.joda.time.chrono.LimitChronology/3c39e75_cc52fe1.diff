29a30
> import org.joda.time.field.FieldUtils;
282,285d282
<     public String toString() {
<         return getBase().toString();
<     }
< 
295a293,341
>     
>     
> 
> 
> 
> 
> 
> 
> 
>     public boolean equals(Object obj) {
>         if (this == obj) {
>             return true;
>         }
>         if (obj instanceof LimitChronology == false) {
>             return false;
>         }
>         LimitChronology chrono = (LimitChronology) obj;
>         return
>             getBase().equals(chrono.getBase()) &&
>             FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()) &&
>             FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit());
>     }
> 
>     
> 
> 
> 
> 
> 
>     public int hashCode() {
>         int hash = 317351877;
>         hash += (getLowerLimit() != null ? getLowerLimit().hashCode() : 0);
>         hash += (getUpperLimit() != null ? getUpperLimit().hashCode() : 0);
>         hash += getBase().hashCode() * 7;
>         return hash;
>     }
> 
>     
> 
> 
> 
> 
>     public String toString() {
>         return "LimitChronology[" + getBase().toString() + ", " +
>             (getLowerLimit() == null ? "NoLimit" : getLowerLimit().toString()) + ", " +
>             (getUpperLimit() == null ? "NoLimit" : getUpperLimit().toString()) + ']';
>     }
> 
>     
