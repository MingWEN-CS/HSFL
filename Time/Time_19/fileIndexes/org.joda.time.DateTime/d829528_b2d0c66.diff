56a57
> import java.util.Locale;
59c60
< import org.joda.time.property.DateTimeFieldProperty;
---
> import org.joda.time.property.AbstractReadableInstantFieldProperty;
401,402c402,403
<     public final DateTimeFieldProperty era() {
<         return new DateTimeFieldProperty(this, getChronology().era());
---
>     public final Property era() {
>         return new Property(this, getChronology().era());
410,411c411,412
<     public final DateTimeFieldProperty centuryOfEra() {
<         return new DateTimeFieldProperty(this, getChronology().centuryOfEra());
---
>     public final Property centuryOfEra() {
>         return new Property(this, getChronology().centuryOfEra());
419,420c420,421
<     public final DateTimeFieldProperty yearOfCentury() {
<         return new DateTimeFieldProperty(this, getChronology().yearOfCentury());
---
>     public final Property yearOfCentury() {
>         return new Property(this, getChronology().yearOfCentury());
428,429c429,430
<     public final DateTimeFieldProperty yearOfEra() {
<         return new DateTimeFieldProperty(this, getChronology().yearOfEra());
---
>     public final Property yearOfEra() {
>         return new Property(this, getChronology().yearOfEra());
437,438c438,439
<     public final DateTimeFieldProperty year() {
<         return new DateTimeFieldProperty(this, getChronology().year());
---
>     public final Property year() {
>         return new Property(this, getChronology().year());
446,447c447,448
<     public final DateTimeFieldProperty weekyear() {
<         return new DateTimeFieldProperty(this, getChronology().weekyear());
---
>     public final Property weekyear() {
>         return new Property(this, getChronology().weekyear());
455,456c456,457
<     public final DateTimeFieldProperty monthOfYear() {
<         return new DateTimeFieldProperty(this, getChronology().monthOfYear());
---
>     public final Property monthOfYear() {
>         return new Property(this, getChronology().monthOfYear());
464,465c465,466
<     public final DateTimeFieldProperty weekOfWeekyear() {
<         return new DateTimeFieldProperty(this, getChronology().weekOfWeekyear());
---
>     public final Property weekOfWeekyear() {
>         return new Property(this, getChronology().weekOfWeekyear());
473,474c474,475
<     public final DateTimeFieldProperty dayOfYear() {
<         return new DateTimeFieldProperty(this, getChronology().dayOfYear());
---
>     public final Property dayOfYear() {
>         return new Property(this, getChronology().dayOfYear());
482,483c483,484
<     public final DateTimeFieldProperty dayOfMonth() {
<         return new DateTimeFieldProperty(this, getChronology().dayOfMonth());
---
>     public final Property dayOfMonth() {
>         return new Property(this, getChronology().dayOfMonth());
491,492c492,493
<     public final DateTimeFieldProperty dayOfWeek() {
<         return new DateTimeFieldProperty(this, getChronology().dayOfWeek());
---
>     public final Property dayOfWeek() {
>         return new Property(this, getChronology().dayOfWeek());
502,503c503,504
<     public final DateTimeFieldProperty hourOfDay() {
<         return new DateTimeFieldProperty(this, getChronology().hourOfDay());
---
>     public final Property hourOfDay() {
>         return new Property(this, getChronology().hourOfDay());
511,512c512,513
<     public final DateTimeFieldProperty minuteOfDay() {
<         return new DateTimeFieldProperty(this, getChronology().minuteOfDay());
---
>     public final Property minuteOfDay() {
>         return new Property(this, getChronology().minuteOfDay());
520,521c521,522
<     public final DateTimeFieldProperty minuteOfHour() {
<         return new DateTimeFieldProperty(this, getChronology().minuteOfHour());
---
>     public final Property minuteOfHour() {
>         return new Property(this, getChronology().minuteOfHour());
529,530c530,531
<     public final DateTimeFieldProperty secondOfDay() {
<         return new DateTimeFieldProperty(this, getChronology().secondOfDay());
---
>     public final Property secondOfDay() {
>         return new Property(this, getChronology().secondOfDay());
538,539c539,540
<     public final DateTimeFieldProperty secondOfMinute() {
<         return new DateTimeFieldProperty(this, getChronology().secondOfMinute());
---
>     public final Property secondOfMinute() {
>         return new Property(this, getChronology().secondOfMinute());
547,548c548,549
<     public final DateTimeFieldProperty millisOfDay() {
<         return new DateTimeFieldProperty(this, getChronology().millisOfDay());
---
>     public final Property millisOfDay() {
>         return new Property(this, getChronology().millisOfDay());
556,557c557,558
<     public final DateTimeFieldProperty millisOfSecond() {
<         return new DateTimeFieldProperty(this, getChronology().millisOfSecond());
---
>     public final Property millisOfSecond() {
>         return new Property(this, getChronology().millisOfSecond());
582a584,823
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static class Property extends AbstractReadableInstantFieldProperty {
>         
>         static final long serialVersionUID = -6983323811635733510L;
>         
>         
>         private final DateTime iInstant;
>         
>         private final DateTimeField iField;
>         
>         
> 
> 
> 
> 
> 
>         Property(DateTime instant, DateTimeField field) {
>             super();
>             iInstant = instant;
>             iField = field;
>         }
>         
>         
>         
> 
> 
> 
> 
>         public DateTimeField getField() {
>             return iField;
>         }
>         
>         
> 
> 
> 
> 
>         public ReadableInstant getReadableInstant() {
>             return iInstant;
>         }
>         
>         
> 
> 
> 
> 
>         public DateTime getDateTime() {
>             return iInstant;
>         }
>         
>         
>         
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>         public DateTime addToCopy(int value) {
>             DateTime instant = iInstant;
>             return instant.withMillis(iField.add(instant.getMillis(), value));
>         }
>         
>         
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>         public DateTime addToCopy(long value) {
>             DateTime instant = iInstant;
>             return instant.withMillis(iField.add(instant.getMillis(), value));
>         }
>         
>         
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>         public DateTime addWrapFieldToCopy(int value) {
>             DateTime instant = iInstant;
>             return instant.withMillis(iField.addWrapField(instant.getMillis(), value));
>         }
>         
>         
>         
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>         public DateTime setCopy(int value) {
>             DateTime instant = iInstant;
>             return instant.withMillis(iField.set(instant.getMillis(), value));
>         }
>         
>         
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>         public DateTime setCopy(String text, Locale locale) {
>             DateTime instant = iInstant;
>             return instant.withMillis(iField.set(instant.getMillis(), text, locale));
>         }
>         
>         
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>         public final DateTime setCopy(String text) {
>             return setCopy(text, null);
>         }
>         
>         
>         
> 
> 
> 
> 
>         public DateTime roundFloorCopy() {
>             DateTime instant = iInstant;
>             return instant.withMillis(iField.roundFloor(instant.getMillis()));
>         }
>         
>         
> 
> 
> 
> 
>         public DateTime roundCeilingCopy() {
>             DateTime instant = iInstant;
>             return instant.withMillis(iField.roundCeiling(instant.getMillis()));
>         }
>         
>         
> 
> 
> 
> 
> 
>         public DateTime roundHalfFloorCopy() {
>             DateTime instant = iInstant;
>             return instant.withMillis(iField.roundHalfFloor(instant.getMillis()));
>         }
>         
>         
> 
> 
> 
> 
> 
>         public DateTime roundHalfCeilingCopy() {
>             DateTime instant = iInstant;
>             return instant.withMillis(iField.roundHalfCeiling(instant.getMillis()));
>         }
>         
>         
> 
> 
> 
> 
> 
> 
>         public DateTime roundHalfEvenCopy() {
>             DateTime instant = iInstant;
>             return instant.withMillis(iField.roundHalfEven(instant.getMillis()));
>         }
