




















































package org.joda.time.base;

import org.joda.time.Duration;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.ReadableDuration;
import org.joda.time.format.ISOPeriodFormat;














public abstract class AbstractDuration implements ReadableDuration {

    


    protected AbstractDuration() {
        super();
    }

    
    






    public final Duration toDuration() {
        if (this instanceof Duration) {
            return (Duration) this;
        }
        return new Duration(getMillis());
    }

    
    

























    public final Period toPeriod() {
        return new Period(getMillis());
    }

    

















    public final Period toPeriod(PeriodType type) {
        return new Period(getMillis(), type);
    }

    
    







    public final int compareTo(Object obj) {
        
        ReadableDuration thisDuration = (ReadableDuration) this;
        ReadableDuration otherDuration = (ReadableDuration) obj;
        
        long thisMillis = thisDuration.getMillis();
        long otherMillis = otherDuration.getMillis();
        
        
        if (thisMillis < otherMillis) {
            return -1;
        }
        if (thisMillis > otherMillis) {
            return 1;
        }
        return 0;
    }

    





    public final boolean isEqual(ReadableDuration duration) {
        if (duration == null) {
            duration = Duration.ZERO;
        }
        return compareTo(duration) == 0;
    }

    





    public final boolean isLongerThan(ReadableDuration duration) {
        if (duration == null) {
            duration = Duration.ZERO;
        }
        return compareTo(duration) > 0;
    }

    





    public final boolean isShorterThan(ReadableDuration duration) {
        if (duration == null) {
            duration = Duration.ZERO;
        }
        return compareTo(duration) < 0;
    }

    
    






    public final boolean equals(Object duration) {
        if (this == duration) {
            return true;
        }
        if (duration instanceof ReadableDuration == false) {
            return false;
        }
        ReadableDuration other = (ReadableDuration) duration;
        return (getMillis() == other.getMillis());
    }

    





    public final int hashCode() {
        long len = getMillis();
        return (int) (len ^ (len >>> 32));
    }

    
    










    public final String toString() {
        return ISOPeriodFormat.getInstance().standard().print(toPeriod());
    }

}
