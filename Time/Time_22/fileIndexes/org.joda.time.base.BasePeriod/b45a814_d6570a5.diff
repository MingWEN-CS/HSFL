439a440
>     
446a448,459
>         setFieldInto(iValues, field, value);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
>     protected void setFieldInto(int[] values, DurationFieldType field, int value) {
450c463
<                 throw new UnsupportedOperationException(
---
>                 throw new IllegalArgumentException(
454c467
<             setValue(index, value);
---
>             values[index] = value;
463a477,534
> 
>     protected void addField(DurationFieldType field, int value) {
>         addFieldInto(iValues, field, value);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
>     protected void addFieldInto(int[] values, DurationFieldType field, int value) {
>         int index = indexOf(field);
>         if (index == -1) {
>             if (value != 0) {
>                 throw new IllegalArgumentException(
>                     "Period does not support field '" + field.getName() + "'");
>             }
>         } else {
>             values[index] = FieldUtils.safeAdd(values[index], value);
>         }
>     }
> 
>     
> 
> 
> 
> 
> 
>     protected void mergePeriod(ReadablePeriod period) {
>         iValues = mergePeriodInto(getValues(), period);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
>     protected int[] mergePeriodInto(int[] values, ReadablePeriod period) {
>          for (int i = 0, isize = period.size(); i < isize; i++) {
>              DurationFieldType type = period.getFieldType(i);
>              int value = period.getValue(i);
>              checkAndUpdate(type, values, value);
>          }
>          return values;
>     }
> 
>     
> 
> 
> 
> 
> 
465c536,547
<          int[] newValues = getValues(); 
---
>         iValues = addPeriodInto(getValues(), period);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
>     protected int[] addPeriodInto(int[] values, ReadablePeriod period) {
476c558
<                  newValues[index] = FieldUtils.safeAdd(getValue(index), value);
---
>                  values[index] = FieldUtils.safeAdd(getValue(index), value);
479c561
<          setValues(newValues);
---
>          return values;
