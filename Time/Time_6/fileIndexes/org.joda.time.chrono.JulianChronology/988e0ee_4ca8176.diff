61a62,70
>     private static final int MIN_YEAR = -292269054;
> 
>     
>     
>     
>     
>     private static final int MAX_YEAR = 292271022;
> 
>     
204a214,220
>         if (year > MAX_YEAR) {
>             throw new ArithmeticException("Year is too large: " + year + " > " + MAX_YEAR);
>         }
>         if (year < MIN_YEAR) {
>             throw new ArithmeticException("Year is too small: " + year + " < " + MIN_YEAR);
>         }
> 
223,224c239
<         long millis = (relativeYear * 365L + leapYears)
<             * (long)DateTimeConstants.MILLIS_PER_DAY;
---
>         long millis = (relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY;
232,233c247
<         
<         return -292269054;
---
>         return MIN_YEAR;
237,238c251
<         
<         return 292271022;
---
>         return MAX_YEAR;
