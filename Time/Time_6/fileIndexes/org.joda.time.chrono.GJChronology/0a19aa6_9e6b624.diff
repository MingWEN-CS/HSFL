198,209c198,210
< 
<         ArrayList<GJChronology> chronos = cCache.get(zone);
<         if (chronos == null) {
<             chronos = new ArrayList<GJChronology>(2);
<             cCache.put(zone, chronos);
<         } else {
<             for (int i=chronos.size(); --i>=0; ) {
<                 chrono = chronos.get(i);
<                 if (minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() &&
<                     cutoverInstant.equals(chrono.getGregorianCutover())) {
<                     
<                     return chrono;
---
>         synchronized (cCache) {
>             ArrayList<GJChronology> chronos = cCache.get(zone);
>             if (chronos == null) {
>                 chronos = new ArrayList<GJChronology>(2);
>                 cCache.put(zone, chronos);
>             } else {
>                 for (int i = chronos.size(); --i >= 0;) {
>                     chrono = chronos.get(i);
>                     if (minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() &&
>                         cutoverInstant.equals(chrono.getGregorianCutover())) {
>                         
>                         return chrono;
>                     }
211a213,226
>             if (zone == DateTimeZone.UTC) {
>                 chrono = new GJChronology
>                     (JulianChronology.getInstance(zone, minDaysInFirstWeek),
>                      GregorianChronology.getInstance(zone, minDaysInFirstWeek),
>                      cutoverInstant);
>             } else {
>                 chrono = getInstance(DateTimeZone.UTC, cutoverInstant, minDaysInFirstWeek);
>                 chrono = new GJChronology
>                     (ZonedChronology.getInstance(chrono, zone),
>                      chrono.iJulianChronology,
>                      chrono.iGregorianChronology,
>                      chrono.iCutoverInstant);
>             }
>             chronos.add(chrono);
213,229d227
< 
<         if (zone == DateTimeZone.UTC) {
<             chrono = new GJChronology
<                 (JulianChronology.getInstance(zone, minDaysInFirstWeek),
<                  GregorianChronology.getInstance(zone, minDaysInFirstWeek),
<                  cutoverInstant);
<         } else {
<             chrono = getInstance(DateTimeZone.UTC, cutoverInstant, minDaysInFirstWeek);
<             chrono = new GJChronology
<                 (ZonedChronology.getInstance(chrono, zone),
<                  chrono.iJulianChronology,
<                  chrono.iGregorianChronology,
<                  chrono.iCutoverInstant);
<         }
< 
<         chronos.add(chrono);
< 
