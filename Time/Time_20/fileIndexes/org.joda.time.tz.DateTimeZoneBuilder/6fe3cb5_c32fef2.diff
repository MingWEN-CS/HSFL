223c223
<     private final ArrayList<RuleSet> iRuleSets;
---
>     private final ArrayList iRuleSets;
226c226
<         iRuleSets = new ArrayList<RuleSet>(10);
---
>         iRuleSets = new ArrayList(10);
255c255
<             RuleSet lastRuleSet = iRuleSets.get(iRuleSets.size() - 1);
---
>             RuleSet lastRuleSet = (RuleSet)iRuleSets.get(iRuleSets.size() - 1);
266d265
< 
323c322
<         return iRuleSets.get(iRuleSets.size() - 1);
---
>         return (RuleSet)iRuleSets.get(iRuleSets.size() - 1);
339c338
<         ArrayList<Transition> transitions = new ArrayList<Transition>();
---
>         ArrayList transitions = new ArrayList();
350c349
<             RuleSet rs = iRuleSets.get(i);
---
>             RuleSet rs = (RuleSet)iRuleSets.get(i);
391c390
<             Transition tr = transitions.get(0);
---
>             Transition tr = (Transition)transitions.get(0);
403c402
<     private boolean addTransition(ArrayList<Transition> transitions, Transition tr) {
---
>     private boolean addTransition(ArrayList transitions, Transition tr) {
410c409
<         Transition last = transitions.get(size - 1);
---
>         Transition last = (Transition)transitions.get(size - 1);
419c418
<             offsetForLast = transitions.get(size - 2).getWallOffset();
---
>             offsetForLast = ((Transition)transitions.get(size - 2)).getWallOffset();
953c952
<         private ArrayList<Rule> iRules;
---
>         private ArrayList iRules;
964c963
<             iRules = new ArrayList<Rule>(10);
---
>             iRules = new ArrayList(10);
973c972
<             iRules = new ArrayList<Rule>(rs.iRules);
---
>             iRules = new ArrayList(rs.iRules);
1018c1017
<             ArrayList<Rule> copy = new ArrayList<Rule>(iRules);
---
>             ArrayList copy = new ArrayList(iRules);
1042c1041
<                         Iterator<Rule> it = copy.iterator();
---
>                         Iterator it = copy.iterator();
1044c1043
<                             Rule rule = it.next();
---
>                             Rule rule = (Rule)it.next();
1090c1089
<             Iterator<Rule> it = iRules.iterator();
---
>             Iterator it = iRules.iterator();
1092c1091
<                 Rule rule = it.next();
---
>                 Rule rule = (Rule)it.next();
1144,1145c1143,1144
<                 Rule startRule = iRules.get(0);
<                 Rule endRule = iRules.get(1);
---
>                 Rule startRule = (Rule)iRules.get(0);
>                 Rule endRule = (Rule)iRules.get(1);
1389,1390c1388
<         static PrecalculatedZone create(String id, boolean outputID, ArrayList<Transition> transitions,
<                                         DSTZone tailZone) {
---
>         static PrecalculatedZone create(String id, boolean outputID, ArrayList transitions, DSTZone tailZone) {
1403c1401
<                 Transition tr = transitions.get(i);
---
>                 Transition tr = (Transition)transitions.get(i);
1427,1429d1424
< 
<             Chronology chrono = ISOChronology.getInstanceUTC();
< 
1437c1432
<                 Period p = new Period(trans[i], trans[i + 1], PeriodType.yearMonthDay(), chrono);
---
>                 Period p = new Period(trans[i], trans[i + 1], PeriodType.yearMonthDay());
1446,1447c1441
<                     System.out.println("     - " + new DateTime(trans[i], chrono) +
<                                        " - " + new DateTime(trans[i + 1], chrono));
---
>                     System.out.println("     - " + new DateTime(trans[i]) + " - " + new DateTime(trans[i + 1]));
1456d1449
< 
1458,1461c1451,1452
<                 if (tailZone.iStartRecurrence.getNameKey()
<                     .equals(tailZone.iEndRecurrence.getNameKey())) {
<                     System.out.println("Fixing duplicate recurrent name key - " +
<                                        tailZone.iStartRecurrence.getNameKey());
---
>                 if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
>                     System.out.println("Fixing duplicate recurrent name key - " + tailZone.iStartRecurrence.getNameKey());
1478,1479c1469
<             return new PrecalculatedZone
<                 ((outputID ? id : ""), trans, wallOffsets, standardOffsets, nameKeys, tailZone);
---
>             return new PrecalculatedZone((outputID ? id : ""), trans, wallOffsets, standardOffsets, nameKeys, tailZone);
1639c1629
<             Set<String> poolSet = new HashSet<String>();
---
>             Set poolSet = new HashSet();
1649c1639
<             Iterator<String> it = poolSet.iterator();
---
>             Iterator it = poolSet.iterator();
1651c1641
<                 pool[i] = it.next();
---
>                 pool[i] = (String)it.next();
