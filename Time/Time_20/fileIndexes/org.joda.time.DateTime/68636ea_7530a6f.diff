1126a1127,1384
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withEra(int era) {
>         return withMillis(getChronology().era().set(getMillis(), era));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withCenturyOfEra(int centuryOfEra) {
>         return withMillis(getChronology().centuryOfEra().set(getMillis(), centuryOfEra));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withYearOfEra(int yearOfEra) {
>         return withMillis(getChronology().yearOfEra().set(getMillis(), yearOfEra));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withYearOfCentury(int yearOfCentury) {
>         return withMillis(getChronology().yearOfCentury().set(getMillis(), yearOfCentury));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withYear(int year) {
>         return withMillis(getChronology().year().set(getMillis(), year));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withWeekyear(int weekyear) {
>         return withMillis(getChronology().weekyear().set(getMillis(), weekyear));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withMonthOfYear(int monthOfYear) {
>         return withMillis(getChronology().monthOfYear().set(getMillis(), monthOfYear));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withWeekOfWeekyear(int weekOfWeekyear) {
>         return withMillis(getChronology().weekOfWeekyear().set(getMillis(), weekOfWeekyear));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withDayOfYear(int dayOfYear) {
>         return withMillis(getChronology().dayOfYear().set(getMillis(), dayOfYear));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withDayOfMonth(int dayOfMonth) {
>         return withMillis(getChronology().dayOfMonth().set(getMillis(), dayOfMonth));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withDayOfWeek(int dayOfWeek) {
>         return withMillis(getChronology().dayOfWeek().set(getMillis(), dayOfWeek));
>     }
> 
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withHourOfDay(int hour) {
>         return withMillis(getChronology().hourOfDay().set(getMillis(), hour));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withMinuteOfHour(int minute) {
>         return withMillis(getChronology().minuteOfHour().set(getMillis(), minute));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withSecondOfMinute(int second) {
>         return withMillis(getChronology().secondOfMinute().set(getMillis(), second));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withMillisOfSecond(int millis) {
>         return withMillis(getChronology().millisOfSecond().set(getMillis(), millis));
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime withMillisOfDay(int millis) {
>         return withMillis(getChronology().millisOfDay().set(getMillis(), millis));
>     }
> 
>     
>     
