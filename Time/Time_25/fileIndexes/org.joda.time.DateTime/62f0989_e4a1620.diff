643,644d642
< 
< 
658a657,849
> 
> 
> 
> 
> 
> 
> 
>     public DateTime plusYears(int years) {
>         if (years == 0) {
>             return this;
>         }
>         long instant = getChronology().years().add(getMillis(), years);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime plusMonths(int months) {
>         if (months == 0) {
>             return this;
>         }
>         long instant = getChronology().months().add(getMillis(), months);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime plusWeeks(int weeks) {
>         if (weeks == 0) {
>             return this;
>         }
>         long instant = getChronology().weeks().add(getMillis(), weeks);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime plusDays(int days) {
>         if (days == 0) {
>             return this;
>         }
>         long instant = getChronology().days().add(getMillis(), days);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime plusHours(int hours) {
>         if (hours == 0) {
>             return this;
>         }
>         long instant = getChronology().hours().add(getMillis(), hours);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime plusMinutes(int minutes) {
>         if (minutes == 0) {
>             return this;
>         }
>         long instant = getChronology().minutes().add(getMillis(), minutes);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime plusSeconds(int seconds) {
>         if (seconds == 0) {
>             return this;
>         }
>         long instant = getChronology().seconds().add(getMillis(), seconds);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime plusMillis(int millis) {
>         if (millis == 0) {
>             return this;
>         }
>         long instant = getChronology().millis().add(getMillis(), millis);
>         return withMillis(instant);
>     }
> 
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
689,690d879
< 
< 
692a882,1074
>     }
> 
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime minusYears(int years) {
>         if (years == 0) {
>             return this;
>         }
>         long instant = getChronology().years().subtract(getMillis(), years);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime minusMonths(int months) {
>         if (months == 0) {
>             return this;
>         }
>         long instant = getChronology().months().subtract(getMillis(), months);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime minusWeeks(int weeks) {
>         if (weeks == 0) {
>             return this;
>         }
>         long instant = getChronology().weeks().subtract(getMillis(), weeks);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime minusDays(int days) {
>         if (days == 0) {
>             return this;
>         }
>         long instant = getChronology().days().subtract(getMillis(), days);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime minusHours(int hours) {
>         if (hours == 0) {
>             return this;
>         }
>         long instant = getChronology().hours().subtract(getMillis(), hours);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime minusMinutes(int minutes) {
>         if (minutes == 0) {
>             return this;
>         }
>         long instant = getChronology().minutes().subtract(getMillis(), minutes);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime minusSeconds(int seconds) {
>         if (seconds == 0) {
>             return this;
>         }
>         long instant = getChronology().seconds().subtract(getMillis(), seconds);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateTime minusMillis(int millis) {
>         if (millis == 0) {
>             return this;
>         }
>         long instant = getChronology().millis().subtract(getMillis(), millis);
>         return withMillis(instant);
