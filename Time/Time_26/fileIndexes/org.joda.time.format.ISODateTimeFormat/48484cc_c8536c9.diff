145,150c145,153
<         me,  
<         de,  
<         he,  
<         mne, 
<         se,  
<         fe,  
---
>         mye, 
>         dme, 
>         we,  
>         wwe, 
>         dwe, 
>         hde, 
>         mhe, 
>         sme, 
>         fse, 
157a161,164
>         ww,  
>         wwd, 
> 
>         
170a178,180
>         
>         wdt, 
> 
173c183,186
<         bdt; 
---
>         bdt, 
> 
>         bwd,  
>         bwdt; 
178,179c191,192
<         dp, 
<         tp, 
---
>         dp,  
>         tp,  
200a214
> 
221a236
> 
225,230c240,254
<                 .append(yearElement())
<                 .appendOptional
<                 (new DateTimeFormatterBuilder(iChrono)
<                  .append(monthElement())
<                  .appendOptional(dayElement())
<                  .toParser())
---
>                 .append(null, new DateTimeParser[] {
>                     new DateTimeFormatterBuilder(iChrono)
>                     .append(yearElement())
>                     .appendOptional
>                     (new DateTimeFormatterBuilder(iChrono)
>                      .append(monthElement())
>                      .appendOptional(dayOfMonthElement())
>                      .toParser())
>                     .toParser(),
>                     new DateTimeFormatterBuilder(iChrono)
>                     .append(weekyearElement())
>                     .append(weekElement())
>                     .appendOptional(dayOfWeekElement())
>                     .toParser()
>                 })
294a319
> 
365a391,413
> 
> 
> 
>     public DateTimeFormatter weekDate() {
>         return weekyearWeekDay();
>     }
> 
>     
> 
> 
> 
>     public DateTimeFormatter weekDateTime() {
>         if (wdt == null) {
>             wdt = new DateTimeFormatterBuilder(iChrono)
>                 .append(weekDate())
>                 .appendLiteral('T')
>                 .append(time())
>                 .toFormatter();
>         }
>         return wdt;
>     }
> 
>     
413a462,492
> 
> 
> 
>     public DateTimeFormatter basicWeekDate() {
>         if (bwd == null) {
>             bwd = new DateTimeFormatterBuilder(iChrono)
>                 .appendWeekyear(4, 4)
>                 .appendLiteral('W')
>                 .appendWeekOfWeekyear(2)
>                 .appendDayOfWeek(1)
>                 .toFormatter();
>         }
>         return bwd;
>     }
> 
>     
> 
> 
> 
>     public DateTimeFormatter basicWeekDateTime() {
>         if (bwdt == null) {
>             bwdt = new DateTimeFormatterBuilder(iChrono)
>                 .append(basicWeekDate())
>                 .appendLiteral('T')
>                 .append(basicTime())
>                 .toFormatter();
>         }
>         return bwdt;
>     }
> 
>     
444c523
<                 .append(dayElement())
---
>                 .append(dayOfMonthElement())
452a532,567
>     public DateTimeFormatter weekyear() {
>         return weekyearElement();
>     }
> 
>     
> 
> 
> 
>     public DateTimeFormatter weekyearWeek() {
>         if (ww == null) {
>             ww = new DateTimeFormatterBuilder(iChrono)
>                 .append(weekyearElement())
>                 .append(weekElement())
>                 .toFormatter();
>         }
>         return ww;
>     }
> 
>     
> 
> 
> 
>     public DateTimeFormatter weekyearWeekDay() {
>         if (wwd == null) {
>             wwd = new DateTimeFormatterBuilder(iChrono)
>                 .append(weekyearElement())
>                 .append(weekElement())
>                 .append(dayOfWeekElement())
>                 .toFormatter();
>         }
>         return wwd;
>     }
> 
>     
> 
> 
576,577c691,692
<         if (me == null) {
<             me = new DateTimeFormatterBuilder(iChrono)
---
>         if (mye == null) {
>             mye = new DateTimeFormatterBuilder(iChrono)
582c697
<         return me;
---
>         return mye;
585,587c700,702
<     private DateTimeFormatter dayElement() {
<         if (de == null) {
<             de = new DateTimeFormatterBuilder(iChrono)
---
>     private DateTimeFormatter dayOfMonthElement() {
>         if (dme == null) {
>             dme = new DateTimeFormatterBuilder(iChrono)
592c707,736
<         return de;
---
>         return dme;
>     }
> 
>     private DateTimeFormatter weekyearElement() {
>         if (we == null) {
>             we = new DateTimeFormatterBuilder(iChrono)
>                 .appendWeekyear(4, 9)
>                 .toFormatter();
>         }
>         return we;
>     }
> 
>     private DateTimeFormatter weekElement() {
>         if (wwe == null) {
>             wwe = new DateTimeFormatterBuilder(iChrono)
>                 .appendLiteral("-W")
>                 .appendWeekOfWeekyear(2)
>                 .toFormatter();
>         }
>         return wwe;
>     }
> 
>     private DateTimeFormatter dayOfWeekElement() {
>         if (dwe == null) {
>             dwe = new DateTimeFormatterBuilder(iChrono)
>                 .appendLiteral('-')
>                 .appendDayOfWeek(1)
>                 .toFormatter();
>         }
>         return dwe;
596,597c740,741
<         if (he == null) {
<             he = new DateTimeFormatterBuilder(iChrono)
---
>         if (hde == null) {
>             hde = new DateTimeFormatterBuilder(iChrono)
601c745
<         return he;
---
>         return hde;
605,606c749,750
<         if (mne == null) {
<             mne = new DateTimeFormatterBuilder(iChrono)
---
>         if (mhe == null) {
>             mhe = new DateTimeFormatterBuilder(iChrono)
611c755
<         return mne;
---
>         return mhe;
615,616c759,760
<         if (se == null) {
<             se = new DateTimeFormatterBuilder(iChrono)
---
>         if (sme == null) {
>             sme = new DateTimeFormatterBuilder(iChrono)
621c765
<         return se;
---
>         return sme;
625,626c769,770
<         if (fe == null) {
<             fe = new DateTimeFormatterBuilder(iChrono)
---
>         if (fse == null) {
>             fse = new DateTimeFormatterBuilder(iChrono)
633c777
<         return fe;
---
>         return fse;
