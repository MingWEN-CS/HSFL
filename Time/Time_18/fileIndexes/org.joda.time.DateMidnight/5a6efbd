




















































package org.joda.time;

import java.io.Serializable;
import java.util.Locale;

import org.joda.time.base.BaseDateTime;
import org.joda.time.property.AbstractReadableInstantFieldProperty;










































public final class DateMidnight
        extends BaseDateTime
        implements ReadableDateTime, Serializable {
    
    
    private static final long serialVersionUID = 156371964018738L;

    
    
    




    public DateMidnight() {
        super();
    }

    








    public DateMidnight(DateTimeZone zone) {
        super(zone);
    }

    









    public DateMidnight(Chronology chronology) {
        super(chronology);
    }

    
    






    public DateMidnight(long instant) {
        super(instant);
    }

    









    public DateMidnight(long instant, DateTimeZone zone) {
        super(instant, zone);
    }

    










    public DateMidnight(long instant, Chronology chronology) {
        super(instant, chronology);
    }

    
    













    public DateMidnight(Object instant) {
        super(instant);
    }

    















    public DateMidnight(Object instant, DateTimeZone zone) {
        super(instant, zone);
    }

    














    public DateMidnight(Object instant, Chronology chronology) {
        super(instant, chronology);
    }

    
    








    public DateMidnight(int year, int monthOfYear, int dayOfMonth) {
        super(year, monthOfYear, dayOfMonth, 0, 0, 0, 0);
    }

    











    public DateMidnight(int year, int monthOfYear, int dayOfMonth, DateTimeZone zone) {
        super(year, monthOfYear, dayOfMonth, 0, 0, 0, 0, zone);
    }

    












    public DateMidnight(int year, int monthOfYear, int dayOfMonth, Chronology chronology) {
        super(year, monthOfYear, dayOfMonth, 0, 0, 0, 0, chronology);
    }

    








    protected long checkInstant(long instant, Chronology chronology) {
        return chronology.dayOfMonth().roundFloor(instant);
    }

    
    









    public DateMidnight withMillis(long newMillis) {
        Chronology chrono = getChronology();
        newMillis = checkInstant(newMillis, chrono);
        return (newMillis == getMillis() ? this : new DateMidnight(newMillis, chrono));
    }

    




















    public DateMidnight withChronology(Chronology newChronology) {
        return (newChronology == getChronology() ? this : new DateMidnight(getMillis(), newChronology));
    }

    







    public DateMidnight withZoneRetainFields(DateTimeZone newZone) {
        newZone = (newZone == null ? DateTimeZone.getDefault() : newZone);
        DateTimeZone originalZone = getZone();
        originalZone = (originalZone == null ? DateTimeZone.getDefault() : originalZone);
        if (newZone == originalZone) {
            return this;
        }
        
        long millis = originalZone.getMillisKeepLocal(newZone, getMillis());
        return new DateMidnight(millis, getChronology().withZone(newZone));
    }

    
    
    




    public Property era() {
        return new Property(this, getChronology().era());
    }

    




    public Property centuryOfEra() {
        return new Property(this, getChronology().centuryOfEra());
    }

    




    public Property yearOfCentury() {
        return new Property(this, getChronology().yearOfCentury());
    }

    




    public Property yearOfEra() {
        return new Property(this, getChronology().yearOfEra());
    }

    




    public Property year() {
        return new Property(this, getChronology().year());
    }

    




    public Property weekyear() {
        return new Property(this, getChronology().weekyear());
    }

    




    public Property monthOfYear() {
        return new Property(this, getChronology().monthOfYear());
    }

    




    public Property weekOfWeekyear() {
        return new Property(this, getChronology().weekOfWeekyear());
    }

    




    public Property dayOfYear() {
        return new Property(this, getChronology().dayOfYear());
    }

    




    public Property dayOfMonth() {
        return new Property(this, getChronology().dayOfMonth());
    }

    




    public Property dayOfWeek() {
        return new Property(this, getChronology().dayOfWeek());
    }

    
    



























    public static final class Property extends AbstractReadableInstantFieldProperty {
    
        
        private static final long serialVersionUID = 257629620L;
        
        
        private final DateMidnight iInstant;
        
        private final DateTimeField iField;

        





        Property(DateMidnight instant, DateTimeField field) {
            super();
            iInstant = instant;
            iField = field;
        }

        
        




        public DateTimeField getField() {
            return iField;
        }

        




        public ReadableInstant getReadableInstant() {
            return iInstant;
        }

        




        public DateMidnight getDateMidnight() {
            return iInstant;
        }

        
        











        public DateMidnight addToCopy(int value) {
            return iInstant.withMillis(iField.add(iInstant.getMillis(), value));
        }

        











        public DateMidnight addToCopy(long value) {
            return iInstant.withMillis(iField.add(iInstant.getMillis(), value));
        }

        













        public DateMidnight addWrapFieldToCopy(int value) {
            return iInstant.withMillis(iField.addWrapField(iInstant.getMillis(), value));
        }

        
        











        public DateMidnight setCopy(int value) {
            return iInstant.withMillis(iField.set(iInstant.getMillis(), value));
        }
    
        












        public DateMidnight setCopy(String text, Locale locale) {
            return iInstant.withMillis(iField.set(iInstant.getMillis(), text, locale));
        }

        











        public DateMidnight setCopy(String text) {
            return setCopy(text, null);
        }

        
        




        public DateMidnight roundFloorCopy() {
            return iInstant.withMillis(iField.roundFloor(iInstant.getMillis()));
        }

        




        public DateMidnight roundCeilingCopy() {
            return iInstant.withMillis(iField.roundCeiling(iInstant.getMillis()));
        }

        





        public DateMidnight roundHalfFloorCopy() {
            return iInstant.withMillis(iField.roundHalfFloor(iInstant.getMillis()));
        }

        





        public DateMidnight roundHalfCeilingCopy() {
            return iInstant.withMillis(iField.roundHalfCeiling(iInstant.getMillis()));
        }

        





        public DateMidnight roundHalfEvenCopy() {
            return iInstant.withMillis(iField.roundHalfEven(iInstant.getMillis()));
        }

    }
}
