402a403
> 
513,514d513
< 
< 
528a528,624
> 
> 
> 
> 
> 
> 
> 
>     public DateMidnight plusYears(int years) {
>         if (years == 0) {
>             return this;
>         }
>         long instant = getChronology().years().add(getMillis(), years);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateMidnight plusMonths(int months) {
>         if (months == 0) {
>             return this;
>         }
>         long instant = getChronology().months().add(getMillis(), months);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateMidnight plusWeeks(int weeks) {
>         if (weeks == 0) {
>             return this;
>         }
>         long instant = getChronology().weeks().add(getMillis(), weeks);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateMidnight plusDays(int days) {
>         if (days == 0) {
>             return this;
>         }
>         long instant = getChronology().days().add(getMillis(), days);
>         return withMillis(instant);
>     }
> 
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
559,560d654
< 
< 
562a657,753
>     }
> 
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateMidnight minusYears(int years) {
>         if (years == 0) {
>             return this;
>         }
>         long instant = getChronology().years().subtract(getMillis(), years);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateMidnight minusMonths(int months) {
>         if (months == 0) {
>             return this;
>         }
>         long instant = getChronology().months().subtract(getMillis(), months);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateMidnight minusWeeks(int weeks) {
>         if (weeks == 0) {
>             return this;
>         }
>         long instant = getChronology().weeks().subtract(getMillis(), weeks);
>         return withMillis(instant);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public DateMidnight minusDays(int days) {
>         if (days == 0) {
>             return this;
>         }
>         long instant = getChronology().days().subtract(getMillis(), days);
>         return withMillis(instant);
