1a2,271
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> package org.joda.time.field;
> 
> import java.io.Serializable;
> import java.util.HashMap;
> import org.joda.time.DurationField;
> 
> 
> 
> 
> 
> 
> 
> 
> public final class UnsupportedDurationField implements DurationField, Serializable {
> 
>     static final long serialVersionUID = -6390301302770925357L;
> 
>     
> 
> 
>     public static final UnsupportedDurationField INSTANCE = getInstance("unsupported");
> 
>     private static HashMap cCache;
> 
>     public static synchronized UnsupportedDurationField getInstance(String name) {
>         UnsupportedDurationField field;
>         if (cCache == null) {
>             cCache = new HashMap(7);
>             field = null;
>         } else {
>             field = (UnsupportedDurationField)cCache.get(name);
>         }
>         if (field == null) {
>             field = new UnsupportedDurationField(name);
>             cCache.put(name, field);
>         }
>         return field;
>     }
> 
>     private final String iName;
> 
>     private UnsupportedDurationField(String name) {
>         iName = name;
>     }
> 
>     
>     
> 
>     public String getName() {
>         return iName;
>     }
> 
>     
> 
> 
> 
> 
>     public boolean isSupported() {
>         return false;
>     }
> 
>     
> 
> 
> 
> 
>     public boolean isPrecise() {
>         return true;
>     }
> 
>     
> 
> 
> 
> 
>     public int getValue(long duration) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public long getValueAsLong(long duration) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public int getValue(long duration, long instant) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public long getValueAsLong(long duration, long instant) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public long getMillis(int value) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public long getMillis(long value) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public long getMillis(int value, long instant) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public long getMillis(long value, long instant) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public long add(long instant, int value) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public long add(long instant, long value) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public int getDifference(long minuendInstant, long subtrahendInstant) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public long getDifferenceAsLong(long minuendInstant, long subtrahendInstant) {
>         throw unsupported();
>     }
> 
>     
> 
> 
> 
> 
>     public long getUnitMillis() {
>         return 0;
>     }
> 
>     
> 
> 
> 
> 
>     public int compareTo(Object durationField) {
>         return 0;
>     }
> 
>     
>     
> 
> 
> 
> 
>     public String toString() {
>         return "UnsupportedDurationField";
>     }
> 
>     
> 
> 
>     private Object readResolve() {
>         return getInstance(iName);
>     }
> 
>     private UnsupportedOperationException unsupported() {
>         return new UnsupportedOperationException(iName + " field is unsupported");
>     }
> 
> }
