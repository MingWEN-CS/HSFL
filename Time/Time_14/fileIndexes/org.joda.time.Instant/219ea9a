




















































package org.joda.time;

import java.io.Serializable;

import org.joda.time.convert.InstantConverter;
import org.joda.time.convert.ConverterManager;
import org.joda.time.format.ISODateTimeFormat;














public final class Instant extends AbstractInstant
        implements ReadableInstant, Serializable {

    static final long serialVersionUID = 3299096530934209741L;

    
    private final long iMillis;

    
    
    


    public Instant() {
        super();
        iMillis = System.currentTimeMillis();
    }

    




    public Instant(long instant) {
        super();
        iMillis = instant;
    }

    





    public Instant(ReadableInstant instant) {
        super();
        iMillis = instant.getMillis();
    }

    








    public Instant(Object instant) {
        super();
        InstantConverter converter = ConverterManager.getInstance().getInstantConverter(instant);
        iMillis = converter.getInstantMillis(instant);
    }

    








    public ReadableInstant withMillis(long newMillis) {
        return newMillis == iMillis ? this : new Instant(newMillis);
    }
    
    






    public ReadableInstant withChronology(Chronology newChronology) {
        return this;
    }
    
    






    public ReadableInstant withDateTimeZone(DateTimeZone newDateTimeZone) {
        return this;
    }

    






    public ReadableInstant withDateTimeZoneMoved(DateTimeZone newDateTimeZone) {
        return this;
    }

    
    
    




    public final long getMillis() {
        return iMillis;
    }

    





    public final long getMillis(ReadableInstant base) {
        return iMillis;
    }

    






    public final long getMillis(ReadableInstant base, DateTimeZone zone) {
        return iMillis;
    }

    









    public final Chronology getChronology() {
        return null;
    }

    
    
    







    public final String toString() {
        return ISODateTimeFormat.getInstanceUTC().dateTime().print(this);
    }

}
