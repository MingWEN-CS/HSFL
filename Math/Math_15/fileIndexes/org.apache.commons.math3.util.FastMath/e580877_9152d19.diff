2133a2134
> 
2171,2206c2172,2175
<             
< 
<             
<             
<             int k = (int)(xa * 0.6366197723675814);
< 
<             
<             double remA;
<             double remB;
<             while (true) {
<                 double a = -k * 1.570796251296997;
<                 remA = xa + a;
<                 remB = -(remA - xa - a);
< 
<                 a = -k * 7.549789948768648E-8;
<                 double b = remA;
<                 remA = a + b;
<                 remB += -(remA - b - a);
< 
<                 a = -k * 6.123233995736766E-17;
<                 b = remA;
<                 remA = a + b;
<                 remB += -(remA - b - a);
< 
<                 if (remA > 0.0) {
<                     break;
<                 }
< 
<                 
<                 
<                 
<                 k--;
<             }
<             quadrant = k & 3;
<             xa = remA;
<             xb = remB;
---
>             final CodyWaite cw = new CodyWaite(xa, xb);
>             quadrant = cw.getK() & 3;
>             xa = cw.getRemA();
>             xb = cw.getRemB();
2231a2201
> 
2257,2292c2227,2230
<             
< 
<             
<             
<             int k = (int)(xa * 0.6366197723675814);
< 
<             
<             double remA;
<             double remB;
<             while (true) {
<                 double a = -k * 1.570796251296997;
<                 remA = xa + a;
<                 remB = -(remA - xa - a);
< 
<                 a = -k * 7.549789948768648E-8;
<                 double b = remA;
<                 remA = a + b;
<                 remB += -(remA - b - a);
< 
<                 a = -k * 6.123233995736766E-17;
<                 b = remA;
<                 remA = a + b;
<                 remB += -(remA - b - a);
< 
<                 if (remA > 0.0) {
<                     break;
<                 }
< 
<                 
<                 
<                 
<                 k--;
<             }
<             quadrant = k & 3;
<             xa = remA;
<             xb = remB;
---
>             final CodyWaite cw = new CodyWaite(xa, xb);
>             quadrant = cw.getK() & 3;
>             xa = cw.getRemA();
>             xb = cw.getRemB();
2316a2255
> 
2353,2388c2292,2295
<             
< 
<             
<             
<             int k = (int)(xa * 0.6366197723675814);
< 
<             
<             double remA;
<             double remB;
<             while (true) {
<                 double a = -k * 1.570796251296997;
<                 remA = xa + a;
<                 remB = -(remA - xa - a);
< 
<                 a = -k * 7.549789948768648E-8;
<                 double b = remA;
<                 remA = a + b;
<                 remB += -(remA - b - a);
< 
<                 a = -k * 6.123233995736766E-17;
<                 b = remA;
<                 remA = a + b;
<                 remB += -(remA - b - a);
< 
<                 if (remA > 0.0) {
<                     break;
<                 }
< 
<                 
<                 
<                 
<                 k--;
<             }
<             quadrant = k & 3;
<             xa = remA;
<             xb = remB;
---
>             final CodyWaite cw = new CodyWaite(xa, xb);
>             quadrant = cw.getK() & 3;
>             xa = cw.getRemA();
>             xb = cw.getRemB();
3795a3703,3774
>         }
>     }
> 
>     
>     private static class CodyWaite {
>         
>         private final int finalK;
>         
>         private final double finalRemA;
>         
>         private final double finalRemB;
> 
>         
> 
> 
> 
>         CodyWaite(double xa,
>                   double xb) {
>             
>             
>             int k = (int)(xa * 0.6366197723675814);
> 
>             
>             double remA;
>             double remB;
>             while (true) {
>                 double a = -k * 1.570796251296997;
>                 remA = xa + a;
>                 remB = -(remA - xa - a);
> 
>                 a = -k * 7.549789948768648E-8;
>                 double b = remA;
>                 remA = a + b;
>                 remB += -(remA - b - a);
> 
>                 a = -k * 6.123233995736766E-17;
>                 b = remA;
>                 remA = a + b;
>                 remB += -(remA - b - a);
> 
>                 if (remA > 0) {
>                     break;
>                 }
> 
>                 
>                 
>                 
>                 --k;
>             }
> 
>             this.finalK = k;
>             this.finalRemA = remA;
>             this.finalRemB = remB;
>         }
> 
>         
> 
> 
>         int getK() {
>             return finalK;
>         }
>         
> 
> 
>         double getRemA() {
>             return finalRemA;
>         }
>         
> 
> 
>         double getRemB() {
>             return finalRemB;
