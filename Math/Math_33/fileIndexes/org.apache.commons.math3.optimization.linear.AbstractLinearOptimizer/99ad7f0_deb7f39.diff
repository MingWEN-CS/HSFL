18c18
< package org.apache.commons.math.optimization.linear;
---
> package org.apache.commons.math3.optimization.linear;
20a21
> import java.util.Collections;
22,25c23,26
< import org.apache.commons.math.exception.MathIllegalStateException;
< import org.apache.commons.math.exception.MaxCountExceededException;
< import org.apache.commons.math.optimization.GoalType;
< import org.apache.commons.math.optimization.RealPointValuePair;
---
> import org.apache.commons.math3.exception.MathIllegalStateException;
> import org.apache.commons.math3.exception.MaxCountExceededException;
> import org.apache.commons.math3.optimization.GoalType;
> import org.apache.commons.math3.optimization.PointValuePair;
44c45
<     protected LinearObjectiveFunction function;
---
>     private LinearObjectiveFunction function;
50c51
<     protected Collection<LinearConstraint> linearConstraints;
---
>     private Collection<LinearConstraint> linearConstraints;
56c57
<     protected GoalType goal;
---
>     private GoalType goal;
62c63
<     protected boolean nonNegative;
---
>     private boolean nonNegative;
77a79,106
> 
> 
>     protected boolean restrictToNonNegative() {
>         return nonNegative;
>     }
> 
>     
> 
> 
>     protected GoalType getGoalType() {
>         return goal;
>     }
> 
>     
> 
> 
>     protected LinearObjectiveFunction getFunction() {
>         return function;
>     }
> 
>     
> 
> 
>     protected Collection<LinearConstraint> getConstraints() {
>         return Collections.unmodifiableCollection(linearConstraints);
>     }
> 
>     
104c133
<     public RealPointValuePair optimize(final LinearObjectiveFunction f,
---
>     public PointValuePair optimize(final LinearObjectiveFunction f,
127c156
<     protected abstract RealPointValuePair doOptimize()
---
>     protected abstract PointValuePair doOptimize()
