19a20,21
> import org.apache.commons.math.ConvergenceException;
> import org.apache.commons.math.FunctionEvaluationException;
87,88c89,95
<             public double value(double x) throws MathException {
<                 return cumulativeProbability(x) - p;
---
>             public double value(double x) throws FunctionEvaluationException {
>                 try {
>                     return cumulativeProbability(x) - p;
>                 } catch (MathException ex) {
>                     throw new FunctionEvaluationException
>                         (x, "Error computing cdf", ex);
>                 }
91c98
< 
---
>               
93,98c100,111
<         double[] bracket =
<             UnivariateRealSolverUtils.bracket(
<                 rootFindingFunction,
<                 getInitialDomain(p),
<                 getDomainLowerBound(p),
<                 getDomainUpperBound(p));
---
>         double lowerBound = getDomainLowerBound(p);
>         double upperBound = getDomainUpperBound(p);
>         double[] bracket = null;
>         try {
>             bracket = UnivariateRealSolverUtils.bracket(
>                     rootFindingFunction, getInitialDomain(p),
>                     lowerBound, upperBound);
>         }  catch (ConvergenceException ex) {
>             
> 
> 
> 
100,105d112
<         
<         double root =
<             UnivariateRealSolverUtils.solve(
<                 rootFindingFunction,
<                 bracket[0],
<                 bracket[1]);
106a114,128
> 
>  
>             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
>                 return lowerBound;
>             }
>             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
>                 return upperBound;
>             }     
>             
>             throw new MathException(ex);
>         }
> 
>         
>         double root = UnivariateRealSolverUtils.solve(rootFindingFunction,
>                 bracket[0],bracket[1]);
