65a66
>     private static final double DEFAULT_EPSILON = 10e-9;
68,73d68
<     private static final int MAXIMUM_ITERATIONS = 100;
< 
<     
<     private static final double EPSILON = 10e-9;
< 
<     
88a84,88
>     public static double regularizedGammaP(double a, double x) {
>         return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);
>     }
>     
>     
105c105,113
<     public static double regularizedGammaP(double a, double x) {
---
> 
> 
> 
> 
> 
> 
> 
> 
>     public static double regularizedGammaP(double a, double x, double epsilon, int maxIterations) {
117c125
<             while (Math.abs(an) > EPSILON && n < MAXIMUM_ITERATIONS) {
---
>             while (Math.abs(an) > epsilon && n < maxIterations) {
125c133
<             if (n >= MAXIMUM_ITERATIONS) {
---
>             if (n >= maxIterations) {
129c137
<                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
---
>                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a, epsilon, maxIterations)) * sum;
157c165
<     public static double logGamma(double x) {
---
>     public static double logGamma(double x, double epsilon, int maxIterations) {
