19a20,21
> 
> import org.apache.commons.math.MathRuntimeException;
203c205,206
<             throw new ArithmeticException("The denominator must not be zero");
---
>             throw MathRuntimeException.createArithmeticException("zero denominator in fraction {0}/{1}",
>                                                                  new Object[] { num, den});
206,208c209,211
<             if (num == Integer.MIN_VALUE ||
<                     den == Integer.MIN_VALUE) {
<                 throw new ArithmeticException("overflow: can't negate");
---
>             if (num == Integer.MIN_VALUE || den == Integer.MIN_VALUE) {
>                 throw MathRuntimeException.createArithmeticException("overflow in fraction {0}/{1}, cannot negate",
>                                                                      new Object[] { num, den});
364c367,368
<             throw new ArithmeticException("overflow: too large to negate");
---
>             throw MathRuntimeException.createArithmeticException("overflow in fraction {0}/{1}, cannot negate",
>                                                                  new Object[] { numerator, denominator});
454,455c458,459
<             throw new ArithmeticException
<             ("overflow: numerator too large after multiply");
---
>             throw MathRuntimeException.createArithmeticException("overflow, numerator too large after multiply: {0}",
>                                                                  new Object[] { w });
503c507,508
<             throw new ArithmeticException("The fraction to divide by must not be zero");
---
>             throw MathRuntimeException.createArithmeticException("the fraction to divide by must not be zero: {0}/{1}",
>                                                                  new Object[] { fraction.numerator, fraction.denominator });
521c526,527
<             throw new ArithmeticException("The denominator must not be zero");
---
>             throw MathRuntimeException.createArithmeticException("zero denominator in fraction {0}/{1}",
>                                                                  new Object[] { numerator, denominator});
533c539,540
<                 throw new ArithmeticException("overflow: can't negate");
---
>                 throw MathRuntimeException.createArithmeticException("overflow in fraction {0}/{1}, cannot negate",
>                                                                      new Object[] { numerator, denominator});
