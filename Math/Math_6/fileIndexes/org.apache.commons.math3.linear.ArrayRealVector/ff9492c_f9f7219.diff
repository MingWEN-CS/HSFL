883a884,969
> 
>     
>     @Override
>     public double walkInDefaultOrder(final RealVectorPreservingVisitor visitor) {
>         visitor.start(data.length, 0, data.length - 1);
>         for (int i = 0; i < data.length; i++) {
>             visitor.visit(i, data[i]);
>         }
>         return visitor.end();
>     }
> 
>     
>     @Override
>     public double walkInDefaultOrder(final RealVectorPreservingVisitor visitor,
>         final int start, final int end) {
>         checkIndices(start, end);
>         visitor.start(data.length, start, end);
>         for (int i = start; i <= end; i++) {
>             visitor.visit(i, data[i]);
>         }
>         return visitor.end();
>     }
> 
>     
> 
> 
> 
> 
>     @Override
>     public double walkInOptimizedOrder(final RealVectorPreservingVisitor visitor) {
>         return walkInDefaultOrder(visitor);
>     }
> 
>     
> 
> 
> 
> 
>     @Override
>     public double walkInOptimizedOrder(final RealVectorPreservingVisitor visitor,
>         final int start, final int end) {
>         return walkInDefaultOrder(visitor, start, end);
>     }
> 
>     
>     @Override
>     public double walkInDefaultOrder(final RealVectorChangingVisitor visitor) {
>         visitor.start(data.length, 0, data.length - 1);
>         for (int i = 0; i < data.length; i++) {
>             data[i] = visitor.visit(i, data[i]);
>         }
>         return visitor.end();
>     }
> 
>     
>     @Override
>     public double walkInDefaultOrder(final RealVectorChangingVisitor visitor,
>         final int start, final int end) {
>         checkIndices(start, end);
>         visitor.start(data.length, start, end);
>         for (int i = start; i <= end; i++) {
>             data[i] = visitor.visit(i, data[i]);
>         }
>         return visitor.end();
>     }
> 
>     
> 
> 
> 
> 
>     @Override
>     public double walkInOptimizedOrder(final RealVectorChangingVisitor visitor) {
>         return walkInDefaultOrder(visitor);
>     }
> 
>     
> 
> 
> 
> 
>     @Override
>     public double walkInOptimizedOrder(final RealVectorChangingVisitor visitor,
>         final int start, final int end) {
>         return walkInDefaultOrder(visitor, start, end);
>     }
