18c18
< package org.apache.commons.math.linear;
---
> package org.apache.commons.math3.linear;
26,40c26,40
< import org.apache.commons.math.Field;
< import org.apache.commons.math.FieldElement;
< import org.apache.commons.math.exception.MathArithmeticException;
< import org.apache.commons.math.exception.MathIllegalArgumentException;
< import org.apache.commons.math.exception.OutOfRangeException;
< import org.apache.commons.math.exception.NoDataException;
< import org.apache.commons.math.exception.NumberIsTooSmallException;
< import org.apache.commons.math.exception.NullArgumentException;
< import org.apache.commons.math.exception.DimensionMismatchException;
< import org.apache.commons.math.exception.ZeroException;
< import org.apache.commons.math.exception.util.LocalizedFormats;
< import org.apache.commons.math.fraction.BigFraction;
< import org.apache.commons.math.fraction.Fraction;
< import org.apache.commons.math.util.FastMath;
< import org.apache.commons.math.util.MathUtils;
---
> import org.apache.commons.math3.Field;
> import org.apache.commons.math3.FieldElement;
> import org.apache.commons.math3.exception.MathArithmeticException;
> import org.apache.commons.math3.exception.MathIllegalArgumentException;
> import org.apache.commons.math3.exception.OutOfRangeException;
> import org.apache.commons.math3.exception.NoDataException;
> import org.apache.commons.math3.exception.NumberIsTooSmallException;
> import org.apache.commons.math3.exception.NullArgumentException;
> import org.apache.commons.math3.exception.DimensionMismatchException;
> import org.apache.commons.math3.exception.ZeroException;
> import org.apache.commons.math3.exception.util.LocalizedFormats;
> import org.apache.commons.math3.fraction.BigFraction;
> import org.apache.commons.math3.fraction.Fraction;
> import org.apache.commons.math3.util.FastMath;
> import org.apache.commons.math3.util.Precision;
840c840
<             if( FastMath.abs(diag) < MathUtils.SAFE_MIN ){
---
>             if( FastMath.abs(diag) < Precision.SAFE_MIN ){
880c880
<             if( FastMath.abs(diag) < MathUtils.SAFE_MIN ){
---
>             if( FastMath.abs(diag) < Precision.SAFE_MIN ){
