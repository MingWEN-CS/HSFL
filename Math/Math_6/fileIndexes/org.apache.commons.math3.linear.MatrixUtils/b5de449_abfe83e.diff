18a19,20
> import java.math.BigDecimal;
> 
55a58,99
> 
>     public static BigMatrix createBigMatrix(double[][] data) {
>         return new BigMatrixImpl(data);
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static BigMatrix createBigMatrix(BigDecimal[][] data) {
>         return new BigMatrixImpl(data);
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static BigMatrix createBigMatrix(String[][] data) {
>         return new BigMatrixImpl(data);
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
71a116,163
>     public static BigMatrix createRowBigMatrix(double[] rowData) {
>         int nCols = rowData.length;
>         double[][] data = new double[1][nCols];
>         System.arraycopy(rowData, 0, data[0], 0, nCols);
>         return new BigMatrixImpl(data);
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public static BigMatrix createRowBigMatrix(BigDecimal[] rowData) {
>         int nCols = rowData.length;
>         BigDecimal[][] data = new BigDecimal[1][nCols];
>         System.arraycopy(rowData, 0, data[0], 0, nCols);
>         return new BigMatrixImpl(data);
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public static BigMatrix createRowBigMatrix(String[] rowData) {
>         int nCols = rowData.length;
>         String[][] data = new String[1][nCols];
>         System.arraycopy(rowData, 0, data[0], 0, nCols);
>         return new BigMatrixImpl(data);
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
78a171,224
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public static BigMatrix createColumnBigMatrix(double[] columnData) {
>         int nRows = columnData.length;
>         double[][] data = new double[nRows][1];
>         for (int row = 0; row < nRows; row++) {
>             data[row][0] = columnData[row];
>         }
>         return new BigMatrixImpl(data);
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public static BigMatrix createColumnBigMatrix(BigDecimal[] columnData) {
>         int nRows = columnData.length;
>         BigDecimal[][] data = new BigDecimal[nRows][1];
>         for (int row = 0; row < nRows; row++) {
>             data[row][0] = columnData[row];
>         }
>         return new BigMatrixImpl(data);
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public static BigMatrix createColumnBigMatrix(String[] columnData) {
>         int nRows = columnData.length;
>         String[][] data = new String[nRows][1];
>         for (int row = 0; row < nRows; row++) {
>             data[row][0] = columnData[row];
>         }
>         return new BigMatrixImpl(data);
