29d28
< import org.apache.commons.math3.exception.MathIllegalArgumentException;
127c126,129
<     public static RealMatrix createRealMatrix(double[][] data) {
---
> 
>     public static RealMatrix createRealMatrix(double[][] data)
>         throws NullArgumentException, DimensionMismatchException,
>         NoDataException {
155c157,158
<     public static <T extends FieldElement<T>> FieldMatrix<T> createFieldMatrix(T[][] data) {
---
>     public static <T extends FieldElement<T>> FieldMatrix<T> createFieldMatrix(T[][] data)
>         throws DimensionMismatchException, NoDataException, NullArgumentException {
247c250,251
<     public static RealVector createRealVector(double[] data) {
---
>     public static RealVector createRealVector(double[] data)
>         throws NoDataException, NullArgumentException {
264c268,269
<     public static <T extends FieldElement<T>> FieldVector<T> createFieldVector(final T[] data) {
---
>     public static <T extends FieldElement<T>> FieldVector<T> createFieldVector(final T[] data)
>         throws NoDataException, NullArgumentException, ZeroException {
283c288,289
<     public static RealMatrix createRowRealMatrix(double[] rowData) {
---
>     public static RealMatrix createRowRealMatrix(double[] rowData)
>         throws NoDataException, NullArgumentException {
306c312,313
<         createRowFieldMatrix(final T[] rowData) {
---
>         createRowFieldMatrix(final T[] rowData)
>         throws NoDataException, NullArgumentException {
330c337,338
<     public static RealMatrix createColumnRealMatrix(double[] columnData) {
---
>     public static RealMatrix createColumnRealMatrix(double[] columnData)
>         throws NoDataException, NullArgumentException {
353c361,362
<         createColumnFieldMatrix(final T[] columnData) {
---
>         createColumnFieldMatrix(final T[] columnData)
>         throws NoDataException, NullArgumentException {
378c387,388
<                                         final int row, final int column) {
---
>                                         final int row, final int column)
>         throws OutOfRangeException {
390c400,401
<     public static void checkRowIndex(final AnyMatrix m, final int row) {
---
>     public static void checkRowIndex(final AnyMatrix m, final int row)
>         throws OutOfRangeException {
405c416,417
<     public static void checkColumnIndex(final AnyMatrix m, final int column) {
---
>     public static void checkColumnIndex(final AnyMatrix m, final int column)
>         throws OutOfRangeException {
427c439,440
<                                            final int startColumn, final int endColumn) {
---
>                                            final int startColumn, final int endColumn)
>         throws NumberIsTooSmallException, OutOfRangeException {
460c473,474
<                                            final int[] selectedColumns) {
---
>                                            final int[] selectedColumns)
>         throws NoDataException, NullArgumentException, OutOfRangeException {
489c503,505
<     public static void checkAdditionCompatible(final AnyMatrix left, final AnyMatrix right) {
---
> 
>     public static void checkAdditionCompatible(final AnyMatrix left, final AnyMatrix right)
>         throws MatrixDimensionMismatchException {
504c520,522
<     public static void checkSubtractionCompatible(final AnyMatrix left, final AnyMatrix right) {
---
> 
>     public static void checkSubtractionCompatible(final AnyMatrix left, final AnyMatrix right)
>         throws MatrixDimensionMismatchException {
519c537,540
<     public static void checkMultiplicationCompatible(final AnyMatrix left, final AnyMatrix right) {
---
> 
>     public static void checkMultiplicationCompatible(final AnyMatrix left, final AnyMatrix right)
>         throws DimensionMismatchException {
> 
838c859,864
<     public static void solveLowerTriangularSystem( RealMatrix rm, RealVector b){
---
> 
> 
> 
>     public static void solveLowerTriangularSystem(RealMatrix rm, RealVector b)
>         throws DimensionMismatchException, MathArithmeticException,
>         NonSquareMatrixException {
840c866
<             throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,
---
>             throw new DimensionMismatchException(
845,847c871,872
<             throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_2x2,
<                     rm.getRowDimension(),rm.getRowDimension(),
<                     rm.getRowDimension(),rm.getColumnDimension());
---
>             throw new NonSquareMatrixException(rm.getRowDimension(),
>                                                rm.getColumnDimension());
878c903,909
<     public static void solveUpperTriangularSystem( RealMatrix rm, RealVector b){
---
> 
> 
> 
> 
>     public static void solveUpperTriangularSystem(RealMatrix rm, RealVector b)
>         throws DimensionMismatchException, MathArithmeticException,
>         NonSquareMatrixException {
880c911
<             throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,
---
>             throw new DimensionMismatchException(
885,887c916,917
<             throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_2x2,
<                     rm.getRowDimension(),rm.getRowDimension(),
<                     rm.getRowDimension(),rm.getColumnDimension());
---
>             throw new NonSquareMatrixException(rm.getRowDimension(),
>                                                rm.getColumnDimension());
