179,186c179
<         if (n < k) {
<             throw new IllegalArgumentException(
<                 "must have n >= k for binomial coefficient (n,k)");
<         }
<         if (n < 0) {
<             throw new IllegalArgumentException(
<                 "must have n >= 0 for binomial coefficient (n,k)");
<         }
---
>         checkBinomial(n, k);
256,263c249
<         if (n < k) {
<             throw new IllegalArgumentException(
<                 "must have n >= k for binomial coefficient (n,k)");
<         }
<         if (n < 0) {
<             throw new IllegalArgumentException(
<                 "must have n >= 0 for binomial coefficient (n,k)");
<         }
---
>         checkBinomial(n, k);
304,311c290
<         if (n < k) {
<             throw new IllegalArgumentException(
<                 "must have n >= k for binomial coefficient (n,k)");
<         }
<         if (n < 0) {
<             throw new IllegalArgumentException(
<                 "must have n >= 0 for binomial coefficient (n,k)");
<         }
---
>         checkBinomial(n, k);
355a335,354
> 
>     
> 
> 
> 
> 
> 
>     private static void checkBinomial(final int n, final int k)
>         throws IllegalArgumentException {
>         if (n < k) {
>             throw MathRuntimeException.createIllegalArgumentException(
>                 "must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",
>                 n, k);
>         }
>         if (n < 0) {
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "must have n >= 0 for binomial coefficient (n,k), got n = {0}",
>                   n);
>         }
>     }
504c503,505
<             throw new IllegalArgumentException("must have n >= 0 for n!");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "must have n >= 0 for n!, got n = {0}",
>                   n);
535c536,538
<             throw new IllegalArgumentException("must have n >= 0 for n!");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "must have n >= 0 for n!, got n = {0}",
>                   n);
558c561,563
<             throw new IllegalArgumentException("must have n > 0 for n!");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "must have n >= 0 for n!, got n = {0}",
>                   n);
1135c1140,1151
<             throw new IllegalArgumentException("Invalid rounding method.");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "invalid rounding method {0}, valid methods: {1} ({2}), {3} ({4})," +
>                   " {5} ({6}), {7} ({8}), {9} ({10}), {11} ({12}), {13} ({14}), {15} ({16})",
>                   roundingMethod,
>                   "ROUND_CEILING",     BigDecimal.ROUND_CEILING,
>                   "ROUND_DOWN",        BigDecimal.ROUND_DOWN,
>                   "ROUND_FLOOR",       BigDecimal.ROUND_FLOOR,
>                   "ROUND_HALF_DOWN",   BigDecimal.ROUND_HALF_DOWN,
>                   "ROUND_HALF_EVEN",   BigDecimal.ROUND_HALF_EVEN,
>                   "ROUND_HALF_UP",     BigDecimal.ROUND_HALF_UP,
>                   "ROUND_UNNECESSARY", BigDecimal.ROUND_UNNECESSARY,
>                   "ROUND_UP",          BigDecimal.ROUND_UP);
