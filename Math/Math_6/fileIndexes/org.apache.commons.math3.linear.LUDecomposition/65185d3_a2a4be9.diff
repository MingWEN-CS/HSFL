92d91
<         final int m = matrix.getColumnDimension();
93a93
>         final int m = lu.length;
107a108,111
>             final double[] luColumnCol = new double[m];
>             for (int i = 0; i < m; i++) {
>                 luColumnCol[i] = lu[i][col];
>             }
114c118
<                     sum -= luRow[i] * lu[i][col];
---
>                     sum -= luRow[i] * luColumnCol[i];
116a121
>                 luColumnCol[row] = sum;
126c131
<                     sum -= luRow[i] * lu[i][col];
---
>                     sum -= luRow[i] * luColumnCol[i];
128a134
>                 luColumnCol[row] = sum;
138c144
<             if (FastMath.abs(lu[max][col]) < singularityThreshold) {
---
>             if (FastMath.abs(luColumnCol[max]) < singularityThreshold) {
145d150
<                 double tmp = 0;
149c154
<                     tmp = luMax[i];
---
>                     final double tmp = luMax[i];
153c158
<                 int temp = pivot[max];
---
>                 final int temp = pivot[max];
