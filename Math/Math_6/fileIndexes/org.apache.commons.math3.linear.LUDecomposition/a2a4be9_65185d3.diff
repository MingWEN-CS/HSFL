91a92
>         final int m = matrix.getColumnDimension();
93d93
<         final int m = lu.length;
108,111d107
<             final double[] luColumnCol = new double[m];
<             for (int i = 0; i < m; i++) {
<                 luColumnCol[i] = lu[i][col];
<             }
118c114
<                     sum -= luRow[i] * luColumnCol[i];
---
>                     sum -= luRow[i] * lu[i][col];
121d116
<                 luColumnCol[row] = sum;
131c126
<                     sum -= luRow[i] * luColumnCol[i];
---
>                     sum -= luRow[i] * lu[i][col];
134d128
<                 luColumnCol[row] = sum;
144c138
<             if (FastMath.abs(luColumnCol[max]) < singularityThreshold) {
---
>             if (FastMath.abs(lu[max][col]) < singularityThreshold) {
150a145
>                 double tmp = 0;
154c149
<                     final double tmp = luMax[i];
---
>                     tmp = luMax[i];
158c153
<                 final int temp = pivot[max];
---
>                 int temp = pivot[max];
