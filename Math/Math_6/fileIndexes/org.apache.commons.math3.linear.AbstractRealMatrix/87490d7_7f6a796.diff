64,66c64,66
<             throw MathRuntimeException.createIllegalArgumentException("invalid row dimension {0}" +
<                                                                       " (must be positive)",
<                                                                       new Object[] { rowDimension });
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                     "invalid row dimension {0} (must be positive)",
>                     rowDimension);
69,71c69,71
<             throw MathRuntimeException.createIllegalArgumentException("invalid column dimension {0}" +
<                                                                       " (must be positive)",
<                                                                       new Object[] { columnDimension });
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                     "invalid column dimension {0} (must be positive)",
>                     columnDimension);
330,333c330,331
<                     new Object[] {
<                         destination.length, destination[0].length,
<                         rowsCount, columnsCount
<                     });
---
>                     destination.length, destination[0].length,
>                     rowsCount, columnsCount);
375,378c373,374
<                     new Object[] {
<                         destination.length, destination[0].length,
<                         selectedRows.length, selectedColumns.length
<                     });
---
>                     destination.length, destination[0].length,
>                     selectedRows.length, selectedColumns.length);
397,398c393
<             throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row",
<                                                                       null); 
---
>             throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one row"); 
403,404c398
<             throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column",
<                                                                       null); 
---
>             throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column"); 
409,412c403,405
<                 throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",
<                                                                           new Object[] {
<                                                                               nCols, subMatrix[r].length
<                                                                           }); 
---
>                 throw MathRuntimeException.createIllegalArgumentException(
>                         "some rows have length {0} while others have length {1}",
>                         nCols, subMatrix[r].length); 
454,459c447,449
<             throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",
<                                              new Object[] {
<                                                  matrix.getRowDimension(),
<                                                  matrix.getColumnDimension(),
<                                                  1, nCols
<                                              });
---
>             throw new InvalidMatrixException(
>                     "dimensions mismatch: got {0}x{1} but expected {2}x{3}",
>                     matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
490,495c480,482
<             throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",
<                                              new Object[] {
<                                                  matrix.getRowDimension(),
<                                                  matrix.getColumnDimension(),
<                                                  nRows, 1
<                                              });
---
>             throw new InvalidMatrixException(
>                     "dimensions mismatch: got {0}x{1} but expected {2}x{3}",
>                     matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
516,520c503,505
<             throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",
<                                              new Object[] {
<                                                  1, vector.getDimension(),
<                                                  1, nCols
<                                              });
---
>             throw new InvalidMatrixException(
>                     "dimensions mismatch: got {0}x{1} but expected {2}x{3}",
>                     1, vector.getDimension(), 1, nCols);
541,545c526,528
<             throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",
<                                              new Object[] {
<                                                  vector.getDimension(), 1,
<                                                  nRows, 1
<                                              });
---
>             throw new InvalidMatrixException(
>                     "dimensions mismatch: got {0}x{1} but expected {2}x{3}",
>                     vector.getDimension(), 1, nRows, 1);
575,579c558,560
<             throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",
<                                              new Object[] {
<                                                  1, array.length,
<                                                  1, nCols
<                                              });
---
>             throw new InvalidMatrixException(
>                     "dimensions mismatch: got {0}x{1} but expected {2}x{3}",
>                     1, array.length, 1, nCols);
609,613c590,592
<             throw new InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",
<                                              new Object[] {
<                                                  array.length, 1,
<                                                  nRows, 1
<                                              });
---
>             throw new InvalidMatrixException(
>                     "dimensions mismatch: got {0}x{1} but expected {2}x{3}",
>                     array.length, 1, nRows, 1);
718,722c697,699
<             throw MathRuntimeException.createIllegalArgumentException("vector length mismatch:" +
<                                                                       " got {0} but expected {1}",
<                                                                       new Object[] {
<                                                                           v.length, nCols
<                                                                       });
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                     "vector length mismatch: got {0} but expected {1}",
>                     v.length, nCols);
747,751c724,726
<                 throw MathRuntimeException.createIllegalArgumentException("vector length mismatch:" +
<                                                                           " got {0} but expected {1}",
<                                                                           new Object[] {
<                                                                               v.getDimension(), nCols
<                                                                           });
---
>                 throw MathRuntimeException.createIllegalArgumentException(
>                         "vector length mismatch: got {0} but expected {1}",
>                         v.getDimension(), nCols);
774,778c749,751
<             throw MathRuntimeException.createIllegalArgumentException("vector length mismatch:" +
<                                                                       " got {0} but expected {1}",
<                                                                       new Object[] {
<                                                                           v.length, nRows
<                                                                       });
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                     "vector length mismatch: got {0} but expected {1}",
>                     v.length, nRows);
804,808c777,779
<                 throw MathRuntimeException.createIllegalArgumentException("vector length mismatch:" +
<                                                                           " got {0} but expected {1}",
<                                                                           new Object[] {
<                                                                               v.getDimension(), nRows
<                                                                           });
---
>                 throw MathRuntimeException.createIllegalArgumentException(
>                         "vector length mismatch: got {0} but expected {1}",
>                         v.getDimension(), nRows);
1122c1093
<                                            new Object[] { row, 0, getRowDimension() - 1});
---
>                                            row, 0, getRowDimension() - 1);
1135c1106
<                                            new Object[] { column, 0, getColumnDimension() - 1});
---
>                                            column, 0, getColumnDimension() - 1);
1155c1126
<                                            new Object[] { startRow, endRow });
---
>                                            startRow, endRow);
1162c1133
<                                            new Object[] { startColumn, endColumn });
---
>                                            startColumn, endColumn);
1179c1150
<                 throw new MatrixIndexException("empty selected row index array", null);
---
>                 throw new MatrixIndexException("empty selected row index array");
1181c1152
<             throw new MatrixIndexException("empty selected column index array", null);
---
>             throw new MatrixIndexException("empty selected column index array");
1200,1207c1171,1174
<             throw MathRuntimeException.createIllegalArgumentException("{0}x{1} and {2}x{3} matrices are not" +
<                                                                       " addition compatible",
<                                                                       new Object[] {
<                                                                           getRowDimension(),
<                                                                           getColumnDimension(),
<                                                                           m.getRowDimension(),
<                                                                           m.getColumnDimension()
<                                                                       });
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                     "{0}x{1} and {2}x{3} matrices are not addition compatible",
>                     getRowDimension(), getColumnDimension(),
>                     m.getRowDimension(), m.getColumnDimension());
1219,1226c1186,1189
<             throw MathRuntimeException.createIllegalArgumentException("{0}x{1} and {2}x{3} matrices are not" +
<                                                                       " subtraction compatible",
<                                                                       new Object[] {
<                                                                           getRowDimension(),
<                                                                           getColumnDimension(),
<                                                                           m.getRowDimension(),
<                                                                           m.getColumnDimension()
<                                                                       });
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                     "{0}x{1} and {2}x{3} matrices are not subtraction compatible",
>                     getRowDimension(), getColumnDimension(),
>                     m.getRowDimension(), m.getColumnDimension());
1237,1244c1200,1203
<             throw MathRuntimeException.createIllegalArgumentException("{0}x{1} and {2}x{3} matrices are not" +
<                                                                       " multiplication compatible",
<                                                                       new Object[] {
<                                                                           getRowDimension(),
<                                                                           getColumnDimension(),
<                                                                           m.getRowDimension(),
<                                                                           m.getColumnDimension()
<                                                                       });
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                     "{0}x{1} and {2}x{3} matrices are not multiplication compatible",
>                     getRowDimension(), getColumnDimension(),
>                     m.getRowDimension(), m.getColumnDimension());
