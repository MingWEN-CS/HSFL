18c18
< package org.apache.commons.math.linear;
---
> package org.apache.commons.math3.linear;
22,28c22,28
< import org.apache.commons.math.exception.NoDataException;
< import org.apache.commons.math.exception.NotStrictlyPositiveException;
< import org.apache.commons.math.exception.DimensionMismatchException;
< import org.apache.commons.math.exception.NullArgumentException;
< import org.apache.commons.math.exception.util.LocalizedFormats;
< import org.apache.commons.math.util.MathUtils;
< import org.apache.commons.math.util.FastMath;
---
> import org.apache.commons.math3.exception.NoDataException;
> import org.apache.commons.math3.exception.NotStrictlyPositiveException;
> import org.apache.commons.math3.exception.DimensionMismatchException;
> import org.apache.commons.math3.exception.NullArgumentException;
> import org.apache.commons.math3.exception.util.LocalizedFormats;
> import org.apache.commons.math3.util.MathUtils;
> import org.apache.commons.math3.util.FastMath;
567c567,570
<     public abstract void addToEntry(int row, int column, double increment);
---
>     public void addToEntry(int row, int column, double increment) {
>         MatrixUtils.checkMatrixIndex(this, row, column);
>         setEntry(row, column, getEntry(row, column) + increment);
>     }
570c573,576
<     public abstract void multiplyEntry(int row, int column, double factor);
---
>     public void multiplyEntry(int row, int column, double factor) {
>         MatrixUtils.checkMatrixIndex(this, row, column);
>         setEntry(row, column, getEntry(row, column) * factor);
>     }
