157a158,164
>     private static final double CBRTTWO[] = { 0.6299605249474366,
>                                             0.7937005259840998, 
>                                             1.0, 
>                                             1.2599210498948732, 
>                                             1.5874010519681994 };
> 
>     
219,226d225
<     public static double cbrt(final double a) {
<         return Math.cbrt(a);
<     }
< 
<     
< 
< 
< 
1023,1027d1021
<                 if (hiPrec != null) {
<                     hiPrec[0] = ya;
<                     hiPrec[1] = yb;
<                 }
< 
2886a2881,2964
>     }
> 
>     
> 
> 
> 
>     public static double cbrt(double x) {
>       
>       long inbits = Double.doubleToLongBits(x);
>       int exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
>       boolean subnormal = false;
> 
>       if (exponent == -1023) {
>           if (x == 0) {
>               return x;
>           }
> 
>           
>           subnormal = true;
>           x *= 1.8014398509481984E16;  
>           inbits = Double.doubleToLongBits(x);
>           exponent = (int) ((inbits >> 52) & 0x7ff) - 1023;
>       }
> 
>       if (exponent == 1024) {
>           
>           return x;
>       }
> 
>       
>       int exp3 = exponent / 3;
> 
>       
>       double p2 = Double.longBitsToDouble((inbits & 0x8000000000000000L) | 
>                                           (long)(((exp3 + 1023) & 0x7ff)) << 52);
> 
>       
>       final double mant = Double.longBitsToDouble((inbits & 0x000fffffffffffffL) | 0x3ff0000000000000L);
>       
>       
>       double est = -0.010714690733195933;
>       est = est * mant + 0.0875862700108075;
>       est = est * mant + -0.3058015757857271;
>       est = est * mant + 0.7249995199969751;
>       est = est * mant + 0.5039018405998233;
> 
>       est *= CBRTTWO[exponent % 3 + 2];
> 
>       
>       
>       
>       final double xs = x / (p2*p2*p2); 
>       est += (xs - est*est*est) / (3*est*est);
>       est += (xs - est*est*est) / (3*est*est);
> 
>       
>       double temp = est * 1073741824.0;
>       double ya = est + temp - temp;
>       double yb = est - ya;
> 
>       double za = ya * ya;
>       double zb = ya * yb * 2.0 + yb * yb;
>       temp = za * 1073741824.0;
>       double temp2 = za + temp - temp;
>       zb += (za - temp2);
>       za = temp2;
> 
>       zb = za * yb + ya * zb + zb * yb;
>       za = za * ya;
> 
>       double na = xs - za;
>       double nb = -(na - xs + za);
>       nb -= zb;
> 
>       est += (na+nb)/(3*est*est);
> 
>       
>       est *= p2;
> 
>       if (subnormal) {
>           est *= 3.814697265625E-6;  
>       }
> 
>       return est;
