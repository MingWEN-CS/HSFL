28a29
> import org.apache.commons.math3.exception.MathIllegalArgumentException;
126,129c127
< 
<     public static RealMatrix createRealMatrix(double[][] data)
<         throws NullArgumentException, DimensionMismatchException,
<         NoDataException {
---
>     public static RealMatrix createRealMatrix(double[][] data) {
157,158c155
<     public static <T extends FieldElement<T>> FieldMatrix<T> createFieldMatrix(T[][] data)
<         throws DimensionMismatchException, NoDataException, NullArgumentException {
---
>     public static <T extends FieldElement<T>> FieldMatrix<T> createFieldMatrix(T[][] data) {
250,251c247
<     public static RealVector createRealVector(double[] data)
<         throws NoDataException, NullArgumentException {
---
>     public static RealVector createRealVector(double[] data) {
268,269c264
<     public static <T extends FieldElement<T>> FieldVector<T> createFieldVector(final T[] data)
<         throws NoDataException, NullArgumentException, ZeroException {
---
>     public static <T extends FieldElement<T>> FieldVector<T> createFieldVector(final T[] data) {
288,289c283
<     public static RealMatrix createRowRealMatrix(double[] rowData)
<         throws NoDataException, NullArgumentException {
---
>     public static RealMatrix createRowRealMatrix(double[] rowData) {
312,313c306
<         createRowFieldMatrix(final T[] rowData)
<         throws NoDataException, NullArgumentException {
---
>         createRowFieldMatrix(final T[] rowData) {
337,338c330
<     public static RealMatrix createColumnRealMatrix(double[] columnData)
<         throws NoDataException, NullArgumentException {
---
>     public static RealMatrix createColumnRealMatrix(double[] columnData) {
361,362c353
<         createColumnFieldMatrix(final T[] columnData)
<         throws NoDataException, NullArgumentException {
---
>         createColumnFieldMatrix(final T[] columnData) {
387,388c378
<                                         final int row, final int column)
<         throws OutOfRangeException {
---
>                                         final int row, final int column) {
400,401c390
<     public static void checkRowIndex(final AnyMatrix m, final int row)
<         throws OutOfRangeException {
---
>     public static void checkRowIndex(final AnyMatrix m, final int row) {
416,417c405
<     public static void checkColumnIndex(final AnyMatrix m, final int column)
<         throws OutOfRangeException {
---
>     public static void checkColumnIndex(final AnyMatrix m, final int column) {
439,440c427
<                                            final int startColumn, final int endColumn)
<         throws NumberIsTooSmallException, OutOfRangeException {
---
>                                            final int startColumn, final int endColumn) {
473,474c460
<                                            final int[] selectedColumns)
<         throws NoDataException, NullArgumentException, OutOfRangeException {
---
>                                            final int[] selectedColumns) {
503,505c489
< 
<     public static void checkAdditionCompatible(final AnyMatrix left, final AnyMatrix right)
<         throws MatrixDimensionMismatchException {
---
>     public static void checkAdditionCompatible(final AnyMatrix left, final AnyMatrix right) {
520,522c504
< 
<     public static void checkSubtractionCompatible(final AnyMatrix left, final AnyMatrix right)
<         throws MatrixDimensionMismatchException {
---
>     public static void checkSubtractionCompatible(final AnyMatrix left, final AnyMatrix right) {
537,540c519
< 
<     public static void checkMultiplicationCompatible(final AnyMatrix left, final AnyMatrix right)
<         throws DimensionMismatchException {
< 
---
>     public static void checkMultiplicationCompatible(final AnyMatrix left, final AnyMatrix right) {
859,864c838
< 
< 
< 
<     public static void solveLowerTriangularSystem(RealMatrix rm, RealVector b)
<         throws DimensionMismatchException, MathArithmeticException,
<         NonSquareMatrixException {
---
>     public static void solveLowerTriangularSystem( RealMatrix rm, RealVector b){
866c840
<             throw new DimensionMismatchException(
---
>             throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,
871,872c845,847
<             throw new NonSquareMatrixException(rm.getRowDimension(),
<                                                rm.getColumnDimension());
---
>             throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_2x2,
>                     rm.getRowDimension(),rm.getRowDimension(),
>                     rm.getRowDimension(),rm.getColumnDimension());
903,909c878
< 
< 
< 
< 
<     public static void solveUpperTriangularSystem(RealMatrix rm, RealVector b)
<         throws DimensionMismatchException, MathArithmeticException,
<         NonSquareMatrixException {
---
>     public static void solveUpperTriangularSystem( RealMatrix rm, RealVector b){
911c880
<             throw new DimensionMismatchException(
---
>             throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,
916,917c885,887
<             throw new NonSquareMatrixException(rm.getRowDimension(),
<                                                rm.getColumnDimension());
---
>             throw new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_2x2,
>                     rm.getRowDimension(),rm.getRowDimension(),
>                     rm.getRowDimension(),rm.getColumnDimension());
