25a26
> import java.util.HashSet;
26a28
> import java.util.Set;
324c326,329
<         double mostNegative = getDecisionVariableValue(getOriginalNumDecisionVariables());
---
>         Integer basicRow =
>             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
>         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
>         Set<Integer> basicRows = new HashSet<Integer>();
326,327c331,341
<             coefficients[i] =
<                 getDecisionVariableValue(i) - (restrictToNonNegative ? 0 : mostNegative); 
---
>             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
>             if (basicRows.contains(basicRow)) {
>                 
>                 
>                 coefficients[i] = 0;
>             } else {
>                 basicRows.add(basicRow);
>                 coefficients[i] =
>                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
>                     (restrictToNonNegative ? 0 : mostNegative);
>             }
331,354d344
< 
<     
< 
< 
< 
< 
< 
< 
< 
<     protected double getDecisionVariableValue(final int decisionVariable) {
<       int col = getNumObjectiveFunctions() + decisionVariable;  
<       Integer basicRow = getBasicRow(col);
<       if (basicRow == null) {
<           return 0;
<       }
<       
<       
<       for (int i = getNumObjectiveFunctions(); i < col; i++) {
<           if (tableau.getEntry(basicRow, i) == 1) {
<               return 0;
<           }
<       }
<       return getEntry(basicRow, getRhsOffset()); 
<   }
