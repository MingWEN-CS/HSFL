2,155d1
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< package org.apache.commons.math.genetics;
< 
< import java.util.ArrayList;
< import java.util.Iterator;
< import java.util.List;
< 
< import org.apache.commons.math.exception.util.LocalizedFormats;
< import org.apache.commons.math.exception.NotPositiveException;
< import org.apache.commons.math.exception.NumberIsTooLargeException;
< 
< 
< 
< 
< 
< 
< 
< public abstract class ListPopulation implements Population {
< 
<     
<     private List<Chromosome> chromosomes;
< 
<     
<     private int populationLimit;
< 
< 
<     
< 
< 
< 
< 
< 
<     public ListPopulation (List<Chromosome> chromosomes, int populationLimit) {
<         if (chromosomes.size() > populationLimit) {
<             throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,
<                                                 chromosomes.size(), populationLimit, false);
<         }
<         if (populationLimit < 0) {
<             throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit);
<         }
< 
<         this.chromosomes = chromosomes;
<         this.populationLimit = populationLimit;
<     }
< 
<     
< 
< 
< 
< 
< 
<     public ListPopulation (int populationLimit) {
<         if (populationLimit < 0) {
<             throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit);
<         }
<         this.populationLimit = populationLimit;
<         this.chromosomes = new ArrayList<Chromosome>(populationLimit);
<     }
< 
<     
< 
< 
< 
<     public void setChromosomes(List<Chromosome> chromosomes) {
<         this.chromosomes = chromosomes;
<     }
< 
<     
< 
< 
< 
<     public List<Chromosome> getChromosomes() {
<         return chromosomes;
<     }
< 
<     
< 
< 
< 
<     public void addChromosome(Chromosome chromosome) {
<         this.chromosomes.add(chromosome);
<     }
< 
<     
< 
< 
< 
<     public Chromosome getFittestChromosome() {
<         
<         Chromosome bestChromosome = this.chromosomes.get(0);
<         for (Chromosome chromosome : this.chromosomes) {
<             if (chromosome.compareTo(bestChromosome) > 0) {
<                 
<                 bestChromosome = chromosome;
<             }
<         }
<         return bestChromosome;
<     }
< 
<     
< 
< 
< 
<     public int getPopulationLimit() {
<         return this.populationLimit;
<     }
< 
<     
< 
< 
< 
<     public void setPopulationLimit(int populationLimit) {
<         this.populationLimit = populationLimit;
<     }
< 
<     
< 
< 
< 
<     public int getPopulationSize() {
<         return this.chromosomes.size();
<     }
< 
<     
< 
< 
<     @Override
<     public String toString() {
<         return this.chromosomes.toString();
<     }
< 
<     
< 
< 
< 
< 
<     public Iterator<Chromosome> iterator() {
<         return chromosomes.iterator();
<     }
< }
