21,23d20
< import org.apache.commons.math3.exception.NotPositiveException;
< import org.apache.commons.math3.exception.util.LocalizedFormats;
< 
1151c1148
<                 exp--;
---
>                 --exp;
1171,1172c1168,1170
<                 double ya = LN_QUICK_COEF[LN_QUICK_COEF.length-1][0];
<                 double yb = LN_QUICK_COEF[LN_QUICK_COEF.length-1][1];
---
>                 final double[] lnCoef_last = LN_QUICK_COEF[LN_QUICK_COEF.length - 1];
>                 double ya = lnCoef_last[0];
>                 double yb = lnCoef_last[1];
1184,1185c1182,1184
<                     aa = ya + LN_QUICK_COEF[i][0];
<                     ab = yb + LN_QUICK_COEF[i][1];
---
>                     final double[] lnCoef_i = LN_QUICK_COEF[i];
>                     aa = ya + lnCoef_i[0];
>                     ab = yb + lnCoef_i[1];
1205c1204
<         double lnm[] = lnMant.LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];
---
>         final double[] lnm = lnMant.LN_MANT[(int)((bits & 0x000ffc0000000000L) >> 42)];
1216c1215
<         double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
---
>         final double epsilon = (bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L));
1230,1231c1229,1230
<             double numer = bits & 0x3ffffffffffL;
<             double denom = TWO_POWER_52 + (bits & 0x000ffc0000000000L);
---
>             final double numer = bits & 0x3ffffffffffL;
>             final double denom = TWO_POWER_52 + (bits & 0x000ffc0000000000L);
1236,1237c1235,1237
<             double ya = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][0];
<             double yb = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1][1];
---
>             final double[] lnCoef_last = LN_HI_PREC_COEF[LN_HI_PREC_COEF.length-1];
>             double ya = lnCoef_last[0];
>             double yb = lnCoef_last[1];
1249,1250c1249,1251
<                 aa = ya + LN_HI_PREC_COEF[i][0];
<                 ab = yb + LN_HI_PREC_COEF[i][1];
---
>                 final double[] lnCoef_i = LN_HI_PREC_COEF[i];
>                 aa = ya + lnCoef_i[0];
>                 ab = yb + lnCoef_i[1];
1582,1609d1582
< 
<     
< 
< 
< 
< 
< 
< 
<     public static double pow(double d, int e) {
<         if (e == 0) {
<             return 1.0;
<         } else if (e < 0) {
<             e = -e;
<             d = 1.0 / d;
<         }
< 
<         double result = 1;
<         double d2p    = d;
<         while (e != 0) {
<             if ((e & 0x1) != 0) {
<                 result *= d2p;
<             }
<             d2p *= d2p;
<             e = e >> 1;
<         }
< 
<         return result;
<     }
