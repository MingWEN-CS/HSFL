613d612
< 
679a679,767
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static long gcd(final long p, final long q) {
>         long u = p;
>         long v = q;
>         if ((u == 0) || (v == 0)) {
>             if ((u == Long.MIN_VALUE) || (v == Long.MIN_VALUE)){
>                 throw MathRuntimeException.createArithmeticException(
>                         "overflow: gcd({0}, {1}) is 2^63",
>                         p, q);
>             }
>             return (Math.abs(u) + Math.abs(v));
>         }
>         
>         
>         
>         
>         
>         if (u > 0) {
>             u = -u;
>         } 
>         if (v > 0) {
>             v = -v;
>         } 
>         
>         int k = 0;
>         while ((u & 1) == 0 && (v & 1) == 0 && k < 63) { 
>                                                             
>             u /= 2;
>             v /= 2;
>             k++; 
>         }
>         if (k == 63) {
>             throw MathRuntimeException.createArithmeticException(
>                     "overflow: gcd({0}, {1}) is 2^63",
>                     p, q);
>         }
>         
>         
>         long t = ((u & 1) == 1) ? v : -(u / 2);
>         
>         
>         do {
>             
>             
>             while ((t & 1) == 0) { 
>                 t /= 2; 
>             }
>             
>             if (t > 0) {
>                 u = -t;
>             } else {
>                 v = t;
>             }
>             
>             t = (v - u) / 2;
>             
>             
>         } while (t != 0);
>         return -u * (1L << k); 
>     }
> 
>     
> 
> 
> 
> 
> 
794,795c882,920
<         if (lcm == Integer.MIN_VALUE){
<             throw new ArithmeticException("overflow: lcm is 2^31");
---
>         if (lcm == Integer.MIN_VALUE) {
>             throw MathRuntimeException.createArithmeticException(
>                 "overflow: lcm({0}, {1}) is 2^31",
>                 a, b);
>         }
>         return lcm;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static long lcm(long a, long b) {
>         if (a==0 || b==0){
>             return 0;
>         }
>         long lcm = Math.abs(mulAndCheck(a / gcd(a, b), b));
>         if (lcm == Long.MIN_VALUE){
>             throw MathRuntimeException.createArithmeticException(
>                 "overflow: lcm({0}, {1}) is 2^63",
>                 a, b);
