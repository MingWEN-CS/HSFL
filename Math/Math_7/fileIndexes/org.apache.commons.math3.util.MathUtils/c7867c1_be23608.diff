2405c2405,2413
<         return s12High + (prod1Low + prod2Low + s12Low);
---
>         double result = s12High + (prod1Low + prod2Low + s12Low);
> 
>         if (Double.isNaN(result)) {
>             
>             
>             result = a1 * b1 + a2 * b2;
>         }
> 
>         return result;
2495c2503,2511
<         return s123High + (prod1Low + prod2Low + prod3Low + s12Low + s123Low);
---
>         double result = s123High + (prod1Low + prod2Low + prod3Low + s12Low + s123Low);
> 
>         if (Double.isNaN(result)) {
>             
>             
>             result = a1 * b1 + a2 * b2 + a3 * b3;
>         }
> 
>         return result;
2607c2623,2631
<         return s1234High + (prod1Low + prod2Low + prod3Low + prod4Low + s12Low + s123Low + s1234Low);
---
>         double result = s1234High + (prod1Low + prod2Low + prod3Low + prod4Low + s12Low + s123Low + s1234Low);
> 
>         if (Double.isNaN(result)) {
>             
>             
>             result = a1 * b1 + a2 * b2 + a3 * b3 + a4 * b4;
>         }
> 
>         return result;
2670c2694,2706
<         return sHighPrev + (prodLowSum + sLowSum);
---
>         double result = sHighPrev + (prodLowSum + sLowSum);
> 
>         if (Double.isNaN(result)) {
>             
>             
>             result = 0;
>             for (int i = 0; i < len; ++i) {
>                 result += a[i] * b[i];
>             }
>         }
> 
>         return result;
> 
2671a2708
> 
