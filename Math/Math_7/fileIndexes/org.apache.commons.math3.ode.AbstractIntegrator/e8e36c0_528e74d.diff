140,145c140,143
<             throw new IntegratorException("dimensions mismatch: ODE problem has dimension {0}," +
<                                           " initial state vector has dimension {1}",
<                                           new Object[] {
<                                               Integer.valueOf(equations.getDimension()),
<                                               Integer.valueOf(y0.length)
<                                           });
---
>             throw new IntegratorException(
>                     "dimensions mismatch: ODE problem has dimension {0}," +
>                     " initial state vector has dimension {1}",
>                     equations.getDimension(), y0.length);
149,154c147,150
<             throw new IntegratorException("dimensions mismatch: ODE problem has dimension {0}," +
<                                           " final state vector has dimension {1}",
<                                           new Object[] {
<                                               Integer.valueOf(equations.getDimension()),
<                                               Integer.valueOf(y.length)
<                                           });
---
>             throw new IntegratorException(
>                     "dimensions mismatch: ODE problem has dimension {0}," +
>                     " final state vector has dimension {1}",
>                     equations.getDimension(), y.length);
158,161c154,156
<             throw new IntegratorException("too small integration interval: length = {0}",
<                                           new Object[] {
<                                               Double.valueOf(Math.abs(t - t0))
<                                           });
---
>             throw new IntegratorException(
>                     "too small integration interval: length = {0}",
>                     Math.abs(t - t0));
