23a24,26
> import org.apache.commons.math3.exception.DimensionMismatchException;
> import org.apache.commons.math3.exception.MathInternalError;
> import org.apache.commons.math3.exception.MaxCountExceededException;
265c268
<    public StepInterpolator copy() {
---
>    public StepInterpolator copy() throws MaxCountExceededException {
394a398
> 
396c400,401
<                                                                  double oneMinusThetaH);
---
>                                                                  double oneMinusThetaH)
>       throws MaxCountExceededException;
400c405,407
<   private void evaluateCompleteInterpolatedState() {
---
> 
>   private void evaluateCompleteInterpolatedState()
>       throws MaxCountExceededException {
411c418
<   public double[] getInterpolatedState() {
---
>   public double[] getInterpolatedState() throws MaxCountExceededException {
413,414c420,426
<       primaryMapper.extractEquationData(interpolatedState,
<                                         interpolatedPrimaryState);
---
>       try {
>           primaryMapper.extractEquationData(interpolatedState,
>                                             interpolatedPrimaryState);
>       } catch (DimensionMismatchException dme) {
>           
>           throw new MathInternalError(dme);
>       }
419c431
<   public double[] getInterpolatedDerivatives() {
---
>   public double[] getInterpolatedDerivatives() throws MaxCountExceededException {
421,422c433,439
<       primaryMapper.extractEquationData(interpolatedDerivatives,
<                                         interpolatedPrimaryDerivatives);
---
>       try {
>           primaryMapper.extractEquationData(interpolatedDerivatives,
>                                             interpolatedPrimaryDerivatives);
>       } catch (DimensionMismatchException dme) {
>           
>           throw new MathInternalError(dme);
>       }
427c444
<   public double[] getInterpolatedSecondaryState(final int index) {
---
>   public double[] getInterpolatedSecondaryState(final int index) throws MaxCountExceededException {
429,430c446,452
<       secondaryMappers[index].extractEquationData(interpolatedState,
<                                                   interpolatedSecondaryState[index]);
---
>       try {
>           secondaryMappers[index].extractEquationData(interpolatedState,
>                                                       interpolatedSecondaryState[index]);
>       } catch (DimensionMismatchException dme) {
>           
>           throw new MathInternalError(dme);
>       }
435c457
<   public double[] getInterpolatedSecondaryDerivatives(final int index) {
---
>   public double[] getInterpolatedSecondaryDerivatives(final int index) throws MaxCountExceededException {
437,438c459,465
<       secondaryMappers[index].extractEquationData(interpolatedDerivatives,
<                                                   interpolatedSecondaryDerivatives[index]);
---
>       try {
>           secondaryMappers[index].extractEquationData(interpolatedDerivatives,
>                                                       interpolatedSecondaryDerivatives[index]);
>       } catch (DimensionMismatchException dme) {
>           
>           throw new MathInternalError(dme);
>       }
481c508,510
<   public final void finalizeStep() {
---
> 
> 
>   public final void finalizeStep() throws MaxCountExceededException {
492c521,522
<   protected void doFinalize() {
---
> 
>   protected void doFinalize() throws MaxCountExceededException {
540,541c570,577
<     
<     finalizeStep();
---
>     try {
>         
>         finalizeStep();
>     } catch (MaxCountExceededException mcee) {
>         final IOException ioe = new IOException(mcee.getLocalizedMessage());
>         ioe.initCause(mcee);
>         throw ioe;
>     }
