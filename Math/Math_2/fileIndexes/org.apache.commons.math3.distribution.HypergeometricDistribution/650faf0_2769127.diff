24a25,26
> import org.apache.commons.math3.random.RandomGenerator;
> import org.apache.commons.math3.random.Well19937c;
36d37
< 
39d39
< 
42d41
< 
45d43
< 
48d45
< 
65a63,85
>         this(new Well19937c(), populationSize, numberOfSuccesses, sampleSize);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public HypergeometricDistribution(RandomGenerator rng,
>                                       int populationSize,
>                                       int numberOfSuccesses,
>                                       int sampleSize)
>     throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException {
>         super(rng);
> 
275c295
<         return ( n * m * (N - n) * (N - m) ) / ( (N * N * (N - 1)) );
---
>         return (n * m * (N - n) * (N - m)) / (N * N * (N - 1));
289c309
<                 getSampleSize() + getNumberOfSuccesses() - getPopulationSize());
---
>                             getSampleSize() + getNumberOfSuccesses() - getPopulationSize());
