22c22
< import org.apache.commons.math.ode.ExpandableFirstOrderDifferentialEquations;
---
> import org.apache.commons.math.ode.ExpandableStatefulODE;
192,194c192
<   public double integrate(final ExpandableFirstOrderDifferentialEquations equations,
<                           final double t0, final double[] z0,
<                           final double t, final double[] z)
---
>   public void integrate(final ExpandableStatefulODE equations, final double t)
197c195
<     sanityChecks(equations, t0, z0, t, z);
---
>     sanityChecks(equations, t);
200c198
<     final boolean forward = t > t0;
---
>     final boolean forward = t > equations.getTime();
203,208c201,202
<     final int totalDim = equations.getDimension();
<     final int mainDim  = equations.getMainSetDimension();
<     final double[] y0  = new double[totalDim];
<     final double[] y   = new double[totalDim];
<     System.arraycopy(z0, 0, y0, 0, mainDim);
<     System.arraycopy(equations.getCurrentAdditionalStates(), 0, y0, mainDim, totalDim - mainDim);
---
>     final double[] y0  = equations.getCompleteState();
>     final double[] y = y0.clone();
210,215c204,206
<     if (y != y0) {
<       System.arraycopy(y0, 0, y, 0, totalDim);
<     }
<     final double[][] yDotK = new double[stages][totalDim];
<     final double[] yTmp    = new double[totalDim];
<     final double[] yDotTmp = new double[totalDim];
---
>     final double[][] yDotK = new double[stages][y.length];
>     final double[] yTmp    = new double[y.length];
>     final double[] yDotTmp = new double[y.length];
219,220c210,212
<     interpolator.reinitialize(this, yTmp, yDotK, forward);
<     interpolator.storeTime(t0);
---
>     interpolator.reinitialize(this, yTmp, yDotK, forward,
>                               equations.getPrimaryMapper(), equations.getSecondaryMappers());
>     interpolator.storeTime(equations.getTime());
223c215
<     stepStart         = t0;
---
>     stepStart         = equations.getTime();
335,336c327,328
<     System.arraycopy(y, 0, z, 0, z.length);
<     equations.setCurrentAdditionalState(y);
---
>     equations.setTime(stepStart);
>     equations.setCompleteState(y);
338d329
<     final double stopTime = stepStart;
340d330
<     return stopTime;
