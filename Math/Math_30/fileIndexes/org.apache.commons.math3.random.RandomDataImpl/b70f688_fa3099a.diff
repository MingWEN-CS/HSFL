18c18
< package org.apache.commons.math.random;
---
> package org.apache.commons.math3.random;
27,46c27,46
< import org.apache.commons.math.distribution.BetaDistribution;
< import org.apache.commons.math.distribution.BinomialDistribution;
< import org.apache.commons.math.distribution.CauchyDistribution;
< import org.apache.commons.math.distribution.ChiSquaredDistribution;
< import org.apache.commons.math.distribution.RealDistribution;
< import org.apache.commons.math.distribution.FDistribution;
< import org.apache.commons.math.distribution.HypergeometricDistribution;
< import org.apache.commons.math.distribution.IntegerDistribution;
< import org.apache.commons.math.distribution.PascalDistribution;
< import org.apache.commons.math.distribution.TDistribution;
< import org.apache.commons.math.distribution.WeibullDistribution;
< import org.apache.commons.math.distribution.ZipfDistribution;
< import org.apache.commons.math.exception.MathIllegalArgumentException;
< import org.apache.commons.math.exception.MathInternalError;
< import org.apache.commons.math.exception.NotStrictlyPositiveException;
< import org.apache.commons.math.exception.NumberIsTooLargeException;
< import org.apache.commons.math.exception.util.LocalizedFormats;
< import org.apache.commons.math.util.ArithmeticUtils;
< import org.apache.commons.math.util.FastMath;
< import org.apache.commons.math.util.ResizableDoubleArray;
---
> import org.apache.commons.math3.distribution.BetaDistribution;
> import org.apache.commons.math3.distribution.BinomialDistribution;
> import org.apache.commons.math3.distribution.CauchyDistribution;
> import org.apache.commons.math3.distribution.ChiSquaredDistribution;
> import org.apache.commons.math3.distribution.RealDistribution;
> import org.apache.commons.math3.distribution.FDistribution;
> import org.apache.commons.math3.distribution.HypergeometricDistribution;
> import org.apache.commons.math3.distribution.IntegerDistribution;
> import org.apache.commons.math3.distribution.PascalDistribution;
> import org.apache.commons.math3.distribution.TDistribution;
> import org.apache.commons.math3.distribution.WeibullDistribution;
> import org.apache.commons.math3.distribution.ZipfDistribution;
> import org.apache.commons.math3.exception.MathIllegalArgumentException;
> import org.apache.commons.math3.exception.MathInternalError;
> import org.apache.commons.math3.exception.NotStrictlyPositiveException;
> import org.apache.commons.math3.exception.NumberIsTooLargeException;
> import org.apache.commons.math3.exception.util.LocalizedFormats;
> import org.apache.commons.math3.util.ArithmeticUtils;
> import org.apache.commons.math3.util.FastMath;
> import org.apache.commons.math3.util.ResizableDoubleArray;
200c200
<     public String nextHexString(int len) throws NotStrictlyPositiveException {
---
>     public String nextHexString(int len) {
236c236
<     public int nextInt(int lower, int upper) throws NumberIsTooLargeException {
---
>     public int nextInt(int lower, int upper) {
273c273
<     public String nextSecureHexString(int len) throws NotStrictlyPositiveException {
---
>     public String nextSecureHexString(int len) {
335,336c335
<     public long nextSecureLong(long lower, long upper)
<         throws NumberIsTooLargeException {
---
>     public long nextSecureLong(long lower, long upper) {
361c360
<     public long nextPoisson(double mean) throws NotStrictlyPositiveException {
---
>     public long nextPoisson(double mean) {
453,454c452
<     public double nextGaussian(double mu, double sigma)
<         throws NotStrictlyPositiveException {
---
>     public double nextGaussian(double mu, double sigma) {
473,474c471
<     public double nextExponential(double mean)
<         throws NotStrictlyPositiveException {
---
>     public double nextExponential(double mean) {
531,532c528
<     public double nextUniform(double lower, double upper)
<         throws NumberIsTooLargeException, MathIllegalArgumentException {
---
>     public double nextUniform(double lower, double upper) {
553,554c549
<         boolean lowerInclusive)
<         throws NumberIsTooLargeException, MathIllegalArgumentException {
---
>         boolean lowerInclusive) {
972,973c967
<     public Object[] nextSample(Collection<?> c, int k)
<         throws NumberIsTooLargeException, NotStrictlyPositiveException {
---
>     public Object[] nextSample(Collection<?> c, int k) {
