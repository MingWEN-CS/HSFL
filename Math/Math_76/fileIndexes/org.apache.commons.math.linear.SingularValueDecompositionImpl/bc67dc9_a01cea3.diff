118c118,119
<             singularValues[i] = Math.sqrt(singularValues[i]);
---
>             final double si = singularValues[i];
>             singularValues[i] = (si < 0) ? 0.0 : Math.sqrt(si);
137a139,140
>                     final double mi = mainBidiagonal[i];
>                     final double si = secondaryBidiagonal[i];
142,143c145
<                         ei0[j] = (mainBidiagonal[i] * ei0[j] +
<                                   secondaryBidiagonal[i] * ei1[j]) / singularValues[j];
---
>                         ei0[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j];
217a220,221
>                     final double mi = mainBidiagonal[i];
>                     final double si = secondaryBidiagonal[i];
222,223c226
<                         ei0[j] = (mainBidiagonal[i] * ei0[j] +
<                                   secondaryBidiagonal[i] * ei1[j]) / singularValues[j];
---
>                         ei0[j] = (mi * ei0[j] + si * ei1[j]) / singularValues[j];
