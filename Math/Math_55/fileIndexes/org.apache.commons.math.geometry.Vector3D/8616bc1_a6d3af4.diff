33c33
<   public static final Vector3D plusI = new Vector3D(1, 0, 0);
---
>   public static final Vector3D ZERO   = new Vector3D(0, 0, 0);
36c36
<   public static final Vector3D minusI = new Vector3D(-1, 0, 0);
---
>   public static final Vector3D PLUS_I = new Vector3D(1, 0, 0);
39c39
<   public static final Vector3D plusJ = new Vector3D(0, 1, 0);
---
>   public static final Vector3D MINUS_I = new Vector3D(-1, 0, 0);
42c42
<   public static final Vector3D minusJ = new Vector3D(0, -1, 0);
---
>   public static final Vector3D PLUS_J = new Vector3D(0, 1, 0);
45c45
<   public static final Vector3D plusK = new Vector3D(0, 0, 1);
---
>   public static final Vector3D MINUS_J = new Vector3D(0, -1, 0);
48c48
<   public static final Vector3D minusK = new Vector3D(0, 0, -1);
---
>   public static final Vector3D PLUS_K = new Vector3D(0, 0, 1);
51c51
<   public static final Vector3D zero   = new Vector3D(0, 0, 0);
---
>   public static final Vector3D MINUS_K = new Vector3D(0, 0, -1);
53a54
>   private static final long serialVersionUID = -6155041477622120793L;
54a56,57
>   
>   private final double x;
56,60c59,63
<   public Vector3D() {
<     x = 0;
<     y = 0;
<     z = 0;
<   }
---
>   
>   private final double y;
> 
>   
>   private final double z;
187a191,197
>   public double getNormSq() {
>     return x * x + y * y + z * z;
>   }
> 
>   
> 
> 
351d360
<   private final double x;
353,354d361
<   
<   private final double y;
356,357c363,373
<   
<   private final double z;
---
> 
> 
> 
> 
> 
>   public static double distance(Vector3D v1, Vector3D v2) {
>     final double dx = v2.x - v1.x;
>     final double dy = v2.y - v1.y;
>     final double dz = v2.z - v1.z;
>     return Math.sqrt(dx * dx + dy * dy + dz * dz);
>   }
360d375
<   private static final long serialVersionUID = -5721105387745193385L;
361a377,388
> 
> 
> 
> 
> 
> 
>   public static double distanceSq(Vector3D v1, Vector3D v2) {
>     final double dx = v2.x - v1.x;
>     final double dy = v2.y - v1.y;
>     final double dz = v2.z - v1.z;
>     return dx * dx + dy * dy + dz * dz;
>   }
