603,620c603,629
<         Dfp x = three;
<         x = x.sqrt();
<         x = one.divide(x);
< 
<         Dfp denom = one;
< 
<         Dfp py = new Dfp(x);
<         Dfp y  = new Dfp(x);
< 
<         for (int i = 1; i < 10000; i++) {
<             x = x.divide(three);
<             denom = denom.add(two);
<             if ((i&1) != 0) {
<                 y = y.subtract(x.divide(denom));
<             } else {
<                 y = y.add(x.divide(denom));
<             }
<             if (y.equals(py)) {
---
>         Dfp sqrt2   = two.sqrt();
>         Dfp yk      = sqrt2.subtract(one);
>         Dfp four    = two.add(two);
>         Dfp two2kp3 = two;
>         Dfp ak      = two.multiply(three.subtract(two.multiply(sqrt2)));
> 
>         
>         
>         
>         
>         
>         
>         for (int i = 1; i < 20; i++) {
>             final Dfp ykM1 = yk;
> 
>             final Dfp y2         = yk.multiply(yk);
>             final Dfp oneMinusY4 = one.subtract(y2.multiply(y2));
>             final Dfp s          = oneMinusY4.sqrt().sqrt();
>             yk = one.subtract(s).divide(one.add(s));
> 
>             two2kp3 = two2kp3.multiply(four);
> 
>             final Dfp p = one.add(yk);
>             final Dfp p2 = p.multiply(p);
>             ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));
> 
>             if (yk.equals(ykM1)) {
623d631
<             py = new Dfp(y);
626c634
<         return y.multiply(new Dfp(one.getField(), 6));
---
>         return one.divide(ak);
