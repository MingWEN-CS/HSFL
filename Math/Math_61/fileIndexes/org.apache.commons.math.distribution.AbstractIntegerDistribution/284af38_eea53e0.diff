23a24
> import org.apache.commons.math.random.RandomDataImpl;
49a51,56
> 
>     protected final RandomDataImpl randomData = new RandomDataImpl();
> 
>     
> 
> 
208a216,259
>     }
> 
>     
> 
> 
> 
> 
> 
>     public void reseedRandomGenerator(long seed) {
>         randomData.reSeed(seed);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     public int sample() throws MathException {
>         return randomData.nextInversionDeviate(this);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public int[] sample(int sampleSize) throws MathException {
>         if (sampleSize <= 0) {
>             MathRuntimeException.createIllegalArgumentException("Sample size must be positive");
>         }
>         int[] out = new int[sampleSize];
>         for (int i = 0; i < sampleSize; i++) {
>             out[i] = sample();
>         }
>         return out;
