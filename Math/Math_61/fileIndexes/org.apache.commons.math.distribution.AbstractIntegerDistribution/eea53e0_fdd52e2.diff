24a25
> import org.apache.commons.math.util.LocalizedFormats;
37,45c38
<     
<     private static final String WRONG_ORDER_ENDPOINTS_MESSAGE =
<         "lower endpoint ({0}) must be less than or equal to upper endpoint ({1})";
< 
<     
<     private static final String OUT_OF_RANGE_POINT =
<         "{0} out of [{1}, {2}] range";
< 
<     
---
>    
98c91
<                   WRONG_ORDER_ENDPOINTS_MESSAGE, x0, x1);
---
>                   LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT, x0, x1);
155c148
<                   WRONG_ORDER_ENDPOINTS_MESSAGE, x0, x1);
---
>                   LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT, x0, x1);
174c167
<                   OUT_OF_RANGE_POINT, p, 0.0, 1.0);
---
>                   LocalizedFormats.OUT_OF_RANGE_SIMPLE, p, 0.0, 1.0);
253c246
<             MathRuntimeException.createIllegalArgumentException("Sample size must be positive");
---
>             MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE, sampleSize);
277c270
<             throw new FunctionEvaluationException(ex, argument, ex.getPattern(), ex.getArguments());
---
>             throw new FunctionEvaluationException(ex, argument, ex.getLocalizablePattern(), ex.getArguments());
281c274
<                 "Discrete cumulative probability function returned NaN for argument {0}", argument);
---
>                 LocalizedFormats.DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN, argument);
