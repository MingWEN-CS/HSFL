















package org.apache.commons.math.stat.descriptive.moment;

import java.io.Serializable;

import org.apache.commons.math.exception.NullArgumentException;
import org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic;
import org.apache.commons.math.util.MathUtils;


























class FirstMoment extends AbstractStorelessUnivariateStatistic
    implements Serializable {

    
    private static final long serialVersionUID = 6112755307178490473L;


    
    protected long n;

    
    protected double m1;

    



    protected double dev;

    




    protected double nDev;

    


    public FirstMoment() {
        n = 0;
        m1 = Double.NaN;
        dev = Double.NaN;
        nDev = Double.NaN;
    }

    





     public FirstMoment(FirstMoment original) {
         super();
         copy(original, this);
     }

    


     @Override
    public void increment(final double d) {
        if (n == 0) {
            m1 = 0.0;
        }
        n++;
        double n0 = n;
        dev = d - m1;
        nDev = dev / n0;
        m1 += nDev;
    }

    


    @Override
    public void clear() {
        m1 = Double.NaN;
        n = 0;
        dev = Double.NaN;
        nDev = Double.NaN;
    }

    


    @Override
    public double getResult() {
        return m1;
    }

    


    public long getN() {
        return n;
    }

    


    @Override
    public FirstMoment copy() {
        FirstMoment result = new FirstMoment();
        copy(this, result);
        return result;
    }

    







    public static void copy(FirstMoment source, FirstMoment dest)
        throws NullArgumentException {
        MathUtils.checkNotNull(source);
        MathUtils.checkNotNull(dest);
        dest.setData(source.getDataRef());
        dest.n = source.n;
        dest.m1 = source.m1;
        dest.dev = source.dev;
        dest.nDev = source.nDev;
    }
}
