















package org.apache.commons.math.stat.descriptive;

import org.apache.commons.math.MathRuntimeException;














public abstract class AbstractUnivariateStatistic
    implements UnivariateStatistic {

    


    public double evaluate(final double[] values) {
        test(values, 0, 0);
        return evaluate(values, 0, values.length);
    }

    


    public abstract double evaluate(final double[] values, final int begin, final int length);
    
    


    public abstract UnivariateStatistic copy();

    


















    protected boolean test(
        final double[] values,
        final int begin,
        final int length) {

        if (values == null) {
            throw MathRuntimeException.createIllegalArgumentException("input values array is null");
        }
        
        if (begin < 0) {
            throw MathRuntimeException.createIllegalArgumentException(
                  "start position cannot be negative ({0})", begin);
        }
        
        if (length < 0) {
            throw MathRuntimeException.createIllegalArgumentException(
                  "length cannot be negative ({0})", length);
        }
        
        if (begin + length > values.length) {
            throw MathRuntimeException.createIllegalArgumentException(
                  "subarray ends after array end");
        }

        if (length == 0) {
            return false;
        }

        return true;

    }
}
