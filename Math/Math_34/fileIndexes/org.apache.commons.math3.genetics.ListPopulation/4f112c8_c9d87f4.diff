19a20,21
> import java.util.Collection;
> import java.util.Collections;
24a27
> import org.apache.commons.math3.exception.NullArgumentException;
25a29
> import org.apache.commons.math3.exception.NumberIsTooSmallException;
40a45,53
>     
> 
> 
> 
> 
> 
>     public ListPopulation(final int populationLimit) {
>         this(Collections.<Chromosome> emptyList(), populationLimit);
>     }
49a63
> 
51,53c65,66
<         if (chromosomes.size() > populationLimit) {
<             throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,
<                                                 chromosomes.size(), populationLimit, false);
---
>         if (chromosomes == null) {
>             throw new NullArgumentException();
58,59c71,74
< 
<         this.chromosomes = chromosomes;
---
>         if (chromosomes.size() > populationLimit) {
>             throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,
>                                                 chromosomes.size(), populationLimit, false);
>         }
60a76,77
>         this.chromosomes = new ArrayList<Chromosome>(populationLimit);
>         this.chromosomes.addAll(chromosomes);
69,71c86,91
<     public ListPopulation(final int populationLimit) {
<         if (populationLimit <= 0) {
<             throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit);
---
> 
> 
> 
>     public void setChromosomes(final List<Chromosome> chromosomes) {
>         if (chromosomes == null) {
>             throw new NullArgumentException();
73,74c93,98
<         this.populationLimit = populationLimit;
<         this.chromosomes = new ArrayList<Chromosome>(populationLimit);
---
>         if (chromosomes.size() > populationLimit) {
>             throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,
>                                                 chromosomes.size(), populationLimit, false);
>         }
>         this.chromosomes.clear();
>         this.chromosomes.addAll(chromosomes);
81,82c105,112
<     public void setChromosomes(final List<Chromosome> chromosomes) {
<         this.chromosomes = chromosomes;
---
> 
> 
>     public void addChromosomes(final Collection<Chromosome> chromosomeColl) {
>         if (chromosomes.size() + chromosomeColl.size() > populationLimit) {
>             throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,
>                                                 chromosomes.size(), populationLimit, false);
>         }
>         this.chromosomes.addAll(chromosomeColl);
89a120,127
>         return Collections.unmodifiableList(chromosomes);
>     }
> 
>     
> 
> 
> 
>     protected List<Chromosome> getChromosomeList() {
96a135,136
> 
> 
97a138,141
>         if (chromosomes.size() >= populationLimit) {
>             throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,
>                                                 chromosomes.size(), populationLimit, false);
>         }
128a173,175
> 
> 
> 
129a177,182
>         if (populationLimit <= 0) {
>             throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit);
>         }
>         if (populationLimit < chromosomes.size()) {
>             throw new NumberIsTooSmallException(populationLimit, chromosomes.size(), true);
>         }
