119,124c119,125
<             for (Integer row : minRatioPositions) {
<                 for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
<                     int column = i + tableau.getArtificialVariableOffset();
<                     final double entry = tableau.getEntry(row, column);
<                     if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {
<                         return row;
---
>                 for (Integer row : minRatioPositions) {
>                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
>                         int column = i + tableau.getArtificialVariableOffset();
>                         final double entry = tableau.getEntry(row, column);
>                         if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {
>                             return row;
>                         }
127d127
<             }
134,141c134,147
<             Integer minRow = null;
<             int minIndex = tableau.getWidth();
<             for (Integer row : minRatioPositions) {
<                 for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1 && minRow != row; i++) {
<                     if (row == tableau.getBasicRow(i)) {
<                         if (i < minIndex) {
<                             minIndex = i;
<                             minRow = row;
---
>             
>             
>             
>             
>                 Integer minRow = null;
>                 int minIndex = tableau.getWidth();
>                 for (Integer row : minRatioPositions) {
>                     int i = tableau.getNumObjectiveFunctions();
>                     for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
>                         if (row == tableau.getBasicRow(i)) {
>                             if (i < minIndex) {
>                                 minIndex = i;
>                                 minRow = row;
>                             }
145,147c151
<             }
< 
<             return minRow;
---
>                 return minRow;
