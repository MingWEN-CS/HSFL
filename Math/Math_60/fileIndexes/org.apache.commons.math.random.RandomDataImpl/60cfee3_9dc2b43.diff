45a46
> import org.apache.commons.math.util.FastMath;
365c366
<             double p = Math.exp(-mean);
---
>             double p = FastMath.exp(-mean);
381c382
<             final double lambda = Math.floor(mean);
---
>             final double lambda = FastMath.floor(mean);
383c384
<             final double logLambda = Math.log(lambda);
---
>             final double logLambda = FastMath.log(lambda);
386c387
<             final double delta = Math.sqrt(lambda * Math.log(32 * lambda / Math.PI + 1));
---
>             final double delta = FastMath.sqrt(lambda * FastMath.log(32 * lambda / FastMath.PI + 1));
389,390c390,391
<             final double a1 = Math.sqrt(Math.PI * twolpd) * Math.exp(1 / 8 * lambda);
<             final double a2 = (twolpd / delta) * Math.exp(-delta * (1 + delta) / twolpd);
---
>             final double a1 = FastMath.sqrt(FastMath.PI * twolpd) * FastMath.exp(1 / 8 * lambda);
>             final double a2 = (twolpd / delta) * FastMath.exp(-delta * (1 + delta) / twolpd);
407c408
<                     x = n * Math.sqrt(lambda + halfDelta) - 0.5d;
---
>                     x = n * FastMath.sqrt(lambda + halfDelta) - 0.5d;
411c412
<                     y = x < 0 ? Math.floor(x) : Math.ceil(x);
---
>                     y = x < 0 ? FastMath.floor(x) : FastMath.ceil(x);
420c421
<                         y = Math.ceil(x);
---
>                         y = FastMath.ceil(x);
490c491
<         return -mean * Math.log(unif);
---
>         return -mean * FastMath.log(unif);
