26a27
> import org.apache.commons.math.MathRuntimeException;
135c136,137
<             throw new IllegalArgumentException("length must be positive");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "length must be positive ({0})", len);
180,181c182,184
<             throw new IllegalArgumentException(
<                     "upper bound must be > lower bound");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                     "upper bound ({0}) must be greater than lower bound ({1})",
>                     upper, lower);
183,184c186
<         RandomGenerator rand = getRan();
<         double r = rand.nextDouble();
---
>         double r = getRan().nextDouble();
200,201c202,204
<             throw new IllegalArgumentException(
<                     "upper bound must be > lower bound");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "upper bound ({0}) must be greater than lower bound ({1})",
>                   upper, lower);
203,204c206
<         RandomGenerator rand = getRan();
<         double r = rand.nextDouble();
---
>         double r = getRan().nextDouble();
230c232,233
<             throw new IllegalArgumentException("length must be positive");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "length must be positive ({0})", len);
239c242,243
<             return null; 
---
>             
>             throw MathRuntimeException.createInternalError(ex);
289,290c293,295
<             throw new IllegalArgumentException(
<                     "lower bound must be < upper bound");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "upper bound ({0}) must be greater than lower bound ({1})",
>                   upper, lower);
309,310c314,316
<             throw new IllegalArgumentException(
<                     "lower bound must be < upper bound");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "upper bound ({0}) must be greater than lower bound ({1})",
>                   upper, lower);
347c353,354
<             throw new IllegalArgumentException("Poisson mean must be > 0");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "the Poisson mean must be positive ({0})", mean);
350c357
<         RandomGenerator rand = getRan();
---
>         final RandomGenerator generator = getRan();
360c367
<                 rnd = rand.nextDouble();
---
>                 rnd = generator.nextDouble();
449c456,457
<             throw new IllegalArgumentException("Gaussian std dev must be > 0");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "standard deviation must be positive ({0})", sigma);
451,452c459
<         RandomGenerator rand = getRan();
<         return sigma * rand.nextGaussian() + mu;
---
>         return sigma * getRan().nextGaussian() + mu;
471c478,479
<             throw new IllegalArgumentException("Exponential mean must be >= 0");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "mean must be positive ({0})", mean);
473,474c481,482
<         RandomGenerator rand = getRan();
<         double unif = rand.nextDouble();
---
>         final RandomGenerator generator = getRan();
>         double unif = generator.nextDouble();
476c484
<             unif = rand.nextDouble();
---
>             unif = generator.nextDouble();
499,500c507,509
<             throw new IllegalArgumentException(
<                     "lower bound must be < upper bound");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "upper bound ({0}) must be greater than lower bound ({1})",
>                   upper, lower);
502c511
<         RandomGenerator rand = getRan();
---
>         final RandomGenerator generator = getRan();
505c514
<         double u = rand.nextDouble();
---
>         double u = generator.nextDouble();
507c516
<             u = rand.nextDouble();
---
>             u = generator.nextDouble();
658c667,668
<             throw new IllegalArgumentException("permutation k exceeds n");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "permutation k ({0}) exceeds n ({1})", k, n);
661c671,672
<             throw new IllegalArgumentException("permutation k must be > 0");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "permutation k ({0}) must be positive", k);
693,694c704,705
<             throw new IllegalArgumentException(
<                     "sample size exceeds collection size");
---
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "sample size ({0}) exceeds collection size ({1})");
696,697c707,709
<         if (k == 0) {
<             throw new IllegalArgumentException("sample size must be > 0");
---
>         if (k <= 0) {
>             throw MathRuntimeException.createIllegalArgumentException(
>                   "sample size must be positive ({0})", k);
747a760
> 
