25a26
> import org.apache.commons.math.analysis.solvers.BrentSolver;
42a44,46
>     private double solverAbsoluteAccuracy = BrentSolver.DEFAULT_ABSOLUTE_ACCURACY;
> 
>     
71a76
>                 double ret = Double.NaN;
73c78
<                     return cumulativeProbability(x) - p;
---
>                     ret = cumulativeProbability(x) - p;
76a82,86
>                 if (Double.isNaN(ret)) {
>                     throw new FunctionEvaluationException(x,
>                         "Cumulative probability function returned NaN for argument {0} p = {1}", x, p);
>                 }
>                 return ret;
94,96d103
< 
< 
< 
109c116,118
<                 bracket[0],bracket[1]);
---
>                 
>                 
>                 bracket[0],bracket[1], getSolverAbsoluteAccuracy());
143a153,161
> 
>     
> 
> 
> 
> 
>     protected double getSolverAbsoluteAccuracy() {
>         return solverAbsoluteAccuracy;
>     }
