984a985,1005
>     public void expm1(final double[] operand, final int operandOffset,
>                       final double[] result, final int resultOffset) {
> 
>         
>         double[] function = new double[1 + order];
>         function[0] = FastMath.expm1(operand[operandOffset]);
>         Arrays.fill(function, 1, 1 + order, FastMath.exp(operand[operandOffset]));
> 
>         
>         compose(operand, operandOffset, function, result, resultOffset);
> 
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
992a1014,1041
>             double xk  = inv;
>             for (int i = 1; i <= order; ++i) {
>                 function[i] = xk;
>                 xk *= -i * inv;
>             }
>         }
> 
>         
>         compose(operand, operandOffset, function, result, resultOffset);
> 
>     }
> 
>     
> 
> 
> 
> 
> 
> 
>     public void log1p(final double[] operand, final int operandOffset,
>                       final double[] result, final int resultOffset) {
>         
> 
>         
>         double[] function = new double[1 + order];
>         function[0] = FastMath.log1p(operand[operandOffset]);
>         if (order > 0) {
>             double inv = 1.0 / (1.0 + operand[operandOffset]);
