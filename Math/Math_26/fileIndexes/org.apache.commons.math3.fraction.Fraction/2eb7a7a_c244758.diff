23d22
< import org.apache.commons.math.MathRuntimeException;
24a24
> import org.apache.commons.math.exception.MathArithmeticException;
258,259c258,259
<             throw MathRuntimeException.createArithmeticException(
<                   LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION, num, den);
---
>             throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION,
>                                               num, den);
262,264c262,265
<             if (num == Integer.MIN_VALUE || den == Integer.MIN_VALUE) {
<                 throw MathRuntimeException.createArithmeticException(
<                       LocalizedFormats.OVERFLOW_IN_FRACTION, num, den);
---
>             if (num == Integer.MIN_VALUE ||
>                 den == Integer.MIN_VALUE) {
>                 throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,
>                                                   num, den);
406,407c407
<             throw MathRuntimeException.createArithmeticException(
<                   LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);
---
>             throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);
515,516c515,516
<             throw MathRuntimeException.createArithmeticException(LocalizedFormats.NUMERATOR_OVERFLOW_AFTER_MULTIPLY,
<                                                                  w);
---
>             throw new MathArithmeticException(LocalizedFormats.NUMERATOR_OVERFLOW_AFTER_MULTIPLY,
>                                               w);
573,575c573,574
<             throw MathRuntimeException.createArithmeticException(
<                     LocalizedFormats.ZERO_FRACTION_TO_DIVIDE_BY,
<                     fraction.numerator, fraction.denominator);
---
>             throw new MathArithmeticException(LocalizedFormats.ZERO_FRACTION_TO_DIVIDE_BY,
>                                               fraction.numerator, fraction.denominator);
602,603c601,602
<             throw MathRuntimeException.createArithmeticException(
<                   LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION, numerator, denominator);
---
>             throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION,
>                                               numerator, denominator);
615,616c614,615
<                 throw MathRuntimeException.createArithmeticException(
<                       LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);
---
>                 throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,
>                                                   numerator, denominator);
