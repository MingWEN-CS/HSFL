23a24
> import org.apache.commons.math.util.LocalizedFormats;
81,92d81
<     private static final String ZERO_DENOMINATOR_MESSAGE =
<         "zero denominator in fraction {0}/{1}";
< 
<     
<     private static final String OVERFLOW_MESSAGE =
<         "overflow in fraction {0}/{1}, cannot negate";
< 
<     
<     private static final String NULL_FRACTION =
<         "null fraction";
< 
<     
268c257
<                   ZERO_DENOMINATOR_MESSAGE, num, den);
---
>                   LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION, num, den);
273c262
<                       OVERFLOW_MESSAGE, num, den);
---
>                       LocalizedFormats.OVERFLOW_IN_FRACTION, num, den);
416c405
<                   OVERFLOW_MESSAGE, numerator, denominator);
---
>                   LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);
487c476
<             throw MathRuntimeException.createIllegalArgumentException(NULL_FRACTION);
---
>             throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FRACTION);
524c513
<             throw MathRuntimeException.createArithmeticException("overflow, numerator too large after multiply: {0}",
---
>             throw MathRuntimeException.createArithmeticException(LocalizedFormats.NUMERATOR_OVERFLOW_AFTER_MULTIPLY,
544c533
<             throw MathRuntimeException.createIllegalArgumentException(NULL_FRACTION);
---
>             throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FRACTION);
579c568
<             throw MathRuntimeException.createIllegalArgumentException(NULL_FRACTION);
---
>             throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FRACTION);
583c572
<                     "the fraction to divide by must not be zero: {0}/{1}",
---
>                     LocalizedFormats.ZERO_FRACTION_TO_DIVIDE_BY,
612c601
<                   ZERO_DENOMINATOR_MESSAGE, numerator, denominator);
---
>                   LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION, numerator, denominator);
625c614
<                       OVERFLOW_MESSAGE, numerator, denominator);
---
>                       LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);
