313a314,320
>     
>     
>     private static final long[] factorials = new long[] 
>        {1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800,
>         479001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l,
>         355687428096000l, 6402373705728000l, 121645100408832000l,
>         2432902008176640000l};
338,339c345,348
<         long result = Math.round(factorialDouble(n));
<         if (result == Long.MAX_VALUE) {
---
>         if (n < 0) {
>             throw new IllegalArgumentException("must have n >= 0 for n!");
>         }
>         if (n > 20) {
341c350
<                 "result too large to represent in a long integer");
---
>                     "factorial value is too large to fit in a long");
343c352
<         return result;
---
>         return factorials[n];
369a379,381
>         if (n < 21) {
>             return factorial(n);
>         }
388a401,403
>         }
>         if (n < 21) {
>             return Math.log(factorial(n));
