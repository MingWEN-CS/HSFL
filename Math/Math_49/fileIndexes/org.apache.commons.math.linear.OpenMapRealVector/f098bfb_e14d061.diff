21c21
< import org.apache.commons.math.MathRuntimeException;
---
> import org.apache.commons.math.exception.MathArithmeticException;
32d31
< public class OpenMapRealVector extends AbstractRealVector implements SparseRealVector, Serializable {
33a33,34
> public class OpenMapRealVector extends AbstractRealVector
>     implements SparseRealVector, Serializable {
36d36
< 
39d38
< 
42d40
< 
45d42
< 
65a63
> 
74a73
> 
85a85
> 
96a97
> 
106a108,109
> 
> 
117a121
> 
127a132
> 
144a150
> 
154a161
> 
170a178
> 
180a189
> 
196a206
> 
206a217,218
> 
> 
213c225
<     public RealVector add(RealVector v) throws IllegalArgumentException {
---
>         public RealVector add(RealVector v) {
228c240,243
<     public OpenMapRealVector add(OpenMapRealVector v) throws IllegalArgumentException{
---
> 
> 
> 
>     public OpenMapRealVector add(OpenMapRealVector v) {
301c316,318
<     public double dotProduct(OpenMapRealVector v) throws IllegalArgumentException {
---
> 
> 
>     public double dotProduct(OpenMapRealVector v) {
316c333
<     public double dotProduct(RealVector v) throws IllegalArgumentException {
---
>     public double dotProduct(RealVector v) {
325c342
<     public OpenMapRealVector ebeDivide(RealVector v) throws IllegalArgumentException {
---
>     public OpenMapRealVector ebeDivide(RealVector v) {
338c355
<     public OpenMapRealVector ebeDivide(double[] v) throws IllegalArgumentException {
---
>     public OpenMapRealVector ebeDivide(double[] v) {
350c367
<     public OpenMapRealVector ebeMultiply(RealVector v) throws IllegalArgumentException {
---
>     public OpenMapRealVector ebeMultiply(RealVector v) {
363c380
<     public OpenMapRealVector ebeMultiply(double[] v) throws IllegalArgumentException {
---
>     public OpenMapRealVector ebeMultiply(double[] v) {
375c392
<     public OpenMapRealVector getSubVector(int index, int n) throws MatrixIndexException {
---
>     public OpenMapRealVector getSubVector(int index, int n) {
414c431,433
<     public double getDistance(OpenMapRealVector v) throws IllegalArgumentException {
---
> 
> 
>     public double getDistance(OpenMapRealVector v) {
438c457
<     public double getDistance(RealVector v) throws IllegalArgumentException {
---
>     public double getDistance(RealVector v) {
448c467
<     public double getDistance(double[] v) throws IllegalArgumentException {
---
>     public double getDistance(double[] v) {
459c478
<     public double getEntry(int index) throws MatrixIndexException {
---
>     public double getEntry(int index) {
471a491
> 
494c514
<     public double getL1Distance(RealVector v) throws IllegalArgumentException {
---
>     public double getL1Distance(RealVector v) {
504c524
<     public double getL1Distance(double[] v) throws IllegalArgumentException {
---
>     public double getL1Distance(double[] v) {
518a539
> 
544c565
<     public double getLInfDistance(RealVector v) throws IllegalArgumentException {
---
>     public double getLInfDistance(RealVector v) {
554c575
<     public double getLInfDistance(double[] v) throws IllegalArgumentException {
---
>     public double getLInfDistance(double[] v) {
612c633
<     public RealMatrix outerProduct(double[] v) throws IllegalArgumentException {
---
>     public RealMatrix outerProduct(double[] v) {
628c649
<     public RealVector projection(RealVector v) throws IllegalArgumentException {
---
>     public RealVector projection(RealVector v) {
635c656
<     public OpenMapRealVector projection(double[] v) throws IllegalArgumentException {
---
>     public OpenMapRealVector projection(double[] v) {
641c662
<     public void setEntry(int index, double value) throws MatrixIndexException {
---
>     public void setEntry(int index, double value) {
652c673
<     public void setSubVector(int index, RealVector v) throws MatrixIndexException {
---
>     public void setSubVector(int index, RealVector v) {
660c681
<     public void setSubVector(int index, double[] v) throws MatrixIndexException {
---
>     public void setSubVector(int index, double[] v) {
682c703,705
<     public OpenMapRealVector subtract(OpenMapRealVector v) throws IllegalArgumentException{
---
> 
> 
>     public OpenMapRealVector subtract(OpenMapRealVector v) {
700c723
<     public OpenMapRealVector subtract(RealVector v) throws IllegalArgumentException {
---
>     public OpenMapRealVector subtract(RealVector v) {
710c733
<     public OpenMapRealVector subtract(double[] v) throws IllegalArgumentException {
---
>     public OpenMapRealVector subtract(double[] v) {
737c760
<             throw  MathRuntimeException.createArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);
---
>             throw new MathArithmeticException(LocalizedFormats.ZERO_NORM);
744d766
< 
747d768
< 
758a780
> 
821,831c843
< 
<     @Deprecated
<     public double getSparcity() {
<         return getSparsity();
<     }
< 
<     
< 
< 
< 
<    public double getSparsity() {
---
>     public double getSparsity() {
847d858
< 
853a865,866
> 
> 
884d896
< 
887d898
< 
911,912c922
<        }
< 
---
>         }
