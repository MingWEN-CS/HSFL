25a26
> import org.apache.commons.math.ode.events.EventState;
159a161,215
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
>     protected CombinedEventsManager addEndTimeChecker(final double endTime,
>                                                       final CombinedEventsManager manager) {
>         CombinedEventsManager newManager = new CombinedEventsManager();
>         for (final EventState state : manager.getEventsStates()) {
>             newManager.addEventHandler(state.getEventHandler(),
>                                        state.getMaxCheckInterval(),
>                                        state.getConvergence(),
>                                        state.getMaxIterationCount());
>         }
>         newManager.addEventHandler(new EndTimeChecker(endTime),
>                                    Double.POSITIVE_INFINITY, Math.ulp(endTime), 10);
>         return newManager;
>     }
> 
>     
>     private static class EndTimeChecker implements EventHandler {
> 
>         
>         private static final long serialVersionUID = -5211782540446301964L;
> 
>         
>         private final double endTime;
> 
>         
> 
> 
>         public EndTimeChecker(final double endTime) {
>             this.endTime = endTime;
>         }
> 
>         
>         public int eventOccurred(double t, double[] y) {
>             return STOP;
>         }
> 
>         
>         public double g(double t, double[] y) {
>             return t - endTime;
>         }
> 
>         
>         public void resetState(double t, double[] y) {
>         }
>         
