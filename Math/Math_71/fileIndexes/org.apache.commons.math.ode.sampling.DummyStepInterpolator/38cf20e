
















package org.apache.commons.math.ode.sampling;

import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import org.apache.commons.math.ode.DerivativeException;















public class DummyStepInterpolator
  extends AbstractStepInterpolator {

  









  public DummyStepInterpolator() {
    super();
  }

  




  public DummyStepInterpolator(final double[] y, final boolean forward) {
    super(y, forward);
  }

  




  public DummyStepInterpolator(final DummyStepInterpolator interpolator) {
    super(interpolator);
  }

  


  @Override
  protected StepInterpolator doCopy() {
    return new DummyStepInterpolator(this);
  }

  









  @Override
  protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
    throws DerivativeException {
      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
  }
    
  



  @Override
  public void writeExternal(final ObjectOutput out)
    throws IOException {
    
    writeBaseExternal(out);
  }

  



  @Override
  public void readExternal(final ObjectInput in)
    throws IOException {

    
    final double t = readBaseExternal(in);

    
    setInterpolatedTime(t);

  }

  
  private static final long serialVersionUID = 1708010296707839488L;

}
