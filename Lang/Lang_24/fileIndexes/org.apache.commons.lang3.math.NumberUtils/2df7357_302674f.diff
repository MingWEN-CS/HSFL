131a132,133
> 
> 
143a146,147
> 
> 
209,210c213,219
<     public static Number createNumber(String val) throws NumberFormatException {
<         if (val == null) {
---
> 
> 
> 
> 
> 
>     public static Number createNumber(String str) throws NumberFormatException {
>         if (str == null) {
213c222
<         if (val.length() == 0) {
---
>         if (str.length() == 0) {
216c225
<         if (val.startsWith("--")) {
---
>         if (str.startsWith("--")) {
223,224c232,233
<         if (val.startsWith("0x") || val.startsWith("-0x")) {
<             return createInteger(val);
---
>         if (str.startsWith("0x") || str.startsWith("-0x")) {
>             return createInteger(str);
226c235
<         char lastChar = val.charAt(val.length() - 1);
---
>         char lastChar = str.charAt(str.length() - 1);
230,231c239,240
<         int decPos = val.indexOf('.');
<         int expPos = val.indexOf('e') + val.indexOf('E') + 1;
---
>         int decPos = str.indexOf('.');
>         int expPos = str.indexOf('e') + str.indexOf('E') + 1;
237c246
<                     throw new NumberFormatException(val + " is not a valid number.");
---
>                     throw new NumberFormatException(str + " is not a valid number.");
239c248
<                 dec = val.substring(decPos + 1, expPos);
---
>                 dec = str.substring(decPos + 1, expPos);
241c250
<                 dec = val.substring(decPos + 1);
---
>                 dec = str.substring(decPos + 1);
243c252
<             mant = val.substring(0, decPos);
---
>             mant = str.substring(0, decPos);
246c255
<                 mant = val.substring(0, expPos);
---
>                 mant = str.substring(0, expPos);
248c257
<                 mant = val;
---
>                 mant = str;
253,254c262,263
<             if (expPos > -1 && expPos < val.length() - 1) {
<                 exp = val.substring(expPos + 1, val.length() - 1);
---
>             if (expPos > -1 && expPos < str.length() - 1) {
>                 exp = str.substring(expPos + 1, str.length() - 1);
259c268
<             String numeric = val.substring(0, val.length() - 1);
---
>             String numeric = str.substring(0, str.length() - 1);
276c285
<                     throw new NumberFormatException(val + " is not a valid number.");
---
>                     throw new NumberFormatException(str + " is not a valid number.");
305c314
<                     throw new NumberFormatException(val + " is not a valid number.");
---
>                     throw new NumberFormatException(str + " is not a valid number.");
311,312c320,321
<             if (expPos > -1 && expPos < val.length() - 1) {
<                 exp = val.substring(expPos + 1, val.length());
---
>             if (expPos > -1 && expPos < str.length() - 1) {
>                 exp = str.substring(expPos + 1, str.length());
319c328
<                     return createInteger(val);
---
>                     return createInteger(str);
323c332
<                     return createLong(val);
---
>                     return createLong(str);
326c335
<                 return createBigInteger(val);
---
>                 return createBigInteger(str);
332c341
<                     Float f = createFloat(val);
---
>                     Float f = createFloat(str);
339c348
<                     Double d = createDouble(val);
---
>                     Double d = createDouble(str);
346c355
<                 return createBigDecimal(val);
---
>                 return createBigDecimal(str);
360,361c369,370
<     private static boolean isAllZeros(String s) {
<         if (s == null) {
---
>     private static boolean isAllZeros(String str) {
>         if (str == null) {
364,365c373,374
<         for (int i = s.length() - 1; i >= 0; i--) {
<             if (s.charAt(i) != '0') {
---
>         for (int i = str.length() - 1; i >= 0; i--) {
>             if (str.charAt(i) != '0') {
369c378
<         return s.length() > 0;
---
>         return str.length() > 0;
380,381c389,395
<     public static Float createFloat(String val) {
<         return Float.valueOf(val);
---
> 
> 
>     public static Float createFloat(String str) {
>         if (str == null) {
>             return null;
>         }
>         return Float.valueOf(str);
391,392c405,411
<     public static Double createDouble(String val) {
<         return Double.valueOf(val);
---
> 
> 
>     public static Double createDouble(String str) {
>         if (str == null) {
>             return null;
>         }
>         return Double.valueOf(str);
403c422,424
<     public static Integer createInteger(String val) {
---
> 
> 
>     public static Integer createInteger(String str) {
405c426,429
<         return Integer.decode(val);
---
>         if (str == null) {
>             return null;
>         }
>         return Integer.decode(str);
415,416c439,445
<     public static Long createLong(String val) {
<         return Long.valueOf(val);
---
> 
> 
>     public static Long createLong(String str) {
>         if (str == null) {
>             return null;
>         }
>         return Long.valueOf(str);
426,427c455,461
<     public static BigInteger createBigInteger(String val) {
<         BigInteger bi = new BigInteger(val);
---
> 
> 
>     public static BigInteger createBigInteger(String str) {
>         if (str == null) {
>             return null;
>         }
>         BigInteger bi = new BigInteger(str);
438,439c472,478
<     public static BigDecimal createBigDecimal(String val) {
<         BigDecimal bd = new BigDecimal(val);
---
> 
> 
>     public static BigDecimal createBigDecimal(String str) {
>         if (str == null) {
>             return null;
>         }
>         BigDecimal bd = new BigDecimal(str);
