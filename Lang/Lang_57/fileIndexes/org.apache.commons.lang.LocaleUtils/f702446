














package org.apache.commons.lang;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;












public class LocaleUtils {

    






    public LocaleUtils() {
      super();
    }

    
    















    public static Locale toLocale(String str) {
        if (str == null) {
            return null;
        }
        if (str.length() != 2 &&
            str.length() != 5 &&
            str.length() < 7) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (Character.isLowerCase(str.charAt(0)) == false ||
            Character.isLowerCase(str.charAt(1)) == false) {
            throw new IllegalArgumentException("Invalid locale format: " + str);
        }
        if (str.length() == 2) {
            return new Locale(str, "");
        } else {
            if (Character.isUpperCase(str.charAt(3)) == false ||
                Character.isUpperCase(str.charAt(4)) == false) {
                throw new IllegalArgumentException("Invalid locale format: " + str);
            }
            if (str.length() == 5) {
                return new Locale(str.substring(0, 2), str.substring(3, 5));
            } else {
                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
            }
        }
    }

    
    











    public static List localeLookupList(Locale locale) {
        return localeLookupList(locale, locale);
    }

    
    















    public static List localeLookupList(Locale locale, Locale defaultLocale) {
        List list = new ArrayList(4);
        if (locale != null) {
            list.add(locale);
            if (locale.getVariant().length() > 0) {
                list.add(new Locale(locale.getLanguage(), locale.getCountry()));
            }
            if (locale.getCountry().length() > 0) {
                list.add(new Locale(locale.getLanguage(), ""));
            }
            if (list.contains(defaultLocale) == false) {
                list.add(defaultLocale);
            }
        }
        return list;
    }

    
    








    public static Set languagesByCountry(String countryCode) {
        Set set = new HashSet();
        Locale[] array = Locale.getAvailableLocales();
        if (countryCode != null) {
            for (int i = 0; i < array.length; i++) {
                if (countryCode.equals(array[i].getCountry()) &&
                        array[i].getVariant().length() == 0) {
                    set.add(array[i]);
                }
            }
        }
        return set;
    }

    
    








    public static Set countriesByLanguage(String languageCode) {
        Set set = new HashSet();
        Locale[] array = Locale.getAvailableLocales();
        if (languageCode != null) {
            for (int i = 0; i < array.length; i++) {
                if (languageCode.equals(array[i].getLanguage()) &&
                        array[i].getVariant().length() == 0) {
                    set.add(array[i]);
                }
            }
        }
        return set;
    }

}
