2098,2099c2098,2099
<     public static String left(String str, int len) {
<         if (str == null) {
---
>     public static String left(CharSequence seq, int len) {
>         if (seq == null) {
2105,2106c2105,2106
<         if (str.length() <= len) {
<             return str;
---
>         if (seq.length() <= len) {
>             return seq.toString();
2108c2108
<         return str.substring(0, len);
---
>         return seq.subSequence(0, len).toString();
2131,2132c2131,2132
<     public static String right(String str, int len) {
<         if (str == null) {
---
>     public static String right(CharSequence seq, int len) {
>         if (seq == null) {
2138,2139c2138,2139
<         if (str.length() <= len) {
<             return str;
---
>         if (seq.length() <= len) {
>             return seq.toString();
2141c2141
<         return str.substring(str.length() - len);
---
>         return StringUtils.subSequence(seq, seq.length() - len).toString();
2169,2170c2169,2170
<     public static String mid(String str, int pos, int len) {
<         if (str == null) {
---
>     public static String mid(CharSequence seq, int pos, int len) {
>         if (seq == null) {
2173c2173
<         if (len < 0 || pos > str.length()) {
---
>         if (len < 0 || pos > seq.length()) {
2179,2180c2179,2180
<         if (str.length() <= (pos + len)) {
<             return str.substring(pos);
---
>         if (seq.length() <= (pos + len)) {
>             return StringUtils.subSequence(seq, pos).toString();
2182c2182
<         return str.substring(pos, pos + len);
---
>         return seq.subSequence(pos, pos + len).toString();
4563,4564c4563,4564
<     public static String rightPad(String str, int size) {
<         return rightPad(str, size, ' ');
---
>     public static String rightPad(CharSequence seq, int size) {
>         return rightPad(seq, size, ' ');
4588,4589c4588,4589
<     public static String rightPad(String str, int size, char padChar) {
<         if (str == null) {
---
>     public static String rightPad(CharSequence seq, int size, char padChar) {
>         if (seq == null) {
4592c4592
<         int pads = size - str.length();
---
>         int pads = size - seq.length();
4594c4594
<             return str; 
---
>             return seq.toString(); 
4597c4597
<             return rightPad(str, size, String.valueOf(padChar));
---
>             return rightPad(seq, size, String.valueOf(padChar));
4599c4599
<         return str.concat(padding(pads, padChar));
---
>         return seq.toString().concat(padding(pads, padChar));
4625,4626c4625,4626
<     public static String rightPad(String str, int size, String padStr) {
<         if (str == null) {
---
>     public static String rightPad(CharSequence seq, int size, CharSequence padStr) {
>         if (seq == null) {
4633c4633
<         int strLen = str.length();
---
>         int strLen = seq.length();
4636c4636
<             return str; 
---
>             return seq.toString(); 
4639c4639
<             return rightPad(str, size, padStr.charAt(0));
---
>             return rightPad(seq, size, padStr.charAt(0));
4643c4643
<             return str.concat(padStr);
---
>             return seq.toString().concat(padStr.toString());
4645c4645
<             return str.concat(padStr.substring(0, pads));
---
>             return seq.toString().concat(padStr.subSequence(0, pads).toString());
4648c4648
<             char[] padChars = padStr.toCharArray();
---
>             char[] padChars = padStr.toString().toCharArray();
4652c4652
<             return str.concat(new String(padding));
---
>             return seq.toString().concat(new String(padding));
4675,4676c4675,4676
<     public static String leftPad(String str, int size) {
<         return leftPad(str, size, ' ');
---
>     public static String leftPad(CharSequence seq, int size) {
>         return leftPad(seq, size, ' ');
4700,4701c4700,4701
<     public static String leftPad(String str, int size, char padChar) {
<         if (str == null) {
---
>     public static String leftPad(CharSequence seq, int size, char padChar) {
>         if (seq == null) {
4704c4704
<         int pads = size - str.length();
---
>         int pads = size - seq.length();
4706c4706
<             return str; 
---
>             return seq.toString(); 
4709c4709
<             return leftPad(str, size, String.valueOf(padChar));
---
>             return leftPad(seq, size, String.valueOf(padChar));
4711c4711
<         return padding(pads, padChar).concat(str);
---
>         return padding(pads, padChar).concat(seq.toString());
4737,4738c4737,4738
<     public static String leftPad(String str, int size, String padStr) {
<         if (str == null) {
---
>     public static String leftPad(CharSequence seq, int size, CharSequence padStr) {
>         if (seq == null) {
4745c4745
<         int strLen = str.length();
---
>         int strLen = seq.length();
4748c4748
<             return str; 
---
>             return seq.toString(); 
4751c4751
<             return leftPad(str, size, padStr.charAt(0));
---
>             return leftPad(seq, size, padStr.charAt(0));
4755c4755
<             return padStr.concat(str);
---
>             return padStr.toString().concat(seq.toString());
4757c4757
<             return padStr.substring(0, pads).concat(str);
---
>             return padStr.subSequence(0, pads).toString().concat(seq.toString());
4760c4760
<             char[] padChars = padStr.toCharArray();
---
>             char[] padChars = padStr.toString().toCharArray();
4764c4764
<             return new String(padding).concat(str);
---
>             return new String(padding).concat(seq.toString());
4808,4809c4808,4809
<     public static String center(String str, int size) {
<         return center(str, size, ' ');
---
>     public static String center(CharSequence seq, int size) {
>         return center(seq, size, ' ');
4836,4838c4836,4838
<     public static String center(String str, int size, char padChar) {
<         if (str == null || size <= 0) {
<             return str;
---
>     public static String center(CharSequence seq, int size, char padChar) {
>         if (seq == null) {
>             return null;
4840c4840,4843
<         int strLen = str.length();
---
>         if (size <= 0) {
>             return seq.toString();
>         }
>         int strLen = seq.length();
4843c4846
<             return str;
---
>             return seq.toString();
4845,4847c4848,4850
<         str = leftPad(str, strLen + pads / 2, padChar);
<         str = rightPad(str, size, padChar);
<         return str;
---
>         String tmp = leftPad(seq, strLen + pads / 2, padChar);
>         tmp = rightPad(tmp, size, padChar);
>         return tmp;
4876,4878c4879,4884
<     public static String center(String str, int size, String padStr) {
<         if (str == null || size <= 0) {
<             return str;
---
>     public static String center(CharSequence seq, int size, CharSequence padStr) {
>         if (seq == null) {
>             return null;
>         }
>         if (size <= 0) {
>             return seq.toString();
4883c4889
<         int strLen = str.length();
---
>         int strLen = seq.length();
4886c4892
<             return str;
---
>             return seq.toString();
4888,4890c4894,4896
<         str = leftPad(str, strLen + pads / 2, padStr);
<         str = rightPad(str, size, padStr);
<         return str;
---
>         String tmp = leftPad(seq, strLen + pads / 2, padStr);
>         tmp = rightPad(tmp, size, padStr);
>         return tmp;
4914,4915c4920,4921
<     public static String upperCase(String str) {
<         if (str == null) {
---
>     public static String upperCase(CharSequence seq) {
>         if (seq == null) {
4918c4924
<         return str.toUpperCase();
---
>         return seq.toString().toUpperCase();
4937,4938c4943,4944
<     public static String upperCase(String str, Locale locale) {
<         if (str == null) {
---
>     public static String upperCase(CharSequence seq, Locale locale) {
>         if (seq == null) {
4941c4947
<         return str.toUpperCase(locale);
---
>         return seq.toString().toUpperCase(locale);
4963,4964c4969,4970
<     public static String lowerCase(String str) {
<         if (str == null) {
---
>     public static String lowerCase(CharSequence seq) {
>         if (seq == null) {
4967c4973
<         return str.toLowerCase();
---
>         return seq.toString().toLowerCase();
4986,4987c4992,4993
<     public static String lowerCase(String str, Locale locale) {
<         if (str == null) {
---
>     public static String lowerCase(CharSequence seq, Locale locale) {
>         if (seq == null) {
4990c4996
<         return str.toLowerCase(locale);
---
>         return seq.toString().toLowerCase(locale);
5090c5096
<     public static String swapCase(String str) {
---
>     public static String swapCase(CharSequence seq) {
5092,5093c5098,5102
<         if (str == null || (strLen = str.length()) == 0) {
<             return str;
---
>         if (seq == null) {
>             return null;
>         }
>         if ( (strLen = seq.length()) == 0) {
>             return seq.toString();
5099c5108
<             ch = str.charAt(i);
---
>             ch = seq.charAt(i);
