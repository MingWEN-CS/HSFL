254a255,261
>     public static Object min(Comparable c1, Comparable c2) {
>         if (c1 != null && c2 != null) {
>             return c1.compareTo(c2) < 1 ? c1 : c2;
>         } else {
>             return c1 != null ? c1 : c2;
>         }                              
>     }
256,257c263
<     public static class Null implements Serializable {
<         
---
>     
262,264d267
<         private static final long serialVersionUID = 7092611880189329093L;
<         
<         
267,271d269
<         Null() {
<             super();
<         }
<         
<         
276,277c274,280
<         private Object readResolve() {
<             return ObjectUtils.NULL;
---
> 
> 
>     public static Object max(Comparable c1, Comparable c2) {
>         if (c1 != null && c2 != null) {
>             return c1.compareTo(c2) >= 0 ? c1 : c2;
>         } else {
>             return c1 != null ? c1 : c2;
279a283
> 
295,305d298
<     public static Object min( Comparable c1, Comparable c2 ) {
<         if ( c1 != null && c2 != null ) {
<             return c1.compareTo( c2 ) < 1 ? c1 : c2;
<         }
<         else {
<             return c1 != null ? c1 : c2;
<         }                              
<     }
<     
<     
< 
306a300,301
>     public static class Null implements Serializable {
>         
310a306,308
>         private static final long serialVersionUID = 7092611880189329093L;
>         
>         
312a311,315
>         Null() {
>             super();
>         }
>         
>         
317,319c320,321
<     public static Object max( Comparable c1, Comparable c2 ) {
<         if ( c1 != null && c2 != null ) {
<             return c1.compareTo( c2 ) >= 0 ? c1 : c2;
---
>         private Object readResolve() {
>             return ObjectUtils.NULL;
321,323d322
<         else {
<             return c1 != null ? c1 : c2;
<         }                              
325,327c324
<     
<     
<     
---
> 
