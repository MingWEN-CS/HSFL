84a85,86
>     
> 
368a371,373
>     
> 
> 
369a375,378
> 
>     
> 
> 
370a380,383
> 
>     
> 
> 
396c409
<     static interface IntMap {
---
>     static interface EntityMap {
404c417,439
<     static abstract class MapIntMap implements IntMap {
---
>     static class PrimitiveEntityMap implements EntityMap {
>         private Map mapNameToValue = new HashMap();
>         private IntHashMap mapValueToName = new IntHashMap();
> 
>         public void add(String name, int value) {
>             mapNameToValue.put(name, new Integer(value));
>             mapValueToName.put(value, name);
>         }
> 
>         public String name(int value) {
>             return (String) mapValueToName.get(value);
>         }
> 
>         public int value(String name) {
>             Object value = mapNameToValue.get(name);
>             if (value == null)
>                 return -1;
>             return ((Integer) value).intValue();
>         }
>     }
> 
> 
>     static abstract class MapIntMap implements Entities.EntityMap {
425,426c460,461
<     static class HashIntMap extends MapIntMap {
<         public HashIntMap() {
---
>     static class HashEntityMap extends MapIntMap {
>         public HashEntityMap() {
432,433c467,468
<     static class TreeIntMap extends MapIntMap {
<         public TreeIntMap() {
---
>     static class TreeEntityMap extends MapIntMap {
>         public TreeEntityMap() {
439c474,500
<     static class ArrayIntMap implements IntMap {
---
>     static class LookupEntityMap extends PrimitiveEntityMap {
>         private String[] lookupTable;
>         private int LOOKUP_TABLE_SIZE = 256;
> 
>         public String name(int value) {
>             if (value < LOOKUP_TABLE_SIZE) {
>                 return lookupTable()[value];
>             }
>             return super.name(value);
>         }
> 
>         private String[] lookupTable() {
>             if (lookupTable == null) {
>                 createLookupTable();
>             }
>             return lookupTable;
>         }
> 
>         private void createLookupTable() {
>             lookupTable = new String[LOOKUP_TABLE_SIZE];
>             for (int i = 0; i < LOOKUP_TABLE_SIZE; ++i) {
>                 lookupTable[i] = super.name(i);
>             }
>         }
>     }
> 
>     static class ArrayEntityMap implements EntityMap {
445c506
<         public ArrayIntMap() {
---
>         public ArrayEntityMap() {
450c511
<         public ArrayIntMap(int growBy) {
---
>         public ArrayEntityMap(int growBy) {
494c555
<     static class BinaryIntMap extends ArrayIntMap {
---
>     static class BinaryEntityMap extends ArrayEntityMap {
496c557
<         public BinaryIntMap() {
---
>         public BinaryEntityMap() {
499c560
<         public BinaryIntMap(int growBy) {
---
>         public BinaryEntityMap(int growBy) {
541c602
<     IntMap map = new BinaryIntMap();
---
>     EntityMap map = new Entities.LookupEntityMap();
570a632
>         
