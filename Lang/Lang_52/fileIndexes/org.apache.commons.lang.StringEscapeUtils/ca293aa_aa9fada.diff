172,173c172
<         }
<         catch (IOException ioe) {
---
>         } catch (IOException ioe) {
195c194
<                     case '\b' :
---
>                     case '\b':
199c198
<                     case '\n' :
---
>                     case '\n':
203c202
<                     case '\t' :
---
>                     case '\t':
207c206
<                     case '\f' :
---
>                     case '\f':
211c210
<                     case '\r' :
---
>                     case '\r':
225c224
<                     case '\'' :
---
>                     case '\'':
229c228
<                     case '"' :
---
>                     case '"':
233c232
<                     case '\\' :
---
>                     case '\\':
255,256c254
<         }
<         catch (IOException ioe) {
---
>         } catch (IOException ioe) {
270c268
<             if(inUnicode) {
---
>             if (inUnicode) {
273c271
<                 if(unicode.length() == 4) {
---
>                 if (unicode.length() == 4) {
278c276
<                         out.write( (char)value );
---
>                         out.write((char) value);
283,284c281,282
<                     } catch(NumberFormatException nfe) {
<                         throw new NestableRuntimeException("Unable to parse unicode value: "+unicode, nfe);
---
>                     } catch (NumberFormatException nfe) {
>                         throw new NestableRuntimeException("Unable to parse unicode value: " + unicode, nfe);
291c289
<             if(hadSlash) {
---
>             if (hadSlash) {
294,305c292,294
<                 switch(ch) {
<                     case '\\': out.write('\\'); break;
<                     case '\'': out.write('\''); break;
<                     case '\"': out.write('"'); break;
<                     case 'r':  out.write('\r'); break;
<                     case 'f':  out.write('\f'); break;
<                     case 't':  out.write('\t'); break;
<                     case 'n':  out.write('\n'); break;
<                     case 'b':  out.write('\b'); break;
<                     case 'u':  {
<                         
<                         inUnicode=true;
---
>                 switch (ch) {
>                     case '\\':
>                         out.write('\\');
307c296,322
<                     }
---
>                     case '\'':
>                         out.write('\'');
>                         break;
>                     case '\"':
>                         out.write('"');
>                         break;
>                     case 'r':
>                         out.write('\r');
>                         break;
>                     case 'f':
>                         out.write('\f');
>                         break;
>                     case 't':
>                         out.write('\t');
>                         break;
>                     case 'n':
>                         out.write('\n');
>                         break;
>                     case 'b':
>                         out.write('\b');
>                         break;
>                     case 'u':
>                         {
>                             
>                             inUnicode = true;
>                             break;
>                         }
313,314c328
<             } else
<             if(ch == '\\') {
---
>             } else if (ch == '\\') {
317c331
<             } 
---
>             }
320c334
<         if(hadSlash) {
---
>         if (hadSlash) {
332c346
<         unescapeJava(out,str);
---
>         unescapeJava(out, str);
337,422c351,477
<     
<     
<     
<     static Object[][] entities = {
<        
<         {"quot", new Integer(34)},      
<         {"amp", new Integer(38)},       
<         {"lt", new Integer(60)},        
<         {"gt", new Integer(62)},        
<         {"nbsp", new Integer(160)},     
<         {"copy", new Integer(169)},     
<         {"reg", new Integer(174)},      
<         {"Agrave", new Integer(192)},   
<         {"Aacute", new Integer(193)},   
<         {"Acirc", new Integer(194)},    
<         {"Atilde", new Integer(195)},   
<         {"Auml", new Integer(196)},     
<         {"Aring", new Integer(197)},    
<         {"AElig", new Integer(198)},    
<         {"Ccedil", new Integer(199)},   
<         {"Egrave", new Integer(200)},   
<         {"Eacute", new Integer(201)},   
<         {"Ecirc", new Integer(202)},    
<         {"Euml", new Integer(203)},     
<         {"Igrave", new Integer(204)},   
<         {"Iacute", new Integer(205)},   
<         {"Icirc", new Integer(206)},    
<         {"Iuml", new Integer(207)},     
<         {"ETH", new Integer(208)},      
<         {"Ntilde", new Integer(209)},   
<         {"Ograve", new Integer(210)},   
<         {"Oacute", new Integer(211)},   
<         {"Ocirc", new Integer(212)},    
<         {"Otilde", new Integer(213)},   
<         {"Ouml", new Integer(214)},     
<         {"Oslash", new Integer(216)},   
<         {"Ugrave", new Integer(217)},   
<         {"Uacute", new Integer(218)},   
<         {"Ucirc", new Integer(219)},    
<         {"Uuml", new Integer(220)},     
<         {"Yacute", new Integer(221)},   
<         {"THORN", new Integer(222)},    
<         {"szlig", new Integer(223)},    
<         {"agrave", new Integer(224)},   
<         {"aacute", new Integer(225)},   
<         {"acirc", new Integer(226)},    
<         {"atilde", new Integer(227)},   
<         {"auml", new Integer(228)},     
<         {"aring", new Integer(229)},    
<         {"aelig", new Integer(230)},    
<         {"ccedil", new Integer(231)},   
<         {"egrave", new Integer(232)},   
<         {"eacute", new Integer(233)},   
<         {"ecirc", new Integer(234)},    
<         {"euml", new Integer(235)},     
<         {"igrave", new Integer(236)},   
<         {"iacute", new Integer(237)},   
<         {"icirc", new Integer(238)},    
<         {"iuml", new Integer(239)},     
<         {"igrave", new Integer(236)},   
<         {"iacute", new Integer(237)},   
<         {"icirc", new Integer(238)},    
<         {"iuml", new Integer(239)},     
<         {"eth", new Integer(240)},      
<         {"ntilde", new Integer(241)},   
<         {"ograve", new Integer(242)},   
<         {"oacute", new Integer(243)},   
<         {"ocirc", new Integer(244)},    
<         {"otilde", new Integer(245)},   
<         {"ouml", new Integer(246)},     
<         {"oslash", new Integer(248)},   
<         {"ugrave", new Integer(249)},   
<         {"uacute", new Integer(250)},   
<         {"ucirc", new Integer(251)},    
<         {"uuml", new Integer(252)},     
<         {"yacute", new Integer(253)},   
<         {"thorn", new Integer(254)},    
<         {"yuml", new Integer(255)},     
<         {"euro", new Integer(8364)},    
<     };
<     static Map e2i = new HashMap();
<     static Map i2e = new HashMap();
<     static {
<         for (int i=0; i<entities.length; ++i) {
<             e2i.put(entities[i][0], entities[i][1]);
<             i2e.put(entities[i][1], entities[i][0]);
---
> 
>     private static class Entities {
>         
>         
>         static Object[][] entities = {
>             
>             {"quot", new Integer(34)}, 
>             {"amp", new Integer(38)}, 
>             {"lt", new Integer(60)}, 
>             {"gt", new Integer(62)}, 
>             {"nbsp", new Integer(160)}, 
>             {"iexcl", new Integer(161)}, 
>             {"cent", new Integer(162)}, 
>             {"pound", new Integer(163)}, 
>             {"curren", new Integer(164)}, 
>             {"yen", new Integer(165)}, 
>             {"brvbar", new Integer(166)}, 
>             {"sect", new Integer(167)}, 
>             {"uml", new Integer(168)}, 
>             {"copy", new Integer(169)}, 
>             {"ordf", new Integer(170)}, 
>             {"laquo", new Integer(171)}, 
>             {"not", new Integer(172)}, 
>             {"shy", new Integer(173)}, 
>             {"reg", new Integer(174)}, 
>             {"macr", new Integer(175)}, 
>             {"deg", new Integer(176)}, 
>             {"plusmn", new Integer(177)}, 
>             {"sup2", new Integer(178)}, 
>             {"sup3", new Integer(179)}, 
>             {"acute", new Integer(180)}, 
>             {"micro", new Integer(181)}, 
>             {"para", new Integer(182)}, 
>             {"middot", new Integer(183)}, 
>             {"cedil", new Integer(184)}, 
>             {"sup1", new Integer(185)}, 
>             {"ordm", new Integer(186)}, 
>             {"raquo", new Integer(187)}, 
>             {"frac14", new Integer(188)}, 
>             {"frac12", new Integer(189)}, 
>             {"frac34", new Integer(190)}, 
>             {"iquest", new Integer(191)}, 
>             {"Agrave", new Integer(192)}, 
>             {"Aacute", new Integer(193)}, 
>             {"Acirc", new Integer(194)}, 
>             {"Atilde", new Integer(195)}, 
>             {"Auml", new Integer(196)}, 
>             {"Aring", new Integer(197)}, 
>             {"AElig", new Integer(198)}, 
>             {"Ccedil", new Integer(199)}, 
>             {"Egrave", new Integer(200)}, 
>             {"Eacute", new Integer(201)}, 
>             {"Ecirc", new Integer(202)}, 
>             {"Euml", new Integer(203)}, 
>             {"Igrave", new Integer(204)}, 
>             {"Iacute", new Integer(205)}, 
>             {"Icirc", new Integer(206)}, 
>             {"Iuml", new Integer(207)}, 
>             {"ETH", new Integer(208)}, 
>             {"Ntilde", new Integer(209)}, 
>             {"Ograve", new Integer(210)}, 
>             {"Oacute", new Integer(211)}, 
>             {"Ocirc", new Integer(212)}, 
>             {"Otilde", new Integer(213)}, 
>             {"Ouml", new Integer(214)}, 
>             {"times", new Integer(215)}, 
>             {"Oslash", new Integer(216)}, 
>             {"Ugrave", new Integer(217)}, 
>             {"Uacute", new Integer(218)}, 
>             {"Ucirc", new Integer(219)}, 
>             {"Uuml", new Integer(220)}, 
>             {"Yacute", new Integer(221)}, 
>             {"THORN", new Integer(222)}, 
>             {"szlig", new Integer(223)}, 
>             {"agrave", new Integer(224)}, 
>             {"aacute", new Integer(225)}, 
>             {"acirc", new Integer(226)}, 
>             {"atilde", new Integer(227)}, 
>             {"auml", new Integer(228)}, 
>             {"aring", new Integer(229)}, 
>             {"aelig", new Integer(230)}, 
>             {"ccedil", new Integer(231)}, 
>             {"egrave", new Integer(232)}, 
>             {"eacute", new Integer(233)}, 
>             {"ecirc", new Integer(234)}, 
>             {"euml", new Integer(235)}, 
>             {"igrave", new Integer(236)}, 
>             {"iacute", new Integer(237)}, 
>             {"icirc", new Integer(238)}, 
>             {"iuml", new Integer(239)}, 
>             {"eth", new Integer(240)}, 
>             {"ntilde", new Integer(241)}, 
>             {"ograve", new Integer(242)}, 
>             {"oacute", new Integer(243)}, 
>             {"ocirc", new Integer(244)}, 
>             {"otilde", new Integer(245)}, 
>             {"ouml", new Integer(246)}, 
>             {"divide", new Integer(247)}, 
>             {"oslash", new Integer(248)}, 
>             {"ugrave", new Integer(249)}, 
>             {"uacute", new Integer(250)}, 
>             {"ucirc", new Integer(251)}, 
>             {"uuml", new Integer(252)}, 
>             {"yacute", new Integer(253)}, 
>             {"thorn", new Integer(254)}, 
>             {"yuml", new Integer(255)}, 
>             {"euro", new Integer(8364)}, 
>         };
> 
>         private Map mapNameToValue;
>         private Map mapValueToName;
> 
>         public Entities() {
>             mapNameToValue = new HashMap();
>             mapValueToName = new HashMap();
>             for (int i = 0; i < entities.length; ++i) {
>                 mapNameToValue.put(entities[i][0], entities[i][1]);
>                 mapValueToName.put(entities[i][1], entities[i][0]);
>             }
>         }
> 
>         public String entityName(int value) {
>             return (String) mapValueToName.get(new Integer(value));
>         }
> 
>         public Integer entityValue(String name) {
>             return (Integer) mapNameToValue.get(name);
425a481,497
>     private static Entities entities;
> 
>     private static void initEntities() {
>         if (entities == null)
>             entities = new Entities();
>     }
> 
>     private static String entityName(char ch) {
>         initEntities();
>         return entities.entityName(ch);
>     }
> 
>     private static Integer entityValue(String entity) {
>         initEntities();
>         return entities.entityValue(entity);
>     }
> 
433,434c505
<     public static String escapeHtml(String str)
<     {
---
>     public static String escapeHtml(String str) {
437c508
<         for (i=0; i<str.length(); ++i) {
---
>         for (i = 0; i < str.length(); ++i) {
439c510
<             String entity = (String)i2e.get( new Integer((int)ch) );
---
>             String entity = entityName(ch);
441,442c512,513
<                 if (((int)ch) > 128) {
<                     int intValue = ((int)ch);
---
>                 if (((int) ch) > 128) {   
>                     int intValue = ((int) ch);
444,445c515
<                 }
<                 else {
---
>                 } else {
448,449c518
<             }
<             else {
---
>             } else {
466c535
<         for (i=0; i<str.length(); ++i) {
---
>         for (i = 0; i < str.length(); ++i) {
469c538
<                 int semi = str.indexOf(';', i+1);
---
>                 int semi = str.indexOf(';', i + 1);
474c543
<                 String entity = str.substring(i+1, semi);
---
>                 String entity = str.substring(i + 1, semi);
478,480c547,548
<                 }
<                 else {
<                     iso = (Integer)e2i.get(entity);
---
>                 } else {
>                     iso = entityValue(entity);
484,486c552,553
<                 }
<                 else {
<                     buf.append((char)(iso.intValue()));
---
>                 } else {
>                     buf.append((char) (iso.intValue()));
489,490c556
<             }
<             else {
---
>             } else {
495a562
> 
