84a85,86
>     public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
>     
86a89,90
>     public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
>     
88a93,94
>     public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
>     
90a97,98
>     public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
>     
92a101,102
>     public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];
>     
94a105,106
>     public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];
>     
96a109,114
>     public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
>     
>     public static final char[] EMPTY_CHAR_ARRAY = new char[0];
>     
>     public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
> 
106d123
< 
121c138
<     public static String toString(Object array) {
---
>     public static String toString(final Object array) {
124c141
<     
---
> 
137c154
<     public static String toString(Object array, String stringIfNull) {
---
>     public static String toString(final Object array, final String stringIfNull) {
143c160
<     
---
> 
152c169
<     public static int hashCode(Object array) {
---
>     public static int hashCode(final Object array) {
155c172
<     
---
> 
166c183
<     public static boolean isEquals(Object array1, Object array2) {
---
>     public static boolean isEquals(final Object array1, final Object array2) {
168a186
> 
171,172d188
<     
<     
196c212,213
<     public static Map toMap(Object[] array) {
---
> 
>     public static Map toMap(final Object[] array) {
198c215
<             throw new IllegalArgumentException("The array must not be null");            
---
>             return null;
200c217
<         Map map = new HashMap((int) (array.length * 1.5));
---
>         final Map map = new HashMap((int) (array.length * 1.5));
221a239
> 
225d242
<     
236c253,254
<     public static Object[] clone(Object[] array) {
---
> 
>     public static Object[] clone(final Object[] array) {
242c260
<     
---
> 
253c271
<     public static long[] clone(long[] array) {
---
>     public static long[] clone(final long[] array) {
259c277
<     
---
> 
276c294
<     
---
> 
287c305
<     public static short[] clone(short[] array) {
---
>     public static short[] clone(final short[] array) {
293c311
<     
---
> 
304c322
<     public static char[] clone(char[] array) {
---
>     public static char[] clone(final char[] array) {
310c328
<     
---
> 
321c339
<     public static byte[] clone(byte[] array) {
---
>     public static byte[] clone(final byte[] array) {
327c345
<     
---
> 
338c356
<     public static double[] clone(double[] array) {
---
>     public static double[] clone(final double[] array) {
344c362
<     
---
> 
355c373
<     public static float[] clone(float[] array) {
---
>     public static float[] clone(final float[] array) {
361c379
<     
---
> 
372c390
<     public static boolean[] clone(boolean[] array) {
---
>     public static boolean[] clone(final boolean[] array) {
380d397
< 
392c409
<     public static boolean isSameLength(Object[] array1, Object[] array2) {
---
>     public static boolean isSameLength(final Object[] array1, final Object[] array2) {
400,402d416
<     
<     
< 
403a418
>     
412c427
<     public static boolean isSameLength(long[] array1, long[] array2) {
---
>     public static boolean isSameLength(final long[] array1, final long[] array2) {
420,422d434
<     
<     
< 
423a436
>     
432c445
<     public static boolean isSameLength(int[] array1, int[] array2) {
---
>     public static boolean isSameLength(final int[] array1, final int[] array2) {
440,442d452
<     
<     
< 
443a454
>     
452c463
<     public static boolean isSameLength(short[] array1, short[] array2) {
---
>     public static boolean isSameLength(final short[] array1, final short[] array2) {
460,462d470
<     
<     
< 
463a472
>     
472c481
<     public static boolean isSameLength(char[] array1, char[] array2) {
---
>     public static boolean isSameLength(final char[] array1, final char[] array2) {
480,482d488
<     
<     
< 
483a490
>     
492c499
<     public static boolean isSameLength(byte[] array1, byte[] array2) {
---
>     public static boolean isSameLength(final byte[] array1, final byte[] array2) {
500,502d506
<     
<     
< 
503a508
>     
512c517
<     public static boolean isSameLength(double[] array1, double[] array2) {
---
>     public static boolean isSameLength(final double[] array1, final double[] array2) {
520,522d524
<     
<     
< 
523a526
>     
532c535
<     public static boolean isSameLength(float[] array1, float[] array2) {
---
>     public static boolean isSameLength(final float[] array1, final float[] array2) {
540,542d542
<     
<     
< 
543a544
>     
552c553
<     public static boolean isSameLength(boolean[] array1, boolean[] array2) {
---
>     public static boolean isSameLength(final boolean[] array1, final boolean[] array2) {
560,562d560
<     
<     
< 
563a562
>     
572c571
<     public static boolean isSameType(Object array1, Object array2) {
---
>     public static boolean isSameType(final Object array1, final Object array2) {
574c573
<             throw new IllegalArgumentException("The array must not be null");
---
>             throw new NullArgumentException("Array");
578,579c577
<     
<     
---
> 
590c588
<     public static void reverse(Object[] array) {
---
>     public static void reverse(final Object[] array) {
613c611
<     public static void reverse(long[] array) {
---
>     public static void reverse(final long[] array) {
636c634
<     public static void reverse(int[] array) {
---
>     public static void reverse(final int[] array) {
659c657
<     public static void reverse(short[] array) {
---
>     public static void reverse(final short[] array) {
682c680
<     public static void reverse(char[] array) {
---
>     public static void reverse(final char[] array) {
705c703
<     public static void reverse(byte[] array) {
---
>     public static void reverse(final byte[] array) {
728c726
<     public static void reverse(double[] array) {
---
>     public static void reverse(final double[] array) {
751c749
<     public static void reverse(float[] array) {
---
>     public static void reverse(final float[] array) {
774c772
<     public static void reverse(boolean[] array) {
---
>     public static void reverse(final boolean[] array) {
789c787
<     
---
> 
801c799
<     public static int indexOf(Object[] array, Object objectToFind) {
---
>     public static int indexOf(final Object[] array, final Object objectToFind) {
804c802
<     
---
> 
819c817
<     public static int indexOf(Object[] array, Object objectToFind, int startIndex) {
---
>     public static int indexOf(final Object[] array, final Object objectToFind, int startIndex) {
841c839
<     
---
> 
851c849
<     public static int lastIndexOf(Object[] array, Object objectToFind) {
---
>     public static int lastIndexOf(final Object[] array, final Object objectToFind) {
857c855
<     
---
> 
872c870
<     public static int lastIndexOf(Object[] array, Object objectToFind, int startIndex) {
---
>     public static int lastIndexOf(final Object[] array, final Object objectToFind, int startIndex) {
896c894
<     
---
> 
906c904
<     public static boolean contains(Object[] array, Object objectToFind) {
---
>     public static boolean contains(final Object[] array, final Object objectToFind) {
909c907
<     
---
> 
