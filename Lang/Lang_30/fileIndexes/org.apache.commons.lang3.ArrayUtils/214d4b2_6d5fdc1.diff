80a81
> 
1390a1392,1408
>     public static int indexOf(final double[] array, final double valueToFind, final double tolerance) {
>         return indexOf(array, valueToFind, 0, tolerance);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
1393c1411
<         if (array == null) {
---
>         if (array == null || array.length == 0) {
1416a1435,1468
> 
> 
> 
> 
> 
> 
> 
>     public static int indexOf(final double[] array, final double valueToFind, int startIndex, double tolerance) {
>         if (array == null || array.length == 0) {
>             return -1;
>         }
>         if (startIndex < 0) {
>             startIndex = 0;
>         }
>         double min = valueToFind - tolerance;
>         double max = valueToFind + tolerance;
>         for (int i = startIndex; i < array.length; i++) {
>             if (array[i] >= min && array[i] <= max) {
>                 return i;
>             }
>         }
>         return -1;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
1433a1486,1502
>     public static int lastIndexOf(final double[] array, final double valueToFind, final double tolerance) {
>         return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
1436c1505
<         if (array == null) {
---
>         if (array == null || array.length == 0) {
1460a1530,1564
> 
> 
> 
> 
> 
> 
> 
>     public static int lastIndexOf(final double[] array, final double valueToFind, int startIndex, double tolerance) {
>         if (array == null || array.length == 0) {
>             return -1;
>         }
>         if (startIndex < 0) {
>             return -1;
>         } else if (startIndex >= array.length) {
>             startIndex = array.length - 1;
>         }
>         double min = valueToFind - tolerance;
>         double max = valueToFind + tolerance;
>         for (int i = startIndex; i >= 0; i--) {
>             if (array[i] >= min && array[i] <= max) {
>                 return i;
>             }
>         }
>         return -1;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
1465a1570,1585
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static boolean contains(final double[] array, final double valueToFind, final double tolerance) {
>         return (indexOf(array, valueToFind, 0, tolerance) != -1);
>     }
> 
>     
1496c1616
<         if (array == null) {
---
>         if (array == null || array.length == 0) {
1539c1659
<         if (array == null) {
---
>         if (array == null || array.length == 0) {
1599c1719
<         if (array == null) {
---
>         if (array == null || array.length == 0) {
1642c1762
<         if (array == null) {
---
>         if (array == null || array.length == 0) {
