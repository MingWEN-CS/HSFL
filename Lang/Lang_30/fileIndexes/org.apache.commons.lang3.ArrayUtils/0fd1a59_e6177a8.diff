2890,2895d2889
<         } else {
<             Object[] joinedArray = (Object[]) Array.newInstance(array1.getClass().getComponentType(), array1.length
<                 + array2.length);
<             System.arraycopy(array1, 0, joinedArray, 0, array1.length);
<             System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
<             return joinedArray;
2896a2891,3127
>         Object[] joinedArray = (Object[]) Array.newInstance(array1.getClass().getComponentType(),
>                                                             array1.length + array2.length);
>         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
>         System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
>         return joinedArray;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static boolean[] addAll(boolean[] array1, boolean[] array2) {
>         if (array1 == null) {
>             return clone(array2);
>         } else if (array2 == null) {
>             return clone(array1);
>         }
>         boolean[] joinedArray = new boolean[array1.length + array2.length];
>         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
>         System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
>         return joinedArray;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static char[] addAll(char[] array1, char[] array2) {
>         if (array1 == null) {
>             return clone(array2);
>         } else if (array2 == null) {
>             return clone(array1);
>         }
>         char[] joinedArray = new char[array1.length + array2.length];
>         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
>         System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
>         return joinedArray;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static byte[] addAll(byte[] array1, byte[] array2) {
>         if (array1 == null) {
>             return clone(array2);
>         } else if (array2 == null) {
>             return clone(array1);
>         }
>         byte[] joinedArray = new byte[array1.length + array2.length];
>         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
>         System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
>         return joinedArray;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static short[] addAll(short[] array1, short[] array2) {
>         if (array1 == null) {
>             return clone(array2);
>         } else if (array2 == null) {
>             return clone(array1);
>         }
>         short[] joinedArray = new short[array1.length + array2.length];
>         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
>         System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
>         return joinedArray;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static int[] addAll(int[] array1, int[] array2) {
>         if (array1 == null) {
>             return clone(array2);
>         } else if (array2 == null) {
>             return clone(array1);
>         }
>         int[] joinedArray = new int[array1.length + array2.length];
>         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
>         System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
>         return joinedArray;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static long[] addAll(long[] array1, long[] array2) {
>         if (array1 == null) {
>             return clone(array2);
>         } else if (array2 == null) {
>             return clone(array1);
>         }
>         long[] joinedArray = new long[array1.length + array2.length];
>         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
>         System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
>         return joinedArray;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static float[] addAll(float[] array1, float[] array2) {
>         if (array1 == null) {
>             return clone(array2);
>         } else if (array2 == null) {
>             return clone(array1);
>         }
>         float[] joinedArray = new float[array1.length + array2.length];
>         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
>         System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
>         return joinedArray;
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static double[] addAll(double[] array1, double[] array2) {
>         if (array1 == null) {
>             return clone(array2);
>         } else if (array2 == null) {
>             return clone(array1);
>         }
>         double[] joinedArray = new double[array1.length + array2.length];
>         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
>         System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
>         return joinedArray;
