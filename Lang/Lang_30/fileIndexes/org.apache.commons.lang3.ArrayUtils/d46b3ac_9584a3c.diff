58a59,60
> import org.apache.commons.lang.builder.EqualsBuilder;
> import org.apache.commons.lang.builder.HashCodeBuilder;
105a108
>     
146a150,177
>     public static int hashCode(Object array) {
>         return new HashCodeBuilder().append(array).toHashCode();
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static boolean isEquals(Object array1, Object array2) {
>         return new EqualsBuilder().append(array1, array2).isEquals();
>     }
>     
>     
>     
>     
> 
> 
> 
> 
> 
> 
> 
306a338
> 
321a354,355
> 
> 
336a371,372
> 
> 
351a388,389
> 
> 
366a405,423
> 
> 
>     public static char[] clone(char[] array) {
>         if (array == null) {
>             return null;
>         }
>         return (char[]) array.clone();
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
381a439,440
> 
> 
396a456,457
> 
> 
411a473,474
> 
> 
511a575,594
>     public static boolean isSameLength(char[] array1, char[] array2) {
>         if ((array1 == null && array2 != null && array2.length > 0) ||
>             (array2 == null && array1 != null && array1.length > 0) ||
>             (array1 != null && array2 != null && array1.length != array2.length)) {
>                 return false;
>         }
>         return true;
>     }
>     
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
581a665,666
> 
> 
