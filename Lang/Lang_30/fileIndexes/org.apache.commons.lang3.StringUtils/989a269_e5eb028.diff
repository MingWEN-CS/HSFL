1965a1966
> 
1967,1969d1967
<         if (str == null) {
<             return null;
<         }
1973a1972,1974
>         if (str == null) {
>             return null;
>         }
2084a2086
> 
2086,2088d2087
<         if (str == null) {
<             return null;
<         }
2092a2092,2094
>         if (str == null) {
>             return null;
>         }
2141a2144
> 
2143,2147c2146,2147
<         if (str == null) {
<             return null;
<         }
<         if (size < 0) {
<             size = 0;
---
>         if (str == null || size <= 0) {
>             return str;
2149,2151c2149,2151
<         int sz = str.length();
<         int p = size - sz;
<         if (p < 1) {
---
>         int strLen = str.length();
>         int pads = size - strLen;
>         if (pads <= 0) {
2154c2154
<         str = leftPad(str, sz + p / 2, ' ');
---
>         str = leftPad(str, strLen + pads / 2, ' ');
2185a2186,2187
> 
> 
2187,2189d2188
<         if (str == null) {
<             return null;
<         }
2193,2194c2192,2193
<         if (size < 0) {
<             size = 0;
---
>         if (str == null || size <= 0) {
>             return str;
2196,2198c2195,2197
<         int sz = str.length();
<         int p = size - sz;
<         if (p < 1) {
---
>         int strLen = str.length();
>         int pads = size - strLen;
>         if (pads <= 0) {
2201c2200
<         str = leftPad(str, sz + p / 2, padStr);
---
>         str = leftPad(str, strLen + pads / 2, padStr);
2286,2290c2285,2286
<         if (str == null) {
<             return null;
<         }
<         int sz = str.length();
<         if (sz == 0) {
---
>         int strLen;
>         if (str == null || (strLen = str.length()) == 0) {
2293d2288
<  
2296c2291
<             while ((start != sz) && Character.isWhitespace(str.charAt(start))) {
---
>             while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {
2300c2295
<             while ((start != sz) && (stripChars.indexOf(str.charAt(start)) != -1)) {
---
>             while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {
2330,2334c2325,2326
<         if (str == null) {
<             return null;
<         }
<         int end = str.length();
<         if (end == 0) {
---
>         int end;
>         if (str == null || (end = str.length()) == 0) {
2399c2391,2392
<         if ((strs == null) || (strs.length == 0)) {
---
>         int strsLen;
>         if (strs == null || (strsLen = strs.length) == 0) {
2402,2404c2395,2396
<         int sz = strs.length;
<         String[] newArr = new String[sz];
<         for (int i = 0; i < sz; i++) {
---
>         String[] newArr = new String[strsLen];
>         for (int i = 0; i < strsLen; i++) {
2469,2473c2461,2463
<         if (str == null) {
<             return null;
<         }
<         if (str.length() == 0) {
<             return "";
---
>         int strLen;
>         if (str == null || (strLen = str.length()) == 0) {
>             return str;
2475c2465
<         return new StringBuffer(str.length())
---
>         return new StringBuffer(strLen)
2497,2501c2487,2489
<         if (str == null) {
<             return null;
<         }
<         if (str.length() == 0) {
<             return "";
---
>         int strLen;
>         if (str == null || (strLen = str.length()) == 0) {
>             return str;
2503c2491
<         return new StringBuffer(str.length())
---
>         return new StringBuffer(strLen)
2531,2532c2519,2521
<         if (str == null) {
<             return null;
---
>         int strLen;
>         if (str == null || (strLen = str.length()) == 0) {
>             return str;
2534,2535c2523
<         int sz = str.length();
<         StringBuffer buffer = new StringBuffer(sz);
---
>         StringBuffer buffer = new StringBuffer(strLen);
2541c2529
<         for (int i = 0; i < sz; i++) {
---
>         for (int i = 0; i < strLen; i++) {
2576a2565
> 
2578,2579c2567,2569
<         if (str == null) {
<             return null;
---
>         int strLen;
>         if (str == null || (strLen = str.length()) == 0) {
>             return str;
2581,2582c2571
<         int sz = str.length();
<         StringBuffer buffer = new StringBuffer(sz);
---
>         StringBuffer buffer = new StringBuffer(strLen);
2584,2585c2573,2575
<         for (int i = 0; i < sz; i++) {
<             char ch = str.charAt(i);
---
>         char[] strChars = str.toCharArray();
>         for (int i = 0; i < strLen; i++) {
>             char ch = strChars[i];
2613a2604
> 
2615,2616c2606,2608
<         if (str == null) {
<             return null;
---
>         int strLen;
>         if (str == null || (strLen = str.length()) == 0) {
>             return str;
2618,2622c2610,2614
<         int sz = str.length();
<         StringBuffer buffer = new StringBuffer(sz);
<         boolean space = true;
<         for (int i = 0; i < sz; i++) {
<             char ch = str.charAt(i);
---
>         StringBuffer buffer = new StringBuffer(strLen);
>         boolean whitespace = true;
>         char[] strChars = str.toCharArray();
>         for (int i = 0; i < strLen; i++) {
>             char ch = strChars[i];
2625,2626c2617,2618
<                 space = true;
<             } else if (space) {
---
>                 whitespace = true;
>             } else if (whitespace) {
2628c2620
<                 space = false;
---
>                 whitespace = false;
