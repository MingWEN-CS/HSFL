822a823
> 
824c825,829
<     
---
> 
> 
> 
> 
> 
832c837,862
<         return chomp(str, "\n");
---
>         if (str.length() == 0) {
>             return str;
>         }
> 
>         if (str.length() == 1) {
>             if ("\r".equals(str) || "\n".equals(str)) {
>                 return "";
>             }
>             else {
>                 return str;
>             }
>         }
> 
>         int lastIdx = str.length() - 1;
>         char last = str.charAt(lastIdx);
> 
>         if (last == '\n') {
>             if (str.charAt(lastIdx - 1) == '\r') {
>                 lastIdx--;
>             }
>         } else if (last == '\r') {
> 
>         } else {
>             lastIdx++;
>         }
>         return str.substring(0, lastIdx);
834c864
<     
---
> 
844,848c874,880
<     public static String chomp(String str, String sep) {
<         int idx = str.lastIndexOf(sep);
<         if (idx != -1) {
<             return str.substring(0, idx);
<         } else {
---
> 
> 
> 
> 
> 
>     public static String chomp(String str, String separator) {
>         if (str.length() == 0) {
850a883,886
>         if (str.endsWith(separator)) {
>             return str.substring(0, str.length() - separator.length());
>         }
>         return str;
851a888
> 
853c890
<     
---
> 
872a910
> 
893a932,933
> 
> 
913a954
> 
931a973
> 
979a1022
> 
992a1036,1131
> 
>     
>     
> 
>     
> 
> 
> 
> 
> 
> 
> 
>     public static String slice(String str) {
>         return slice(str, "\n");
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static String slice(String str, String sep) {
>         int idx = str.lastIndexOf(sep);
>         if (idx != -1) {
>             return str.substring(0, idx);
>         } else {
>             return str;
>         }
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static String sliceRemainder(String str, String sep) {
>         int idx = str.lastIndexOf(sep);
>         if (idx == str.length() - sep.length()) {
>             return "";
>         } else if (idx != -1) {
>             return str.substring(idx + sep.length());
>         } else {
>             return "";
>         }
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static String sliceFirstRemainder(String str, String sep) {
>         int idx = str.indexOf(sep);
>         if (idx != -1) {
>             return str.substring(idx + sep.length());
>         } else {
>             return str;
>         }
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static String sliceFirst(String str, String sep) {
>         int idx = str.indexOf(sep);
>         if (idx != -1) {
>             return str.substring(0, idx);
>         } else {
>             return "";
>         }
>     }
