133a134
> 
135c136
<         return CharSetUtils.delete(str, " \t\r\n\b" );
---
>         return CharSetUtils.delete(str, " \t\r\n\b");
404,405c405,406
<     public static String[] split(String text) {
<         return split(text, null, -1);
---
>     public static String[] split(String str) {
>         return split(str, null, -1);
432c433
<     public static String[] split(String text, String separator, int max) {
---
>     public static String[] split(String str, String separator, int max) {
437c438
<             tok = new StringTokenizer(text);
---
>             tok = new StringTokenizer(str);
439c440
<             tok = new StringTokenizer(text, separator);
---
>             tok = new StringTokenizer(str, separator);
454c455
<                 StringBuffer buf = new StringBuffer((int) 1.2 * text.length() * (listSize - i) / listSize);
---
>                 StringBuffer buf = new StringBuffer((int) 1.2 * str.length() * (listSize - i) / listSize);
588c589
<         while ( (end = text.indexOf(repl, start)) != -1 ) {
---
>         while ((end = text.indexOf(repl, start)) != -1) {
611,614c612,615
< 			.append(text.substring(0, start))
< 			.append(overlay)
< 			.append(text.substring(end))
< 			.toString();
---
>             .append(text.substring(0, start))
>             .append(overlay)
>             .append(text.substring(end))
>             .toString();
676c677
<             return str.substring(0,idx);
---
>             return str.substring(0, idx);
800d800
< 
802c802
<         int lastIdx = str.length()-1;
---
>         int lastIdx = str.length() - 1;
804,806c804,806
<         if(last == '\n') {
<             if(str.charAt(lastIdx-1) == '\r') {
<                 lastIdx --;
---
>         if (last == '\n') {
>             if (str.charAt(lastIdx - 1) == '\r') {
>                 lastIdx--;
811c811
<         return str.substring(0,lastIdx);
---
>         return str.substring(0, lastIdx);
827,828d826
<     
<     
829a828,829
>         
>         
831,832c831,832
<         StringBuffer buffer = new StringBuffer(2*sz);
<         for(int i=0; i<sz; i++) {
---
>         StringBuffer buffer = new StringBuffer(2 * sz);
>         for (int i = 0; i < sz; i++) {
836,847c836,844
<             if(ch > 0xfff) {
<                 buffer.append("\\u"+Integer.toHexString(ch));
<             } else 
<             if(ch > 0xff) {
<                 buffer.append("\\u0"+Integer.toHexString(ch));
<             } else 
<             if(ch > 0x7f) {
<                 buffer.append("\\u00"+Integer.toHexString(ch));
<             } else 
<             if(ch < 32) {
<                 switch(ch) {
<                     case '\b' : 
---
>             if (ch > 0xfff) {
>                 buffer.append("\\u" + Integer.toHexString(ch));
>             } else if (ch > 0xff) {
>                 buffer.append("\\u0" + Integer.toHexString(ch));
>             } else if (ch > 0x7f) {
>                 buffer.append("\\u00" + Integer.toHexString(ch));
>             } else if (ch < 32) {
>                 switch (ch) {
>                     case '\b' :
851c848
<                     case '\n' : 
---
>                     case '\n' :
855c852
<                     case '\t' : 
---
>                     case '\t' :
859c856
<                     case '\f' : 
---
>                     case '\f' :
863c860
<                     case '\r' : 
---
>                     case '\r' :
868,869c865,866
<                         if( ch > 0xf ) {
<                             buffer.append("\\u00"+Integer.toHexString(ch));
---
>                         if (ch > 0xf) {
>                             buffer.append("\\u00" + Integer.toHexString(ch));
871c868
<                             buffer.append("\\u000"+Integer.toHexString(ch));
---
>                             buffer.append("\\u000" + Integer.toHexString(ch));
876,877c873,874
<                 switch(ch) {
<                     case '\'' : 
---
>                 switch (ch) {
>                     case '\'' :
881c878
<                     case '"' : 
---
>                     case '"' :
885c882
<                     case '\\' : 
---
>                     case '\\' :
933a931
> 
947a946
> 
957a957
> 
1167c1167
<         for(int i=0; i<sz; i++) {
---
>         for (int i = 0; i < sz; i++) {
1169c1169
<             if(Character.isUpperCase(ch)) {
---
>             if (Character.isUpperCase(ch)) {
1171,1172c1171
<             } else
<             if(Character.isTitleCase(ch)) {
---
>             } else if (Character.isTitleCase(ch)) {
1174,1176c1173,1174
<             } else
<             if(Character.isLowerCase(ch)) {
<                 if(whitespace) {
---
>             } else if (Character.isLowerCase(ch)) {
>                 if (whitespace) {
1205c1203
<         for(int i=0; i<sz; i++) {
---
>         for (int i = 0; i < sz; i++) {
1207c1205
<             if(Character.isWhitespace(ch)) {
---
>             if (Character.isWhitespace(ch)) {
1210,1211c1208
<             } else
<             if(space) {
---
>             } else if (space) {
1264a1262
> 
1466a1465
> 
1499c1498
<             throwable.printStackTrace( new PrintWriter(buf, true) );
---
>             throwable.printStackTrace(new PrintWriter(buf, true));
1515a1515,1518
> 
> 
> 
> 
1527,1528c1530,1531
<         n = s.length ();
<         m = t.length ();
---
>         n = s.length();
>         m = t.length();
1535c1538
<         d = new int[n+1][m+1];
---
>         d = new int[n + 1][m + 1];
1548c1551
<             s_i = s.charAt (i - 1);
---
>             s_i = s.charAt(i - 1);
1552c1555
<                 t_j = t.charAt (j - 1);
---
>                 t_j = t.charAt(j - 1);
1562c1565
<                 d[i][j] = NumberUtils.minimum(d[i-1][j]+1, d[i][j-1]+1, d[i-1][j-1] + cost);
---
>                 d[i][j] = NumberUtils.minimum(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);
1570a1574,1575
> 
> 
