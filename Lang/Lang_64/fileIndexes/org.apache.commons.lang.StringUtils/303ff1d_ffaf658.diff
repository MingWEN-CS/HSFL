161a162
> 
184a186
> 
222d223
< 
223a225,227
>         if (str == null) {
>             return null;
>         }
236d239
< 
237a241,243
>         if (str == null) {
>             return null;
>         }
240,241c246,247
<         for (int i=0; i<sz; i++) {
<             if(!Character.isWhitespace(str.charAt(i))) {
---
>         for (int i = 0; i < sz; i++) {
>             if (!Character.isWhitespace(str.charAt(i))) {
248a255,286
>     
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static boolean isEmpty(String str) {
>         return (str == null || str.length() == 0);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
266c304,313
<     public static boolean isEmpty(String str) {
---
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static boolean isEmptyTrimmed(String str) {
270a318,337
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static boolean isNotEmptyTrimmed(String str) {
>         return (str != null && str.trim().length() > 0);
>     }
> 
>     
284a352,359
> 
> 
> 
> 
> 
> 
> 
> 
301a377,384
> 
> 
> 
> 
> 
> 
> 
> 
379a463,471
> 
> 
> 
> 
> 
> 
> 
> 
> 
412a505,514
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
458a561,568
> 
> 
> 
> 
> 
> 
> 
> 
481a592,599
> 
> 
> 
> 
> 
> 
> 
> 
506a625,634
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
536a665,669
> 
> 
> 
> 
> 
544,545c677,692
<     public static String[] split(String text, String separator) {
<         return split(text, separator, -1);
---
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static String[] split(String str, String separators) {
>         return split(str, separators, -1);
565a713,719
> 
> 
> 
> 
> 
> 
> 
566a721,723
>         if (str == null) {
>             return ArrayUtils.EMPTY_STRING_ARRAY;
>         }
