123a124
> 
281,303d281
<     public static String clean(String str) {
<         return str == null ? EMPTY : str.trim();
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
2037,2091d2014
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String getNestedString(String str, String tag) {
<         return substringBetween(str, tag, tag);
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String getNestedString(String str, String open, String close) {
<         return substringBetween(str, open, close);
<     }
2817,2838d2739
<     public static String concatenate(Object[] array) {
<         return join(array, null);
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
3161,3193d3061
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String deleteSpaces(String str) {
<         if (str == null) {
<             return null;
<         }
<         return CharSetUtils.delete(str, " \t\r\n\b");
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
3916,3948d3783
<     public static String overlayString(String text, String overlay, int start, int end) {
<         return new StringBuffer(start + overlay.length() + text.length() - end + 1)
<             .append(text.substring(0, start))
<             .append(overlay)
<             .append(text.substring(end))
<             .toString();
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
4075,4171d3909
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String chompLast(String str) {
<         return chompLast(str, "\n");
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String chompLast(String str, String sep) {
<         if (str.length() == 0) {
<             return str;
<         }
<         String sub = str.substring(str.length() - sep.length());
<         if (sep.equals(sub)) {
<             return str.substring(0, str.length() - sep.length());
<         }
<         return str;
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String getChomp(String str, String sep) {
<         int idx = str.lastIndexOf(sep);
<         if (idx == str.length() - sep.length()) {
<             return sep;
<         } else if (idx != -1) {
<             return str.substring(idx);
<         } else {
<             return EMPTY;
<         }
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String prechomp(String str, String sep) {
<         int idx = str.indexOf(sep);
<         if (idx == -1) {
<             return str;
<         }             
<         return str.substring(idx + sep.length());
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String getPrechomp(String str, String sep) {
<         int idx = str.indexOf(sep);
<         if (idx == -1) {
<             return EMPTY;
<         } 
<         return str.substring(0, idx + sep.length());
<     }
< 
<     
4216,4241d3953
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String chopNewline(String str) {
<         int lastIdx = str.length() - 1;
<         if (lastIdx <= 0) {
<             return EMPTY;
<         }
<         char last = str.charAt(lastIdx);
<         if (last == CharUtils.LF) {
<             if (str.charAt(lastIdx - 1) == CharUtils.CR) {
<                 lastIdx--;
<             }
<         } else {
<             lastIdx++;
<         }
<         return str.substring(0, lastIdx);
<     }
< 
<     
4243,4261d3954
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String escape(String str) {
<         return StringEscapeUtils.escapeJava(str);
<     }
4847,4859d4539
<     public static String capitalise(String str) {
<         return capitalize(str);
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
4891,4903d4570
<     public static String uncapitalise(String str) {
<         return uncapitalize(str);
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
4945,4960d4611
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String capitaliseAllWords(String str) {
<         return WordUtils.capitalize(str);
<     }
< 
<     
5383,5418d5033
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static String reverseDelimitedString(String str, String separatorChars) {
<         if (str == null) {
<             return null;
<         }
<         
<         
<         String[] strs = split(str, separatorChars);
<         ArrayUtils.reverse(strs);
<         if (separatorChars == null) {
<             return join(strs, ' ');
<         }
<         return join(strs, separatorChars);
