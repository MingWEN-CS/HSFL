2553,2554c2553,2592
<         int arraySize = array.length;
<         int bufSize = (arraySize == 0 ? 0 : ((array[0] == null ? 16 : array[0].toString().length()) + 1) * arraySize);
---
> 
>         return join(array, separator, 0, array.length);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static String join(Object[] array, char separator, int startIndex, int endIndex) {
>         if (array == null) {
>             return null;
>         }
>         int bufSize = (endIndex - startIndex);
>         if (bufSize <= 0) {
>             return EMPTY;
>         }
> 
>         bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
2557,2558c2595,2596
<         for (int i = 0; i < arraySize; i++) {
<             if (i > 0) {
---
>         for (int i = startIndex; i < endIndex; i++) {
>             if (i > startIndex) {
2567a2606
> 
2594a2634,2667
>         return join(array, separator, 0, array.length);
>     }
> 
>     
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>     public static String join(Object[] array, String separator, int startIndex, int endIndex) {
>         if (array == null) {
>             return null;
>         }
2598d2670
<         int arraySize = array.length;
2602,2608c2674,2680
<         
<         int bufSize =
<             ((arraySize == 0)
<                 ? 0
<                 : arraySize
<                     * ((array[0] == null ? 16 : array[0].toString().length())
<                         + separator.length()));
---
>         int bufSize = (endIndex - startIndex);
>         if (bufSize <= 0) {
>             return EMPTY;
>         }
> 
>         bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length())
>                         + separator.length());
2612,2613c2684,2685
<         for (int i = 0; i < arraySize; i++) {
<             if (i > 0) {
---
>         for (int i = startIndex; i < endIndex; i++) {
>             if (i > startIndex) {
