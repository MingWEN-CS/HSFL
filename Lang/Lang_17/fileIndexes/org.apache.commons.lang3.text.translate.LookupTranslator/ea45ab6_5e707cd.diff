20a21,22
> import java.util.HashMap;
> 
28c30,32
<     protected CharSequence[][] lookup;
---
>     private HashMap<CharSequence, CharSequence> lookupMap;
>     private int shortest = Integer.MAX_VALUE;
>     private int longest = 0;
36c40,50
<         this.lookup = lookup;
---
>         lookupMap = new HashMap<CharSequence, CharSequence>();
>         for(CharSequence[] seq : lookup) {
>             this.lookupMap.put(seq[0], seq[1]);
>             int sz = seq[0].length();
>             if(sz < shortest) {
>                 shortest = sz;
>             }
>             if(sz > longest) {
>                 longest = sz;
>             }
>         }
43,47c57,67
<         CharSequence subsequence = input.subSequence(index, input.length());
<         for(CharSequence[] seq : lookup) {
<             if( subsequence.toString().startsWith(seq[0].toString()) ) {
<                 out.write(seq[1].toString());
<                 return seq[0].length();
---
>         int max = longest;
>         if(index + longest > input.length()) {
>             max = input.length() - index;
>         }
>         
>         for(int i=max; i >= shortest; i--) {
>             CharSequence subSeq = input.subSequence(index, index + i);
>             CharSequence result = lookupMap.get(subSeq);
>             if(result != null) {
>                 out.write(result.toString());
>                 return i;
