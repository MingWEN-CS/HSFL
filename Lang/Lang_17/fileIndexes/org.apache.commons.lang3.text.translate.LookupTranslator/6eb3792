















package org.apache.commons.lang.text.translate;

import java.io.IOException;
import java.io.Writer;
import java.util.HashMap;






public class LookupTranslator extends CharSequenceTranslator {

    private HashMap<CharSequence, CharSequence> lookupMap;
    private int shortest = Integer.MAX_VALUE;
    private int longest = 0;

    




    public LookupTranslator(CharSequence[][] lookup) {
        lookupMap = new HashMap<CharSequence, CharSequence>();
        for(CharSequence[] seq : lookup) {
            this.lookupMap.put(seq[0], seq[1]);
            int sz = seq[0].length();
            if(sz < shortest) {
                shortest = sz;
            }
            if(sz > longest) {
                longest = sz;
            }
        }
    }

    


    @Override
    public int translate(CharSequence input, int index, Writer out) throws IOException {
        int max = longest;
        if(index + longest > input.length()) {
            max = input.length() - index;
        }
        
        for(int i=max; i >= shortest; i--) {
            CharSequence subSeq = input.subSequence(index, index + i);
            CharSequence result = lookupMap.get(subSeq);
            if(result != null) {
                out.write(result.toString());
                return i;
            }
        }
        return 0;
    }
}
