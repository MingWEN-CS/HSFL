2365c2365
<         } 
---
>         }
2625,2626c2625,2626
<     private static String[] splitByWholeSeparatorWorker(String str, String separator, int max, 
<                                                         boolean preserveAllTokens) 
---
>     private static String[] splitByWholeSeparatorWorker(String str, String separator, int max,
>                                                         boolean preserveAllTokens)
3893,3894c3893,3894
<     private static String replaceEach(String text, String[] searchList, String[] replacementList, 
<                                       boolean repeat, int timeToLive) 
---
>     private static String replaceEach(String text, String[] searchList, String[] replacementList,
>                                       boolean repeat, int timeToLive)
3900,3901c3900,3901
<         if (text == null || text.length() == 0 || searchList == null || 
<             searchList.length == 0 || replacementList == null || replacementList.length == 0) 
---
>         if (text == null || text.length() == 0 || searchList == null ||
>             searchList.length == 0 || replacementList == null || replacementList.length == 0)
3933,3934c3933,3934
<             if (noMoreMatchesForReplIndex[i] || searchList[i] == null || 
<                 searchList[i].length() == 0 || replacementList[i] == null) 
---
>             if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
>                 searchList[i].length() == 0 || replacementList[i] == null)
3992,3993c3992,3993
<                 if (noMoreMatchesForReplIndex[i] || searchList[i] == null || 
<                     searchList[i].length() == 0 || replacementList[i] == null) 
---
>                 if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
>                     searchList[i].length() == 0 || replacementList[i] == null)
4669c4669
< 	
---
>     
4680,4683c4680,4683
< 	public static int length(CharSequence cs) {
< 		return CharSequenceUtils.length(cs);
< 	}
<     
---
>     public static int length(CharSequence cs) {
>         return CharSequenceUtils.length(cs);
>     }
> 
5465c5465
< 		return new StringBuilder(str).reverse().toString();
---
>         return new StringBuilder(str).reverse().toString();
5588c5588
< 		if (offset <= 4) {
---
>         if (offset <= 4) {
5599c5599
<     
---
> 
5633c5633
<       
---
> 
5641c5641
<         
---
> 
5646c5646
<         
---
> 
5821c5821
<     
---
> 
5873,5874c5873,5874
<     }  
<     
---
>     }
> 
5944c5944
<         	CharSequence tmp = s;
---
>             CharSequence tmp = s;
6082c6082
<     
---
> 
