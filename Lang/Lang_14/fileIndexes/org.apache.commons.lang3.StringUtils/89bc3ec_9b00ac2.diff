799c799
<             return regionMatchesSequence(str1, true, 0, str2, 0, Math.max(str1.length(), str2.length()));
---
>             return CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, Math.max(str1.length(), str2.length()));
828c828
<         return StringUtils.indexOfSequence(seq, searchChar, 0);
---
>         return CharSequenceUtils.indexOf(seq, searchChar, 0);
860c860
<         return StringUtils.indexOfSequence(seq, searchChar, startPos);
---
>         return CharSequenceUtils.indexOf(seq, searchChar, startPos);
890c890
<         return StringUtils.indexOfSequence(seq, searchSeq, 0);
---
>         return CharSequenceUtils.indexOf(seq, searchSeq, 0);
929c929
<         return StringUtils.indexOfSequence(seq, searchSeq, startPos);
---
>         return CharSequenceUtils.indexOf(seq, searchSeq, startPos);
994c994
<                 index = lastIndexOfSequence(str, searchStr, index - 1);
---
>                 index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);
996c996
<                 index = indexOfSequence(str, searchStr, index + 1);
---
>                 index = CharSequenceUtils.indexOf(str, searchStr, index + 1);
1080c1080
<             if (regionMatchesSequence(str, true, i, searchStr, 0, searchStr.length())) {
---
>             if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {
1112c1112
<         return StringUtils.lastIndexOfSequence(seq, searchChar, seq.length());
---
>         return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());
1146c1146
<         return StringUtils.lastIndexOfSequence(seq, searchChar, startPos);
---
>         return CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);
1175c1175
<         return StringUtils.lastIndexOfSequence(seq, searchSeq, seq.length());
---
>         return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());
1247c1247
<         return StringUtils.lastIndexOfSequence(seq, searchSeq, startPos);
---
>         return CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos);
1322c1322
<             if (regionMatchesSequence(str, true, i, searchStr, 0, searchStr.length())) {
---
>             if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {
1354c1354
<         return indexOfSequence(seq, searchChar, 0) >= 0;
---
>         return CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0;
1382c1382
<         return indexOfSequence(seq, searchSeq, 0) >= 0;
---
>         return CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0;
1415c1415
<             if (regionMatchesSequence(str, true, i, searchStr, 0, len)) {
---
>             if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {
1613c1613
<         return containsAny(cs, toCharArraySequence(searchChars));
---
>         return containsAny(cs, CharSequenceUtils.toCharArray(searchChars));
1698c1698
<             boolean chFound = indexOfSequence(searchChars, ch, 0) >= 0;
---
>             boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0;
1701c1701
<                 if (chFound && indexOfSequence(searchChars, ch2, 0) < 0) {
---
>                 if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {
1909c1909
<             tmp = indexOfSequence(str, search, 0);
---
>             tmp = CharSequenceUtils.indexOf(str, search, 0);
1959c1959
<             tmp = lastIndexOfSequence(str, search, str.length());
---
>             tmp = CharSequenceUtils.lastIndexOf(str, search, str.length());
5136c5136
<         while ((idx = indexOfSequence(str, sub, idx)) != INDEX_NOT_FOUND) {
---
>         while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND) {
6197c6197
<         return regionMatchesSequence(str, ignoreCase, 0, prefix, 0, prefix.length());
---
>         return CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());
6305c6305
<         return regionMatchesSequence(str, ignoreCase, strOffset, suffix, 0, suffix.length());
---
>         return CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());
6385,6540d6384
<     }
< 
<     
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     public static CharSequence subSequence(CharSequence cs, int start) {
<         return cs == null ? null : cs.subSequence(start, cs.length());
<     }
< 
<     
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
<     static int indexOfSequence(CharSequence cs, int searchChar, int start) {
<         if (cs instanceof String) {
<             return ((String) cs).indexOf(searchChar, start);
<         } else {
<             int sz = cs.length();
<             if ( start < 0 ) {
<                 start = 0;
<             }
<             for ( int i=start; i < sz; i++ ) {
<                 if ( cs.charAt(i) == searchChar) {
<                     return i;
<                 }
<             }
<             return -1;
<         }
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
<     static int indexOfSequence(CharSequence cs, CharSequence searchChar, int start) {
<         if (cs instanceof String && searchChar instanceof String) {
<             
<             
<             
<             return ((String) cs).indexOf( (String) searchChar, start);
<         } else {
<             
<             return cs.toString().indexOf(searchChar.toString(), start);
<         }
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
<     static int lastIndexOfSequence(CharSequence cs, int searchChar, int start) {
<         if (cs instanceof String) {
<             return ((String) cs).lastIndexOf(searchChar, start);
<         } else {
<             int sz = cs.length();
<             if ( start < 0 ) {
<                 return -1;
<             }
<             if ( start >= sz ) {
<                 start = sz - 1;
<             }
<             for ( int i=start; i >= 0; --i ) {
<                 if ( cs.charAt(i) == searchChar) {
<                     return i;
<                 }
<             }
<             return -1;
<         }
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
<     static int lastIndexOfSequence(CharSequence cs, CharSequence searchChar, int start) {
<         if (cs instanceof String && searchChar instanceof String) {
<             
<             
<             
<             return ((String) cs).lastIndexOf( (String) searchChar, start);
<         } else {
<             
<             return cs.toString().lastIndexOf(searchChar.toString(), start);
<         }
<     }
< 
<     
< 
< 
< 
< 
< 
<     static char[] toCharArraySequence(CharSequence cs) {
<         if (cs instanceof String) {
<             return ((String) cs).toCharArray();
<         } else {
<             int sz = cs.length();
<             char[] array = new char[cs.length()];
<             for (int i=0; i < sz; i++) {
<                 array[i] = cs.charAt(i);
<             }
<             return array;
<         }
<     }
< 
<     
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
<     static boolean regionMatchesSequence(CharSequence cs, boolean ignoreCase, int thisStart, 
<                                          CharSequence substring, int start, int length)
<     {
<         if (cs instanceof String && substring instanceof String) {
<             return ((String) cs).regionMatches(ignoreCase, thisStart, ((String)substring), start, length);
<         } else {
<             
<             return cs.toString().regionMatches(ignoreCase, thisStart, substring.toString(), start, length);
<         }
