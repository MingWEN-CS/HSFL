42a43,56
>   static DiagnosticGroup registerGroup(String name,
>       DiagnosticType ... types) {
>     DiagnosticGroup group = new DiagnosticGroup(name, types);
>     groupsByName.put(name, group);
>     return group;
>   }
> 
>   static DiagnosticGroup registerGroup(String name,
>       DiagnosticGroup ... groups) {
>     DiagnosticGroup group = new DiagnosticGroup(name, groups);
>     groupsByName.put(name, group);
>     return group;
>   }
> 
70,71c84
<           new DiagnosticGroup(
<               CheckGlobalThis.GLOBAL_THIS));
---
>           CheckGlobalThis.GLOBAL_THIS);
75,81c88,93
<           new DiagnosticGroup(
<               CheckAccessControls.DEPRECATED_NAME,
<               CheckAccessControls.DEPRECATED_NAME_REASON,
<               CheckAccessControls.DEPRECATED_PROP,
<               CheckAccessControls.DEPRECATED_PROP_REASON,
<               CheckAccessControls.DEPRECATED_CLASS,
<               CheckAccessControls.DEPRECATED_CLASS_REASON));
---
>           CheckAccessControls.DEPRECATED_NAME,
>           CheckAccessControls.DEPRECATED_NAME_REASON,
>           CheckAccessControls.DEPRECATED_PROP,
>           CheckAccessControls.DEPRECATED_PROP_REASON,
>           CheckAccessControls.DEPRECATED_CLASS,
>           CheckAccessControls.DEPRECATED_CLASS_REASON);
85,90c97,101
<           new DiagnosticGroup(
<               CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,
<               CheckAccessControls.BAD_PRIVATE_PROPERTY_ACCESS,
<               CheckAccessControls.BAD_PROTECTED_PROPERTY_ACCESS,
<               CheckAccessControls.PRIVATE_OVERRIDE,
<               CheckAccessControls.VISIBILITY_MISMATCH));
---
>           CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,
>           CheckAccessControls.BAD_PRIVATE_PROPERTY_ACCESS,
>           CheckAccessControls.BAD_PROTECTED_PROPERTY_ACCESS,
>           CheckAccessControls.PRIVATE_OVERRIDE,
>           CheckAccessControls.VISIBILITY_MISMATCH);
94,95c105
<           new DiagnosticGroup(
<               CheckAccessControls.CONST_PROPERTY_REASSIGNED_VALUE));
---
>           CheckAccessControls.CONST_PROPERTY_REASSIGNED_VALUE);
98,99c108,109
<     DiagnosticGroups.registerGroup("nonStandardJsDocs",
<           new DiagnosticGroup(RhinoErrorReporter.BAD_JSDOC_ANNOTATION));
---
>       DiagnosticGroups.registerGroup("nonStandardJsDocs",
>           RhinoErrorReporter.BAD_JSDOC_ANNOTATION);
103c113
<           new DiagnosticGroup(DEPRECATED, VISIBILITY));
---
>           DEPRECATED, VISIBILITY);
107c117
<           new DiagnosticGroup(TypeValidator.INVALID_CAST));
---
>           TypeValidator.INVALID_CAST);
111c121
<           new DiagnosticGroup(RhinoErrorReporter.EXTRA_FILEOVERVIEW));
---
>           RhinoErrorReporter.EXTRA_FILEOVERVIEW);
115,116c125,126
<           new DiagnosticGroup(VarCheck.STRICT_MODULE_DEP_ERROR,
<                               CheckGlobalNames.STRICT_MODULE_DEP_QNAME));
---
>           VarCheck.STRICT_MODULE_DEP_ERROR,
>           CheckGlobalNames.STRICT_MODULE_DEP_QNAME);
120,121c130,131
<           new DiagnosticGroup(VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR,
<                               VarCheck.UNDEFINED_EXTERN_VAR_ERROR));
---
>           VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR,
>           VarCheck.UNDEFINED_EXTERN_VAR_ERROR);
125c135
<           new DiagnosticGroup(VariableReferenceCheck.AMBIGUOUS_FUNCTION_DECL));
---
>           VariableReferenceCheck.AMBIGUOUS_FUNCTION_DECL);
129c139
<           new DiagnosticGroup(ProcessDefines.UNKNOWN_DEFINE_WARNING));
---
>           ProcessDefines.UNKNOWN_DEFINE_WARNING);
133,136c143,145
<           new DiagnosticGroup(
<               ProcessTweaks.INVALID_TWEAK_DEFAULT_VALUE_WARNING,
<               ProcessTweaks.TWEAK_WRONG_GETTER_TYPE_WARNING,
<               ProcessTweaks.UNKNOWN_TWEAK_WARNING));
---
>           ProcessTweaks.INVALID_TWEAK_DEFAULT_VALUE_WARNING,
>           ProcessTweaks.TWEAK_WRONG_GETTER_TYPE_WARNING,
>           ProcessTweaks.UNKNOWN_TWEAK_WARNING);
140c149
<           new DiagnosticGroup(TypeCheck.INEXISTENT_PROPERTY));
---
>           TypeCheck.INEXISTENT_PROPERTY);
145c154
<           new DiagnosticGroup(RhinoErrorReporter.TRAILING_COMMA));
---
>           RhinoErrorReporter.TRAILING_COMMA);
149c158
<           new DiagnosticGroup(VarCheck.UNDEFINED_VAR_ERROR));
---
>           VarCheck.UNDEFINED_VAR_ERROR);
153,154c162
<           new DiagnosticGroup(
<               CheckRegExp.REGEXP_REFERENCE));
---
>           CheckRegExp.REGEXP_REFERENCE);
158,160c166,167
<           new DiagnosticGroup(
<               TypeValidator.ALL_DIAGNOSTICS,
<               TypeCheck.ALL_DIAGNOSTICS));
---
>           TypeValidator.ALL_DIAGNOSTICS,
>           TypeCheck.ALL_DIAGNOSTICS);
164,166c171,172
<           new DiagnosticGroup(
<               VarCheck.UNDEFINED_VAR_ERROR,
<               SyntacticScopeCreator.VAR_MULTIPLY_DECLARED_ERROR));
---
>           VarCheck.UNDEFINED_VAR_ERROR,
>           SyntacticScopeCreator.VAR_MULTIPLY_DECLARED_ERROR);
170,172c176,177
<           new DiagnosticGroup(
<               CheckSideEffects.USELESS_CODE_ERROR,
<               CheckUnreachableCode.UNREACHABLE_CODE));
---
>           CheckSideEffects.USELESS_CODE_ERROR,
>           CheckUnreachableCode.UNREACHABLE_CODE);
176,177c181
<         new DiagnosticGroup(
<             DisambiguateProperties.Warnings.INVALIDATION));
---
>         DisambiguateProperties.Warnings.INVALIDATION);
