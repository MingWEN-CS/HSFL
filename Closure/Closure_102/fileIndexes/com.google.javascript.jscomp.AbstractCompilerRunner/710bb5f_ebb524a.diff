77c77,80
< public abstract class AbstractCompilerRunner<A extends Compiler,
---
> 
> 
> 
> abstract class AbstractCompilerRunner<A extends Compiler,
82c85
<   public static final Flag<Boolean> FLAG_print_tree = Flag.value(false);
---
>   static final Flag<Boolean> FLAG_print_tree = Flag.value(false);
87c90
<   public static final Flag<Boolean> FLAG_compute_phase_ordering =
---
>   static final Flag<Boolean> FLAG_compute_phase_ordering =
93c96
<   public static final Flag<Boolean> FLAG_print_ast = Flag.value(false);
---
>   static final Flag<Boolean> FLAG_print_ast = Flag.value(false);
97c100
<   public static final Flag<CompilerOptions.DevMode> FLAG_jscomp_dev_mode =
---
>   static final Flag<CompilerOptions.DevMode> FLAG_jscomp_dev_mode =
99a103
>   
112c116
<   public static final Flag<List<String>> FLAG_js = Flag.stringCollector();
---
>   static final Flag<List<String>> FLAG_js = Flag.stringCollector();
124c128
<   public static final Flag<List<String>> FLAG_module = Flag.stringCollector();
---
>   static final Flag<List<String>> FLAG_module = Flag.stringCollector();
128c132
<   public static final Flag<String> FLAG_variable_map_input_file =
---
>   static final Flag<String> FLAG_variable_map_input_file =
134c138
<   public static final Flag<String> FLAG_property_map_input_file =
---
>   static final Flag<String> FLAG_property_map_input_file =
140c144
<   public static final Flag<String> FLAG_variable_map_output_file =
---
>   static final Flag<String> FLAG_variable_map_output_file =
149c153
<   public static final Flag<Boolean> FLAG_create_name_map_files =
---
>   static final Flag<Boolean> FLAG_create_name_map_files =
154c158
<   public static final Flag<String> FLAG_property_map_output_file =
---
>   static final Flag<String> FLAG_property_map_output_file =
159c163
<   public static final Flag<Boolean> FLAG_third_party = Flag.value(false);
---
>   static final Flag<Boolean> FLAG_third_party = Flag.value(false);
167c171
<   public static final Flag<Integer> FLAG_summary_detail_level = Flag.value(1);
---
>   static final Flag<Integer> FLAG_summary_detail_level = Flag.value(1);
171c175
<   public static final Flag<String> FLAG_output_wrapper = Flag.value("");
---
>   static final Flag<String> FLAG_output_wrapper = Flag.value("");
175c179
<   public static final Flag<String> FLAG_output_wrapper_marker =
---
>   static final Flag<String> FLAG_output_wrapper_marker =
182c186
<   public static final Flag<List<String>> FLAG_module_wrapper =
---
>   static final Flag<List<String>> FLAG_module_wrapper =
188c192
<   public static final Flag<String> FLAG_module_output_path_prefix =
---
>   static final Flag<String> FLAG_module_output_path_prefix =
196c200
<   public static final Flag<String> FLAG_create_source_map =
---
>   static final Flag<String> FLAG_create_source_map =
201c205
<   public static final Flag<List<String>> FLAG_jscomp_error =
---
>   static final Flag<List<String>> FLAG_jscomp_error =
206c210
<   public static final Flag<List<String>> FLAG_jscomp_warning =
---
>   static final Flag<List<String>> FLAG_jscomp_warning =
211c215
<   public static final Flag<List<String>> FLAG_jscomp_off =
---
>   static final Flag<List<String>> FLAG_jscomp_off =
220c224
<   public static final Flag<List<String>> FLAG_define = Flag.stringCollector();
---
>   static final Flag<List<String>> FLAG_define = Flag.stringCollector();
236c240
<   public AbstractCompilerRunner(String[] args) {
---
>   AbstractCompilerRunner(String[] args) {
240c244
<   public AbstractCompilerRunner(String[] args, PrintStream out,
---
>   AbstractCompilerRunner(String[] args, PrintStream out,
355c359
<   public static class FlagUsageException extends Exception {
---
>   static class FlagUsageException extends Exception {
