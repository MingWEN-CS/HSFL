















package com.google.javascript.jscomp;

import com.google.javascript.rhino.IR;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.Node;







public class SyntheticAst implements SourceAst {
  private static final long serialVersionUID = 1L;

  private final InputId inputId;
  private final SourceFile sourceFile;

  private Node root;

  SyntheticAst(String sourceName) {
    this.inputId = new InputId(sourceName);
    this.sourceFile = new SourceFile(sourceName);
    clearAst();
  }

  @Override
  public Node getAstRoot(AbstractCompiler compiler) {
    return root;
  }

  @Override
  public void clearAst() {
    root = IR.script();
    root.setInputId(inputId);
    root.setIsSyntheticBlock(true);
    root.setStaticSourceFile(sourceFile);
  }

  @Override
  public InputId getInputId() {
    return inputId;
  }

  @Override
  public SourceFile getSourceFile() {
    return sourceFile;
  }

  @Override
  public void setSourceFile(SourceFile file) {
    throw new IllegalStateException(
        "Cannot set a source file for a synthetic AST");
  }
}
