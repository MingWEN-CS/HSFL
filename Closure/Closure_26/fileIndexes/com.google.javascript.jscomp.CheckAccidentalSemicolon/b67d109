















package com.google.javascript.jscomp;

import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.Token;









final class CheckAccidentalSemicolon extends AbstractPostOrderCallback {

  static final DiagnosticType SUSPICIOUS_SEMICOLON = DiagnosticType.warning(
      "JSC_SUSPICIOUS_SEMICOLON",
      "If this if/for/while really shouldn't have a body, use {}");

  private final CheckLevel level;

  CheckAccidentalSemicolon(CheckLevel level) {
    this.level = level;
  }

  @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
    Node child;
    switch (n.getType()) {
      case Token.IF:
        child = n.getFirstChild().getNext();  
        break;

      case Token.WHILE:
      case Token.FOR:
        child = NodeUtil.getLoopCodeBlock(n);
        break;

      default:
        return;  
    }

    
    
    for (; child != null; child = child.getNext()) {
      if ((child.getType() == Token.BLOCK) && (!child.hasChildren())) {
        
        
        if (child.wasEmptyNode()) {
          t.getCompiler().report(
              t.makeError(n, level, SUSPICIOUS_SEMICOLON));
        }
      }
    }
  }
}
