251c251
<     Preconditions.checkState(scriptRoot.getType() == Token.SCRIPT);
---
>     Preconditions.checkState(scriptRoot.isScript());
363c363
<           if (firstChild.getType() == Token.ASSIGN) {
---
>           if (firstChild.isAssign()) {
457,458c457,458
<       if (n.getType() == Token.FUNCTION ||
<           n.getType() == Token.SCRIPT) {
---
>       if (n.isFunction() ||
>           n.isScript()) {
510c510
<           if (firstChild.getType() == Token.GETPROP &&
---
>           if (firstChild.isGetProp() &&
527c527
<           if (parent.getType() == Token.EXPR_RESULT &&
---
>           if (parent.isExprResult() &&
671c671
<           node.getType() == Token.GETPROP ? node.getFirstChild() :
---
>           node.isGetProp() ? node.getFirstChild() :
841c841
<             rValue != null && rValue.getType() == Token.FUNCTION;
---
>             rValue != null && rValue.isFunction();
897c897
<           } else if (ownerNode != null && ownerNode.getType() == Token.THIS) {
---
>           } else if (ownerNode != null && ownerNode.isThis()) {
977c977
<         if (rValue != null && rValue.getType() == Token.OBJECTLIT) {
---
>         if (rValue != null && rValue.isObjectLit()) {
1033c1033
<       if (n.getType() == Token.NAME) {
---
>       if (n.isName()) {
1035,1038c1035,1038
<             parent.getType() == Token.FUNCTION ||
<             parent.getType() == Token.VAR ||
<             parent.getType() == Token.LP ||
<             parent.getType() == Token.CATCH);
---
>             parent.isFunction() ||
>             parent.isVar() ||
>             parent.isLP() ||
>             parent.isCatch());
1041,1043c1041,1043
<             n.getType() == Token.GETPROP &&
<             (parent.getType() == Token.ASSIGN ||
<              parent.getType() == Token.EXPR_RESULT));
---
>             n.isGetProp() &&
>             (parent.isAssign() ||
>              parent.isExprResult()));
1063c1063
<       boolean isGlobalVar = n.getType() == Token.NAME && scope.isGlobal();
---
>       boolean isGlobalVar = n.isName() && scope.isGlobal();
1066,1067c1066,1067
<           (parent.getType() == Token.VAR ||
<            parent.getType() == Token.FUNCTION);
---
>           (parent.isVar() ||
>            parent.isFunction());
1073c1073
<       if (n.getType() == Token.GETPROP && !scope.isGlobal() &&
---
>       if (n.isGetProp() && !scope.isGlobal() &&
1103c1103
<               (initialValue.getType() == Token.OBJECTLIT ||
---
>               (initialValue.isObjectLit() ||
1197c1197
<       if (root.getType() == Token.NAME) {
---
>       if (root.isName()) {
1219c1219
<       } else if (rValue != null && rValue.getType() == Token.FUNCTION &&
---
>       } else if (rValue != null && rValue.isFunction() &&
1225c1225
<           if (rValue != null && rValue.getType() == Token.OBJECTLIT) {
---
>           if (rValue != null && rValue.isObjectLit()) {
1242c1242
<               } else if (rValue.getType() == Token.OR) {
---
>               } else if (rValue.isOr()) {
1249,1250c1249,1250
<                 boolean namesMatch = firstClause.getType() == Token.NAME
<                     && lValue.getType() == Token.NAME
---
>                 boolean namesMatch = firstClause.isName()
>                     && lValue.isName()
1448c1448
<               rhsValue.getType() == Token.OBJECTLIT) {
---
>               rhsValue.isObjectLit()) {
1466c1466
<         if (parent.getType() == Token.EXPR_RESULT) {
---
>         if (parent.isExprResult()) {
1489c1489
<             rhsValue.getType() == Token.FUNCTION &&
---
>             rhsValue.isFunction() &&
1512c1512
<           rhsValue.getType() == Token.TRUE) {
---
>           rhsValue.isTrue()) {
1594c1594
<         if (n.getType() == Token.EXPR_RESULT) {
---
>         if (n.isExprResult()) {
1625c1625
<             (name.getType() == Token.NAME || name.getType() == Token.STRING)) {
---
>             (name.isName() || name.isString())) {
1720c1720
<       if (candidate.getType() == Token.GETPROP) {
---
>       if (candidate.isGetProp()) {
1767c1767
<       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
---
>       if (n.isLP() && parent == scope.getRootNode()) {
1859c1859
<       if (n.getType() == Token.RETURN && n.getFirstChild() != null) {
---
>       if (n.isReturn() && n.getFirstChild() != null) {
1861c1861
<       } else if (n.getType() == Token.NAME && NodeUtil.isLValue(n)) {
---
>       } else if (n.isName() && NodeUtil.isLValue(n)) {
