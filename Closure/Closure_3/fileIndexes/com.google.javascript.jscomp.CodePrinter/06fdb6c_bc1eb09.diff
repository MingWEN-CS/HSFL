19a20
> import com.google.common.base.Throwables;
547,549c548
<     private boolean prettyPrint = false;
<     private boolean lineBreak = false;
<     private boolean preferLineBreakAtEndOfFile = false;
---
>     private CompilerOptions options = new CompilerOptions();
551d549
<     private int lineLengthThreshold = DEFAULT_LINE_LENGTH_THRESHOLD;
553,557d550
<     private SourceMap.DetailLevel sourceMapDetailLevel =
<         SourceMap.DetailLevel.ALL;
<     
<     
<     private Charset outputCharset = null;
571,573c564,569
< 
<     Builder setPrettyPrint(boolean prettyPrint) {
<       this.prettyPrint = prettyPrint;
---
>     Builder setCompilerOptions(CompilerOptions options) {
>       try {
>         this.options = (CompilerOptions) options.clone();
>       } catch (CloneNotSupportedException e) {
>         throw Throwables.propagate(e);
>       }
581,582c577,578
<     Builder setLineBreak(boolean lineBreak) {
<       this.lineBreak = lineBreak;
---
>     Builder setPrettyPrint(boolean prettyPrint) {
>       options.prettyPrint = prettyPrint;
590,593c586,587
< 
< 
<     Builder setPreferLineBreakAtEndOfFile(boolean lineBreakAtEnd) {
<       this.preferLineBreakAtEndOfFile = lineBreakAtEnd;
---
>     Builder setLineBreak(boolean lineBreak) {
>       options.lineBreak = lineBreak;
612,622d605
<     Builder setLineLengthThreshold(int threshold) {
<       this.lineLengthThreshold = threshold;
<       return this;
<     }
< 
<     
< 
< 
< 
< 
< 
631,648d613
<     Builder setSourceMapDetailLevel(SourceMap.DetailLevel level) {
<       Preconditions.checkState(level != null);
<       this.sourceMapDetailLevel = level;
<       return this;
<     }
< 
<     
< 
< 
< 
<     Builder setOutputCharset(Charset outCharset) {
<       this.outputCharset = outCharset;
<       return this;
<     }
< 
<     
< 
< 
665c630
<           : prettyPrint
---
>           : options.prettyPrint
669,671c634
<       return toSource(root, outputFormat, lineBreak, preferLineBreakAtEndOfFile,
<           lineLengthThreshold, sourceMap, sourceMapDetailLevel, outputCharset,
<           tagAsStrict);
---
>       return toSource(root, outputFormat, options, sourceMap, tagAsStrict);
685,691c648,649
<                                  boolean lineBreak,  boolean preferEndOfFileBreak,
<                                  int lineLengthThreshold,
<                                  SourceMap sourceMap,
<                                  SourceMap.DetailLevel sourceMapDetailLevel,
<                                  Charset outputCharset,
<                                  boolean tagAsStrict) {
<     Preconditions.checkState(sourceMapDetailLevel != null);
---
>       CompilerOptions options, SourceMap sourceMap,  boolean tagAsStrict) {
>     Preconditions.checkState(options.sourceMapDetailLevel != null);
693a652,653
>     Charset outputCharset = options.outputCharset == null ? null :
>         Charset.forName(options.outputCharset);
697,698c657,661
<             lineBreak, preferEndOfFileBreak, lineLengthThreshold,
<             createSourceMap, sourceMapDetailLevel)
---
>             options.lineBreak,
>             options.preferLineBreakAtEndOfFile,
>             options.lineLengthThreshold,
>             createSourceMap,
>             options.sourceMapDetailLevel)
700c663,665
<             lineLengthThreshold, createSourceMap, sourceMapDetailLevel);
---
>             options.lineLengthThreshold,
>             createSourceMap,
>             options.sourceMapDetailLevel);
704c669
<         : new CodeGenerator(mcp, outputCharset);
---
>         : new CodeGenerator(mcp, outputCharset, options.preferSingleQuotes);
