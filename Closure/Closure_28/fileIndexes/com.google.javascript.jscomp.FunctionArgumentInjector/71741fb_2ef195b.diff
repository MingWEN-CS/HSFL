39,42d38
<   
<   
<   static final String THIS_MARKER = "this";
< 
56c52
<   static Node inject(AbstractCompiler compiler, Node node, Node parent,
---
>   static Node inject(Node node, Node parent,
71,88d66
<     } else if (node.getType() == Token.THIS) {
<       Node replacementTemplate = replacements.get(THIS_MARKER);
<       Preconditions.checkNotNull(replacementTemplate);
<       if (replacementTemplate.getType() != Token.THIS) {
<         
<         
<         Node replacement = replacementTemplate.cloneTree();
<         parent.replaceChild(node, replacement);
< 
<         
<         
<         
<         if (NodeUtil.mayHaveSideEffects(replacementTemplate, compiler)) {
<           replacements.remove(THIS_MARKER);
<         }
< 
<         return replacement;
<       }
94c72
<       c = inject(compiler, c, node, replacements);
---
>       c = inject(c, node, replacements);
111,117c89,97
<     if (cArg != null && NodeUtil.isFunctionObjectCall(callNode)) {
<       argMap.put(THIS_MARKER, cArg);
<       cArg = cArg.getNext();
<     } else {
<       
<       Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));
<       argMap.put(THIS_MARKER, NodeUtil.newUndefinedNode(callNode));
---
>     if (callNode.getFirstChild().getType() != Token.NAME) {
>       if (NodeUtil.isFunctionObjectCall(callNode)) {
>         
>         Preconditions.checkNotNull(cArg);
>         Preconditions.checkState(cArg.getType() == Token.THIS);
>         cArg = cArg.getNext();
>       } else {
>         Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));
>       }
403,404d382
<         } else if (n.getType() == Token.THIS) {
<           parametersReferenced.add(THIS_MARKER);
