1022a1023,1030
>     
>     boolean superInterfacesHasProperty = false;
>     if (ctorType.isInterface()) {
>       for (ObjectType interfaceType : ctorType.getExtendedInterfaces()) {
>         superInterfacesHasProperty =
>           superInterfacesHasProperty || interfaceType.hasProperty(propertyName);
>       }
>     }
1027c1035,1036
<       for (JSType implementedInterface : ctorType.getImplementedInterfaces()) {
---
>       for (JSType implementedInterface :
>           ctorType.getAllImplementedInterfaces()) {
1049c1058,1059
<     if (!declaredOverride && !superClassHasProperty) {
---
>     if (!declaredOverride && !superClassHasProperty
>         && !superInterfacesHasProperty) {
1078a1089,1105
>     } else if (superInterfacesHasProperty) {
>       
>       for (ObjectType interfaceType : ctorType.getExtendedInterfaces()) {
>         if (interfaceType.hasProperty(propertyName)) {
>           JSType superPropertyType =
>             interfaceType.getPropertyType(propertyName);
>           if (!propertyType.canAssignTo(superPropertyType)) {
>             topInstanceType = interfaceType.getConstructor().
>                 getTopMostDefiningType(propertyName);
>             compiler.report(
>                 t.makeError(n, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
>                     propertyName, topInstanceType.toString(),
>                     superPropertyType.toString(),
>                     propertyType.toString()));
>           }
>         }
>       }
1396,1397d1422
<     JSDocInfo info = n.getJSDocInfo();
< 
1400c1425
<     if (functionType.isInterface() || functionType.isConstructor()) {
---
>     if (functionType.isConstructor()) {
1405,1406c1430
<           (baseConstructor.isConstructor() && functionType.isInterface() ||
<            baseConstructor.isInterface() && functionType.isConstructor())) {
---
>           (baseConstructor.isInterface() && functionType.isConstructor())) {
1409,1415d1432
<       }
< 
<       if (functionType.isInterface()) {
<         if (functionType.hasImplementedInterfaces()) {
<           compiler.report(t.makeError(n,
<               CONFLICTING_IMPLEMENTED_TYPE, functionPrivateName));
<         }
1416a1434
>         
1434,1435c1452
<       }
<       if (functionType.isConstructor()) {
---
>         
1436a1454,1467
>       }
>     } else if (functionType.isInterface()) {
>       
>       for (ObjectType extInterface : functionType.getExtendedInterfaces()) {
>         if (extInterface.getConstructor() != null
>             && !extInterface.getConstructor().isInterface()) {
>           compiler.report(
>               t.makeError(n, CONFLICTING_EXTENDED_TYPE, functionPrivateName));
>         }
>       }
>       
>       if (functionType.hasImplementedInterfaces()) {
>         compiler.report(t.makeError(n,
>             CONFLICTING_IMPLEMENTED_TYPE, functionPrivateName));
