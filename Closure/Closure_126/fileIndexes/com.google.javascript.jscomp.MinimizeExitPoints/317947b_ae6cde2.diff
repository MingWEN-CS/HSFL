20,22d19
< import com.google.javascript.jscomp.AbstractCompiler;
< import com.google.javascript.jscomp.CompilerPass;
< import com.google.javascript.jscomp.NodeTraversal;
24d20
< import com.google.javascript.jscomp.NodeUtil;
61,62c57
<         tryMinimizeExits(
<             NodeUtil.getLoopCodeBlock(n), Token.CONTINUE, null);
---
>         tryMinimizeExits(NodeUtil.getLoopCodeBlock(n), Token.CONTINUE, null);
66,67c61
<         tryMinimizeExits(
<             NodeUtil.getLoopCodeBlock(n), Token.CONTINUE, null);
---
>         tryMinimizeExits(NodeUtil.getLoopCodeBlock(n), Token.CONTINUE, null);
74,75c68
<           tryMinimizeExits(
<               n.getFirstChild(), Token.BREAK, null);
---
>           tryMinimizeExits(n.getFirstChild(), Token.BREAK, null);
80,81c73
<         tryMinimizeExits(
<             n.getLastChild(), Token.RETURN, null);
---
>         tryMinimizeExits(n.getLastChild(), Token.RETURN, null);
264a257
>       compiler.reportCodeChange();
266,270d258
< 
<     
<     NodeUtil.removeChild(exitNodeParent, exitNode);
< 
<     compiler.reportCodeChange();
284c272
<   static private boolean matchingExitNode(Node n, int type, String labelName) {
---
>   private static boolean matchingExitNode(Node n, int type, String labelName) {
308c296
<   static private void moveAllFollowing(
---
>   private static void moveAllFollowing(
311,313c299
<       boolean isFunctionDeclaration =
<           NodeUtil.isFunctionDeclaration(n);
< 
---
>       boolean isFunctionDeclaration = NodeUtil.isFunctionDeclaration(n);
315d300
< 
