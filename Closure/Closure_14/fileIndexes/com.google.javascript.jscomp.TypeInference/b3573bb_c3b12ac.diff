810a811
>     String assertedNodeName = assertedNode.getQualifiedName();
813,829c814,827
<       switch (assertedNode.getType()) {
<         case Token.NAME:
<           JSType type = getJSType(assertedNode);
<           JSType narrowed = type.restrictByNotNullOrUndefined();
<           if (type != narrowed) {
<             scope = scope.createChildFlowScope();
<             redeclare(scope, assertedNode.getString(), narrowed);
<           }
<           break;
<         case Token.AND:
<         case Token.OR:
<           BooleanOutcomePair conditionOutcomes =
<               traverseWithinShortCircuitingBinOp(assertedNode, scope);
<           scope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
<               assertedNode, conditionOutcomes.getOutcomeFlowScope(
<                   assertedNode.getType(), true), true);
<           break;
---
>       if (assertedNodeName != null) {
>         JSType type = getJSType(assertedNode);
>         JSType narrowed = type.restrictByNotNullOrUndefined();
>         if (type != narrowed) {
>           scope = scope.createChildFlowScope();
>           redeclare(scope, assertedNodeName, narrowed);
>         }
>       } else if (assertedNode.getType() == Token.AND ||
>                  assertedNode.getType() == Token.OR) {
>         BooleanOutcomePair conditionOutcomes =
>             traverseWithinShortCircuitingBinOp(assertedNode, scope);
>         scope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
>             assertedNode, conditionOutcomes.getOutcomeFlowScope(
>                 assertedNode.getType(), true), true);
831c829
<     } else if (assertedNode.getType() == Token.NAME) {
---
>     } else if (assertedNodeName != null) {
837c835
<         redeclare(scope, assertedNode.getString(), narrowed);
---
>         redeclare(scope, assertedNodeName, narrowed);
