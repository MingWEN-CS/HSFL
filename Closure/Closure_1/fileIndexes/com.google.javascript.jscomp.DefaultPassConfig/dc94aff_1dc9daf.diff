21a22
> import com.google.common.collect.ImmutableSet;
616a618
>       passes.add(peepholeOptimizations);
862a865,881
>     }
>   };
> 
>   
>   private static final PassFactory peepholeOptimizations =
>       new PassFactory("peepholeOptimizations", false) {
>     @Override
>     protected CompilerPass createInternal(AbstractCompiler compiler) {
> 
>       ImmutableSet<AbstractPeepholeOptimization> optimizations =
>         ImmutableSet.<AbstractPeepholeOptimization>of(
>             new PeepholeSubstituteAlternateSyntax());
> 
>       final PeepholeOptimizationsPass peepholePass =
>           new PeepholeOptimizationsPass(compiler, optimizations);
> 
>       return peepholePass;
