31a32,33
>   
>   
33c35
<       DiagnosticType.error(
---
>       DiagnosticType.warning(
38c40
<       DiagnosticType.error(
---
>       DiagnosticType.warning(
43c45
<       DiagnosticType.error(
---
>       DiagnosticType.warning(
48c50
<       DiagnosticType.error(
---
>       DiagnosticType.warning(
52,58c54,62
<   static final DiagnosticType SHIFT_AMOUNT_OUT_OF_BOUNDS = DiagnosticType.error(
<       "JSC_SHIFT_AMOUNT_OUT_OF_BOUNDS",
<       "Shift amount out of bounds: {0}");
< 
<   static final DiagnosticType FRACTIONAL_BITWISE_OPERAND = DiagnosticType.error(
<       "JSC_FRACTIONAL_BITWISE_OPERAND",
<       "Fractional bitwise operand: {0}");
---
>   static final DiagnosticType SHIFT_AMOUNT_OUT_OF_BOUNDS =
>       DiagnosticType.warning(
>           "JSC_SHIFT_AMOUNT_OUT_OF_BOUNDS",
>           "Shift amount out of bounds: {0}");
> 
>   static final DiagnosticType FRACTIONAL_BITWISE_OPERAND =
>       DiagnosticType.warning(
>           "JSC_FRACTIONAL_BITWISE_OPERAND",
>           "Fractional bitwise operand: {0}");
371,382c375,384
<         try {
<           if (left.isName()) {
<             if (left.getString().equals("Infinity")) {
<               
<               return n;
<             } else if (left.getString().equals("NaN")) {
<               
<               n.removeChild(left);
<               parent.replaceChild(n, left);
<               reportCodeChange();
<               return left;
<             }
---
>         if (left.isName()) {
>           if (left.getString().equals("Infinity")) {
>             
>             return n;
>           } else if (left.getString().equals("NaN")) {
>             
>             n.removeChild(left);
>             parent.replaceChild(n, left);
>             reportCodeChange();
>             return left;
383a386
>         }
384a388
>         if (left.isNumber()) {
391c395
<         } catch (UnsupportedOperationException ex) {
---
>         } else {
394c398
<           error(NEGATING_A_NON_NUMBER_ERROR, left);
---
>           report(NEGATING_A_NON_NUMBER_ERROR, left);
408c412
<               error(FRACTIONAL_BITWISE_OPERAND, left);
---
>               report(FRACTIONAL_BITWISE_OPERAND, left);
412c416
<             error(BITWISE_OPERAND_OUT_OF_RANGE, left);
---
>             report(BITWISE_OPERAND_OUT_OF_RANGE, left);
418c422
<           error(NEGATING_A_NON_NUMBER_ERROR, left);
---
>           report(NEGATING_A_NON_NUMBER_ERROR, left);
863c867
<         error(BITWISE_OPERAND_OUT_OF_RANGE, left);
---
>         report(BITWISE_OPERAND_OUT_OF_RANGE, left);
870c874
<         error(SHIFT_AMOUNT_OUT_OF_BOUNDS, right);
---
>         report(SHIFT_AMOUNT_OUT_OF_BOUNDS, right);
877c881
<         error(FRACTIONAL_BITWISE_OPERAND, left);
---
>         report(FRACTIONAL_BITWISE_OPERAND, left);
883c887
<         error(FRACTIONAL_BITWISE_OPERAND, right);
---
>         report(FRACTIONAL_BITWISE_OPERAND, right);
1400c1404
<       error(INVALID_GETELEM_INDEX_ERROR, right);
---
>       report(INVALID_GETELEM_INDEX_ERROR, right);
1405c1409
<       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
---
>       report(INDEX_OUT_OF_BOUNDS_ERROR, right);
1424c1428
<       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
---
>       report(INDEX_OUT_OF_BOUNDS_ERROR, right);
