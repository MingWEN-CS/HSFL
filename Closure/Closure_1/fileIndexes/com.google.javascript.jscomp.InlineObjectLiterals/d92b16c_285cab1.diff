118c118
<           if (node.getType() == Token.NAME) {
---
>           if (node.isName()) {
164c164
<         if (parent.getType() == Token.GETPROP) {
---
>         if (parent.isGetProp()) {
167c167
<           if (gramps.getType() == Token.CALL
---
>           if (gramps.isCall()
200,201c200,201
<           if (child.getType() == Token.GET ||
<               child.getType() == Token.SET) {
---
>           if (child.isGet() ||
>               child.isSet()) {
232,233c232,233
<       return parent.getType() == Token.VAR ||
<           (parent.getType() == Token.ASSIGN
---
>       return parent.isVar() ||
>           (parent.isAssign()
235c235
<               && parent.getParent().getType() == Token.EXPR_RESULT);
---
>               && parent.getParent().isExprResult());
251c251
<             Preconditions.checkState(val.getType() == Token.OBJECTLIT);
---
>             Preconditions.checkState(val.isObjectLit());
264c264
<         } else if (ref.getParent().getType() == Token.VAR) {
---
>         } else if (ref.getParent().isVar()) {
268c268
<           Preconditions.checkState(getprop.getType() == Token.GETPROP);
---
>           Preconditions.checkState(getprop.isGetProp());
291c291
<       Preconditions.checkState(object.getType() == Token.OBJECTLIT);
---
>       Preconditions.checkState(object.isObjectLit());
309c309
<       Preconditions.checkState(val.getType() == Token.OBJECTLIT);
---
>       Preconditions.checkState(val.isObjectLit());
358c358
<       if (replace.getType() == Token.VAR) {
---
>       if (replace.isVar()) {
383c383
<           init.getParent().getType() == Token.VAR;
---
>           init.getParent().isVar();
417c417
<         } else if (ref.getParent().getType() == Token.VAR) {
---
>         } else if (ref.getParent().isVar()) {
424c424
<           Preconditions.checkState(getprop.getType() == Token.GETPROP);
---
>           Preconditions.checkState(getprop.isGetProp());
