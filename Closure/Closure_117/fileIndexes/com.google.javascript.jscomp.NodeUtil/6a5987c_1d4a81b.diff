872c872
<           if (isName(assignTarget)) {
---
>           if (assignTarget.isName()) {
1361,1364d1360
<   static boolean isNull(Node n) {
<     return n.isNull();
<   }
< 
1366c1362
<     return isNull(n) || isUndefined(n);
---
>     return n.isNull() || isUndefined(n);
1396c1392
<         && !isUndefined(n) && !isNull(n);
---
>         && !isUndefined(n) && !n.isNull();
1501c1497
<     Node start = (isFunction(n)) ? n.getLastChild() : n;
---
>     Node start = (n.isFunction()) ? n.getLastChild() : n;
1515,1542d1510
<   static boolean isGetProp(Node n) {
<     return n.isGetProp();
<   }
< 
<   
< 
< 
<   static boolean isName(Node n) {
<     return n.isName();
<   }
< 
<   
< 
< 
<   static boolean isNew(Node n) {
<     return n.isNew();
<   }
< 
<   
< 
< 
<   static boolean isVar(Node n) {
<     return n.isVar();
<   }
< 
<   
< 
< 
1557c1525
<     Preconditions.checkState(isName(n));
---
>     Preconditions.checkState(n.isName());
1559c1527
<     if (isVar(parent)) {
---
>     if (parent.isVar()) {
1561c1529
<     } else if (isAssign(parent) && parent.getFirstChild() == n) {
---
>     } else if (parent.isAssign() && parent.getFirstChild() == n) {
1571,1577d1538
<   static boolean isString(Node n) {
<     return n.isString();
<   }
< 
<   
< 
< 
1590,1596d1550
<   static boolean isAssign(Node n) {
<     return n.isAssign();
<   }
< 
<   
< 
< 
1655c1609
<       if (NodeUtil.isFunction(parent)) {
---
>       if (parent.isFunction()) {
1779,1784c1733
<     return isName(n) && !n.getString().isEmpty();
<   }
< 
<   
<   static boolean isLabelName(Node n) {
<     return (n != null && n.isLabelName());
---
>     return n.isName() && !n.getString().isEmpty();
1893,1899d1841
<   static boolean isCall(Node n) {
<     return n.isCall();
<   }
< 
<   
< 
< 
1902,1909c1844
<     return NodeUtil.isCall(node) || NodeUtil.isNew(node);
<   }
< 
<   
< 
< 
<   static boolean isFunction(Node n) {
<     return n.isFunction();
---
>     return node.isCall() || node.isNew();
1916c1851
<     Preconditions.checkArgument(isFunction(fn));
---
>     Preconditions.checkArgument(fn.isFunction());
1923,1937d1857
<   static boolean isThis(Node node) {
<     return node.isThis();
<   }
< 
< 
<   
< 
< 
<   static boolean isArrayLiteral(Node node) {
<     return node.isArrayLit();
<   }
< 
<   
< 
< 
2004c1924
<     Preconditions.checkArgument(isFunction(function));
---
>     Preconditions.checkArgument(function.isFunction());
2614c2534
<     while (isGetProp(cur)) {
---
>     while (cur.isGetProp()) {
2711c2631
<       return !isFunction(n);
---
>       return !n.isFunction();
2725c2645
<           || (!isFunction(n) && (parent == null
---
>           || (!n.isFunction() && (parent == null
3087c3007
<     Preconditions.checkState(isFunction(function));
---
>     Preconditions.checkState(function.isFunction());
3106c3026
<       return isString(propNode) && "toString".equals(propNode.getString());
---
>       return propNode.isString() && "toString".equals(propNode.getString());
