98,103c98,113
<     
<     
<     
<     if (n.isExprResult() || n.isBlock()) {
<       return;
<     }
---
>     int pt = parent.getType();
>     if (pt == Token.COMMA) {
>       Node gramps = parent.getParent();
>       if (gramps.isCall() &&
>           parent == gramps.getFirstChild()) {
>         
>         
>         
>         
>         if (n == parent.getFirstChild() &&
>             parent.getChildCount() == 2 &&
>             n.getNext().isName() &&
>             "eval".equals(n.getNext().getString())) {
>           return;
>         }
>       }
105,108c115,135
<     
<     
<     if (n.isQualifiedName() && n.getJSDocInfo() != null) {
<       return;
---
>       if (n == parent.getLastChild()) {
>         for (Node an : parent.getAncestors()) {
>           int ancestorType = an.getType();
>           if (ancestorType == Token.COMMA)
>             continue;
>           if (ancestorType != Token.EXPR_RESULT &&
>               ancestorType != Token.BLOCK)
>             return;
>           else
>             break;
>         }
>       }
>     } else if (pt != Token.EXPR_RESULT && pt != Token.BLOCK) {
>       if (pt == Token.FOR && parent.getChildCount() == 4 &&
>           (n == parent.getFirstChild() ||
>            n == parent.getFirstChild().getNext().getNext())) {
>         
>         
>       } else {
>         return;  
>       }
111d137
<     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
113,114c139,149
<     if (!isResultUsed &&
<         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
---
>     if (isSimpleOp ||
>         !NodeUtil.mayHaveSideEffects(n, t.getCompiler())) {
>       if (n.isQualifiedName() && n.getJSDocInfo() != null) {
>         
>         
>         return;
>       } else if (n.isExprResult()) {
>         
>         return;
>       }
> 
