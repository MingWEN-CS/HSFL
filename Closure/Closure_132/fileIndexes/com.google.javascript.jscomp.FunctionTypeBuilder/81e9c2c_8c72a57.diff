91a92
>   private ImmutableList<String> classTypeParameterNames = ImmutableList.of();;
113a115,119
>   static final DiagnosticType CLASS_TEMPLATE_WITHOUT_CONSTRUCTOR =
>       DiagnosticType.warning(
>           "JSC_CLASS_TEMPLATE_WITHOUT_CONSTRUCTOR",
>           "@classTemplate used without @constructor or @interface for {0}");
> 
371a378,387
> 
>       ImmutableList<String> typeParameters = info.getClassTemplateTypeNames();
>       if (!typeParameters.isEmpty()) {
>         if (isConstructor || isInterface) {
>           this.classTypeParameterNames = typeParameters;
>         } else {
>           reportWarning(CLASS_TEMPLATE_WITHOUT_CONSTRUCTOR,
>               formatFnName());
>         }
>       }
674c690,691
<         fnName, contents.getSourceNode(), parametersNode, returnType, null);
---
>         fnName, contents.getSourceNode(), parametersNode, returnType,
>         classTypeParameterNames);
