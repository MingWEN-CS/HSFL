569,571c569,571
<       info = getBestJSDocInfo(objectLit);
<       Node lValue = getBestLValue(objectLit);
<       String lValueName = getBestLValueName(lValue);
---
>       info = NodeUtil.getBestJSDocInfo(objectLit);
>       Node lValue = NodeUtil.getBestLValue(objectLit);
>       String lValueName = NodeUtil.getBestLValueName(lValue);
611c611
<           String qualifiedName = getBestLValueName(keyNode);
---
>           String qualifiedName = NodeUtil.getBestLValueName(keyNode);
700,702c700,702
<       Node lValue = getBestLValue(n);
<       JSDocInfo info = getBestJSDocInfo(n);
<       String functionName = getBestLValueName(lValue);
---
>       Node lValue = NodeUtil.getBestLValue(n);
>       JSDocInfo info = NodeUtil.getBestJSDocInfo(n);
>       String functionName = NodeUtil.getBestLValueName(lValue);
1737,1792d1736
< 
< 
<   
<   static JSDocInfo getBestJSDocInfo(Node n) {
<     JSDocInfo info = n.getJSDocInfo();
<     if (info == null) {
<       Node parent = n.getParent();
<       int parentType = parent.getType();
<       if (parentType == Token.NAME) {
<         info = parent.getJSDocInfo();
<         if (info == null && parent.getParent().hasOneChild()) {
<           info = parent.getParent().getJSDocInfo();
<         }
<       } else if (parentType == Token.ASSIGN) {
<         info = parent.getJSDocInfo();
<       } else if (NodeUtil.isObjectLitKey(parent, parent.getParent())) {
<         info = parent.getJSDocInfo();
<       }
<     }
<     return info;
<   }
< 
<   
<   private static Node getBestLValue(Node n) {
<     Node parent = n.getParent();
<     int parentType = parent.getType();
<     boolean isFunctionDeclaration = NodeUtil.isFunctionDeclaration(n);
<     if (isFunctionDeclaration) {
<       return n.getFirstChild();
<     } else if (parentType == Token.NAME) {
<       return parent;
<     } else if (parentType == Token.ASSIGN) {
<       return parent.getFirstChild();
<     } else if (NodeUtil.isObjectLitKey(parent, parent.getParent())) {
<       return parent;
<     }
<     return null;
<   }
< 
<   
<   private static String getBestLValueName(@Nullable Node lValue) {
<     if (lValue == null || lValue.getParent() == null) {
<       return null;
<     }
<     if (NodeUtil.isObjectLitKey(lValue, lValue.getParent())) {
<       Node owner = getBestLValue(lValue.getParent());
<       if (owner != null) {
<         String ownerName = getBestLValueName(owner);
<         if (ownerName != null) {
<           return ownerName + "." + NodeUtil.getObjectLitKeyName(lValue);
<         }
<       }
<       return null;
<     }
<     return lValue.getQualifiedName();
<   }
