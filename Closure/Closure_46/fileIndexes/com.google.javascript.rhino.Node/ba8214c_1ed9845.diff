1460,1548d1459
<   public static String tokenToName(int token) {
<     switch (token) {
<       case Token.ERROR:           return "error";
<       case Token.RETURN:          return "return";
<       case Token.BITOR:           return "bitor";
<       case Token.BITXOR:          return "bitxor";
<       case Token.BITAND:          return "bitand";
<       case Token.EQ:              return "eq";
<       case Token.NE:              return "ne";
<       case Token.LT:              return "lt";
<       case Token.LE:              return "le";
<       case Token.GT:              return "gt";
<       case Token.GE:              return "ge";
<       case Token.LSH:             return "lsh";
<       case Token.RSH:             return "rsh";
<       case Token.URSH:            return "ursh";
<       case Token.ADD:             return "add";
<       case Token.SUB:             return "sub";
<       case Token.MUL:             return "mul";
<       case Token.DIV:             return "div";
<       case Token.MOD:             return "mod";
<       case Token.BITNOT:          return "bitnot";
<       case Token.NEG:             return "neg";
<       case Token.NEW:             return "new";
<       case Token.DELPROP:         return "delprop";
<       case Token.TYPEOF:          return "typeof";
<       case Token.GETPROP:         return "getprop";
<       case Token.GETELEM:         return "getelem";
<       case Token.CALL:            return "call";
<       case Token.NAME:            return "name";
<       case Token.NUMBER:          return "number";
<       case Token.STRING:          return "string";
<       case Token.NULL:            return "null";
<       case Token.THIS:            return "this";
<       case Token.FALSE:           return "false";
<       case Token.TRUE:            return "true";
<       case Token.SHEQ:            return "sheq";
<       case Token.SHNE:            return "shne";
<       case Token.REGEXP:          return "regexp";
<       case Token.POS:             return "pos";
<       case Token.THROW:           return "throw";
<       case Token.IN:              return "in";
<       case Token.INSTANCEOF:      return "instanceof";
<       case Token.TRY:             return "try";
<       case Token.PARAM_LIST:      return "lp";
<       case Token.COMMA:           return "comma";
<       case Token.ASSIGN:          return "assign";
<       case Token.ASSIGN_BITOR:    return "assign_bitor";
<       case Token.ASSIGN_BITXOR:   return "assign_bitxor";
<       case Token.ASSIGN_BITAND:   return "assign_bitand";
<       case Token.ASSIGN_LSH:      return "assign_lsh";
<       case Token.ASSIGN_RSH:      return "assign_rsh";
<       case Token.ASSIGN_URSH:     return "assign_ursh";
<       case Token.ASSIGN_ADD:      return "assign_add";
<       case Token.ASSIGN_SUB:      return "assign_sub";
<       case Token.ASSIGN_MUL:      return "assign_mul";
<       case Token.ASSIGN_DIV:      return "assign_div";
<       case Token.ASSIGN_MOD:      return "assign_mod";
<       case Token.HOOK:            return "hook";
<       case Token.OR:              return "or";
<       case Token.AND:             return "and";
<       case Token.INC:             return "inc";
<       case Token.DEC:             return "dec";
<       case Token.FUNCTION:        return "function";
<       case Token.IF:              return "if";
<       case Token.SWITCH:          return "switch";
<       case Token.CASE:            return "case";
<       case Token.DEFAULT_CASE:    return "default";
<       case Token.WHILE:           return "while";
<       case Token.DO:              return "do";
<       case Token.FOR:             return "for";
<       case Token.BREAK:           return "break";
<       case Token.CONTINUE:        return "continue";
<       case Token.VAR:             return "var";
<       case Token.WITH:            return "with";
<       case Token.CATCH:           return "catch";
<       case Token.NOT:             return "not";
<       case Token.VOID:            return "void";
<       case Token.BLOCK:           return "block";
<       case Token.ARRAYLIT:        return "arraylit";
<       case Token.OBJECTLIT:       return "objectlit";
<       case Token.LABEL:           return "label";
<       case Token.EXPR_RESULT:     return "expr_result";
<       case Token.SCRIPT:          return "script";
<       case Token.EMPTY:           return "empty";
<     }
<     return "<unknown="+token+">";
<   }
< 
