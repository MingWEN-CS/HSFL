47c47
<   private static final Logger logger_ =
---
>   private static final Logger logger =
50c50
<   private final AbstractCompiler compiler_;
---
>   private final AbstractCompiler compiler;
53c53
<   private int numRemoved_ = 0;
---
>   private int numRemoved = 0;
62,67d61
< 
<   private final Set<Var> warnedVars_ = Sets.newHashSet();
< 
<   
< 
< 
74c68
<     compiler_ = compiler;
---
>     this.compiler = compiler;
84,85c78
<     warnedVars_.clear();
<     numRemoved_ = 0;
---
>     numRemoved = 0;
90,91c83,84
<     if (numRemoved_ > 0) {
<       compiler_.reportCodeChange();
---
>     if (numRemoved > 0) {
>       compiler.reportCodeChange();
99c92
<     Scope scope = new SyntacticScopeCreator(compiler_).createScope(root, null);
---
>     Scope scope = new SyntacticScopeCreator(compiler).createScope(root, null);
164c157
<         compiler_.getCodingConvention().isExported(
---
>         compiler.getCodingConvention().isExported(
184c177
<     Scope fnScope = new SyntacticScopeCreator(compiler_).createScope(n, scope);
---
>     Scope fnScope = new SyntacticScopeCreator(compiler).createScope(n, scope);
211c204
<         numRemoved_++;
---
>         numRemoved++;
242c235
<     CodingConvention convention = compiler_.getCodingConvention();
---
>     CodingConvention convention = compiler.getCodingConvention();
250c243
<         compiler_.addToDebugLog("Unreferenced var: " + var.name);
---
>         compiler.addToDebugLog("Unreferenced var: " + var.name);
269c262
<             compiler_.reportCodeChange();
---
>             compiler.reportCodeChange();
279,289d271
<           if (!warnedVars_.contains(var)) {
<             warnedVars_.add(var);
<             String inputName = var.input != null
<                                ? var.input.getName()
<                                : "<unknown>";
<             logger_.info("Unused var " + var.name +
<                          " declared in " + inputName +
<                          " at line " + toRemove.getLineno() +
<                          " may have side effects and can't be removed");
<           }
< 
296c278
<             numRemoved_++;
---
>             numRemoved++;
303c285
<           numRemoved_++;
---
>           numRemoved++;
306c288
<           numRemoved_++;
---
>           numRemoved++;
