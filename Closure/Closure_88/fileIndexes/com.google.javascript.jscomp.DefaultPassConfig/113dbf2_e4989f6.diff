1307c1307
<       return new PureFunctionMarker(
---
>       return new PureFunctionIdentifier.Driver(
1926,1968d1925
<   }
< 
<   
<   private static class PureFunctionMarker implements CompilerPass {
<     private final AbstractCompiler compiler;
<     private final String reportPath;
<     private final boolean useNameReferenceGraph;
< 
<     PureFunctionMarker(AbstractCompiler compiler, String reportPath,
<         boolean useNameReferenceGraph) {
<       this.compiler = compiler;
<       this.reportPath = reportPath;
<       this.useNameReferenceGraph = useNameReferenceGraph;
<     }
< 
<     @Override
<     public void process(Node externs, Node root) {
<       DefinitionProvider definitionProvider = null;
<       if (useNameReferenceGraph) {
<         NameReferenceGraphConstruction graphBuilder =
<             new NameReferenceGraphConstruction(compiler);
<         graphBuilder.process(externs, root);
<         definitionProvider = graphBuilder.getNameReferenceGraph();
<       } else {
<         SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder(compiler);
<         defFinder.process(externs, root);
<         definitionProvider = defFinder;
<       }
< 
<       PureFunctionIdentifier pureFunctionIdentifier =
<           new PureFunctionIdentifier(compiler, definitionProvider);
<       pureFunctionIdentifier.process(externs, root);
< 
<       if (reportPath != null) {
<         try {
<           Files.write(pureFunctionIdentifier.getDebugReport(),
<               new File(reportPath),
<               Charsets.UTF_8);
<         } catch (IOException e) {
<           throw new RuntimeException(e);
<         }
<       }
<     }
