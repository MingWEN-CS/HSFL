158,162c158,159
<           
<           
<           for (Node key = n.getFirstChild();
<                key != null; key = key.getNext()) {
<             if (key.getType() == Token.STRING) {
---
>           for (Node key = n.getFirstChild(); key != null; key = key.getNext()) {
>             if (key.getType() != Token.NUMBER) {
165c162,163
<               if (value.getType() == Token.FUNCTION) {
---
>               if (key.getType() == Token.STRING
>                   && value.getType() == Token.FUNCTION) {
211,217c209,223
<           
<           
<           for (Node key = n.getFirstChild();
<                key != null; key = key.getNext()) {
<             if (key.getType() == Token.STRING) {
<               Node value = key.getFirstChild();
<               addPossibleSignature(key.getString(), value, t);
---
>           for (Node key = n.getFirstChild(); key != null; key = key.getNext()) {
>             switch(key.getType()) {
>               case Token.STRING:
>                 addPossibleSignature(key.getString(), key.getFirstChild(), t);
>                 break;
>               case Token.SET:
>               case Token.GET:
>                 nonMethodProperties.add(key.getString());
>                 break;
>               case Token.NUMBER:
>                 
>                 break;
>               default:
>                 throw new IllegalStateException(
>                     "unexpect OBJECTLIT key: " + key);
