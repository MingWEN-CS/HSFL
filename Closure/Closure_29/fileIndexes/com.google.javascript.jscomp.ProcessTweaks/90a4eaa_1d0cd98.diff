74,78c74,78
<   static final DiagnosticType INVALID_TWEAK_DEFAULT_VALUE_ERROR =
<       DiagnosticType.error(
<           "JSC_INVALID_TWEAK_DEFAULT_VALUE_ERROR",
<           "tweak registered with {0} must have a default value that is a " +
<           "literal of type {0}");
---
>   static final DiagnosticType INVALID_TWEAK_DEFAULT_VALUE_WARNING =
>       DiagnosticType.warning(
>           "JSC_INVALID_TWEAK_DEFAULT_VALUE_WARNING",
>           "tweak {0} registered with {1} must have a default value that is a " +
>           "literal of type {2}");
94c94
<           "tweak getter function {0} used for tweak registered using {0}");
---
>           "tweak getter function {0} used for tweak registered using {1}");
295c295,303
<         tweakInfo.defaultValueNode = entry.getValue();
---
>         TweakFunction registerFunc = tweakInfo.registerCall.tweakFunc;
>         Node value = entry.getValue();
>         if (!registerFunc.isValidNodeType(value.getType())) {
>           compiler.report(JSError.make(INVALID_TWEAK_DEFAULT_VALUE_WARNING,
>               tweakId, registerFunc.getName(),
>               registerFunc.getExpectedTypeName()));
>         } else {
>           tweakInfo.defaultValueNode = value;
>         }
488,489c496,497
<                 valueNode, INVALID_TWEAK_DEFAULT_VALUE_ERROR,
<                 registerFunc.getName(),
---
>                 valueNode, INVALID_TWEAK_DEFAULT_VALUE_WARNING,
>                 tweakId, registerFunc.getName(),
