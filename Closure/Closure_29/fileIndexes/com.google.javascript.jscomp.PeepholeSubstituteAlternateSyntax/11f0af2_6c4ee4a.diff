275c275
<       if (isExpressBlock(thenBranch)) {
---
>       if (isFoldableExpressBlock(thenBranch)) {
356,357c356,357
<     boolean thenBranchIsExpressionBlock = isExpressBlock(thenBranch);
<     boolean elseBranchIsExpressionBlock = isExpressBlock(elseBranch);
---
>     boolean thenBranchIsExpressionBlock = isFoldableExpressBlock(thenBranch);
>     boolean elseBranchIsExpressionBlock = isFoldableExpressBlock(elseBranch);
519c519
<   private boolean isExpressBlock(Node n) {
---
>   private boolean isFoldableExpressBlock(Node n) {
522c522,545
<         return NodeUtil.isExpressionNode(n.getFirstChild());
---
>         Node maybeExpr = n.getFirstChild();
>         if (maybeExpr.getType() == Token.EXPR_RESULT) {
>           
>           
>           
>           
>           
>           
>           if (maybeExpr.getFirstChild().getType() == Token.CALL) {
>             Node calledFn = maybeExpr.getFirstChild().getFirstChild();
> 
>             
>             
>             if (calledFn.getType() == Token.GETELEM) {
>               return false;
>             } else if (calledFn.getType() == Token.GETPROP &&
>                        calledFn.getLastChild().getString().startsWith("on")) {
>               return false;
>             }
>           }
> 
>           return true;
>         }
>         return false;
533c556
<     Preconditions.checkState(isExpressBlock(n));
---
>     Preconditions.checkState(isFoldableExpressBlock(n));
