352c352
<       Preconditions.checkState(parent.getType() == Token.ASSIGN);
---
>       Preconditions.checkState(parent.isAssign());
424c424
<       Preconditions.checkState(node.getType() == Token.CALL);
---
>       Preconditions.checkState(node.isCall());
429c429
<       Preconditions.checkState(node.getType() == Token.CALL);
---
>       Preconditions.checkState(node.isCall());
514c514
<       if (n.getType() == Token.ASSIGN) {
---
>       if (n.isAssign()) {
518c518
<           if (parent.getType() == Token.FOR && !NodeUtil.isForIn(parent)) {
---
>           if (parent.isFor() && !NodeUtil.isForIn(parent)) {
620c620
<       if (n.getType() == Token.ASSIGN) {
---
>       if (n.isAssign()) {
631c631
<       } else if (n.getType() == Token.CALL) {
---
>       } else if (n.isCall()) {
658c658
<       if (node.getType() == Token.GETELEM) {
---
>       if (node.isGetElem()) {
707c707
<           if (input.getType() == Token.CALL) {
---
>           if (input.isCall()) {
748c748
<       if (parent.getType() == Token.VAR) {
---
>       if (parent.isVar()) {
753,756c753,756
<       } else if (n.getType() == Token.ASSIGN &&
<           (parent.getType() == Token.EXPR_RESULT ||
<            parent.getType() == Token.FOR ||
<            parent.getType() == Token.RETURN)) {
---
>       } else if (n.isAssign() &&
>           (parent.isExprResult() ||
>            parent.isFor() ||
>            parent.isReturn())) {
760,761c760,761
<       } else if (n.getType() == Token.CALL &&
<                  parent.getType() == Token.EXPR_RESULT) {
---
>       } else if (n.isCall() &&
>                  parent.isExprResult()) {
778c778
<       if (n.getType() == Token.FOR) {
---
>       if (n.isFor()) {
794,797c794,797
<       if (parent.getType() == Token.VAR ||
<           parent.getType() == Token.EXPR_RESULT ||
<           parent.getType() == Token.RETURN ||
<           parent.getType() == Token.THROW) {
---
>       if (parent.isVar() ||
>           parent.isExprResult() ||
>           parent.isReturn() ||
>           parent.isThrow()) {
801c801
<       if ((parent.getType() == Token.IF ||
---
>       if ((parent.isIf() ||
804,805c804,805
<            parent.getType() == Token.SWITCH ||
<            parent.getType() == Token.CASE) &&
---
>            parent.isSwitch() ||
>            parent.isCase()) &&
810c810
<       if (parent.getType() == Token.DO && parent.getLastChild() == n) {
---
>       if (parent.isDo() && parent.getLastChild() == n) {
937c937
<         Node rhs = (parent.getType() == Token.VAR)
---
>         Node rhs = (parent.isVar())
951,952c951,952
<       if ((parent.getType() == Token.NAME ||
<           parent.getType() == Token.ASSIGN) &&
---
>       if ((parent.isName() ||
>           parent.isAssign()) &&
1330c1330
<         if (rootNameNode.getType() == Token.GETPROP) {
---
>         if (rootNameNode.isGetProp()) {
1345c1345
<         if (objLitParent.getType() == Token.ASSIGN) {
---
>         if (objLitParent.isAssign()) {
1348c1348
<         } else if (objLitParent.getType() == Token.NAME) {
---
>         } else if (objLitParent.isName()) {
1351c1351
<         } else if (objLitParent.getType() == Token.STRING) {
---
>         } else if (objLitParent.isString()) {
1390,1391c1390,1391
<             n.getType() == Token.GETPROP &&
<             parent.getType() == Token.ASSIGN &&
---
>             n.isGetProp() &&
>             parent.isAssign() &&
1521c1521
<       while (parent.getType() == Token.HOOK) {
---
>       while (parent.isHook()) {
1525c1525
<       if (parent.getType() == Token.NAME) {
---
>       if (parent.isName()) {
1529c1529
<       if (parent.getType() == Token.ASSIGN) {
---
>       if (parent.isAssign()) {
1634c1634
<     } else if (n.getType() == Token.ASSIGN && parent.getType() != Token.FOR) {
---
>     } else if (n.isAssign() && parent.getType() != Token.FOR) {
1672c1672
<         Preconditions.checkArgument(parent.getType() == Token.FOR,
---
>         Preconditions.checkArgument(parent.isFor(),
1687c1687
<     if (parent.getType() == Token.FOR) {
---
>     if (parent.isFor()) {
1748c1748
<       if (rep.getType() == Token.EXPR_RESULT) {
---
>       if (rep.isExprResult()) {
