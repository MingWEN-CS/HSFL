717,740d716
<                 case PRIVATE:
<                   if (!jsdocBuilder.recordVisibility(Visibility.PRIVATE)) {
<                     parser.addParserWarning("msg.jsdoc.visibility.private",
<                         stream.getLineno(), stream.getCharno());
<                   }
<                   token = eatTokensUntilEOL();
<                   continue retry;
< 
<                 case PROTECTED:
<                   if (!jsdocBuilder.recordVisibility(Visibility.PROTECTED)) {
<                     parser.addParserWarning("msg.jsdoc.visibility.protected",
<                         stream.getLineno(), stream.getCharno());
<                   }
<                   token = eatTokensUntilEOL();
<                   continue retry;
< 
<                 case PUBLIC:
<                   if (!jsdocBuilder.recordVisibility(Visibility.PUBLIC)) {
<                     parser.addParserWarning("msg.jsdoc.visibility.public",
<                         stream.getLineno(), stream.getCharno());
<                   }
<                   token = eatTokensUntilEOL();
<                   continue retry;
< 
843a820,822
>                 case PRIVATE:
>                 case PROTECTED:
>                 case PUBLIC:
851,856c830,839
<                   if (!lookAheadForTypeAnnotation() &&
<                       annotation == Annotation.RETURN) {
<                     
<                     
<                     typeNode = newNode(Token.QMARK);
<                   } else {
---
>                   boolean hasType = lookAheadForTypeAnnotation();
>                   boolean isVisibilityAnnotation =
>                       (annotation == Annotation.PRIVATE ||
>                        annotation == Annotation.PROTECTED ||
>                        annotation == Annotation.PUBLIC);
>                   boolean canSkipTypeAnnotation =
>                       (isVisibilityAnnotation ||
>                        annotation == Annotation.RETURN);
>                   type = null;
>                   if (hasType || !canSkipTypeAnnotation) {
860d842
<                   }
862,863c844,847
<                   if (annotation == Annotation.THIS) {
<                     typeNode = wrapNode(Token.BANG, typeNode);
---
>                     if (annotation == Annotation.THIS) {
>                       typeNode = wrapNode(Token.BANG, typeNode);
>                     }
>                     type = createJSTypeExpression(typeNode);
865d848
<                   type = createJSTypeExpression(typeNode);
867c850,853
<                   if (type == null) {
---
>                   
>                   
>                   boolean hasError = type == null && !canSkipTypeAnnotation;
>                   if (!hasError) {
870c856,868
<                   } else {
---
>                     
>                     
>                     
>                     
>                     
>                     if ((type != null && isVisibilityAnnotation)
>                         || annotation == Annotation.TYPE) {
>                       if (!jsdocBuilder.recordType(type)) {
>                         parser.addTypeWarning(
>                             "msg.jsdoc.incompat.type", lineno, charno);
>                       }
>                     }
> 
878a877,900
>                       case PRIVATE:
>                         if (!jsdocBuilder.recordVisibility(Visibility.PRIVATE)) {
>                           parser.addParserWarning(
>                               "msg.jsdoc.visibility.private",
>                               lineno, charno);
>                         }
>                         break;
> 
>                       case PROTECTED:
>                         if (!jsdocBuilder.recordVisibility(Visibility.PROTECTED)) {
>                           parser.addParserWarning(
>                               "msg.jsdoc.visibility.protected",
>                               lineno, charno);
>                         }
>                         break;
> 
>                       case PUBLIC:
>                         if (!jsdocBuilder.recordVisibility(Visibility.PUBLIC)) {
>                           parser.addParserWarning(
>                               "msg.jsdoc.visibility.public",
>                               lineno, charno);
>                         }
>                         break;
> 
879a902,905
>                         if (type == null) {
>                           type = createJSTypeExpression(newNode(Token.QMARK));
>                         }
> 
907,913d932
<                           parser.addTypeWarning(
<                               "msg.jsdoc.incompat.type", lineno, charno);
<                         }
<                         break;
< 
<                       case TYPE:
<                         if (!jsdocBuilder.recordType(type)) {
