315,316c315,317
<       if (containsSeparator(name)) {
<         String newName = getOrginalName(name);
---
>       if (containsSeparator(name) && !getOrginalName(name).isEmpty()) {
>         String newName = findReplacementName(name);
>         referencedNames.remove(name);
318,331c319,325
<         if (TokenStream.isJSIdentifier(newName) &&
<             !referencedNames.contains(newName) && 
<             !newName.equals(ARGUMENTS)) {
<           referencedNames.remove(name);
<           
<           
<           referencedNames.add(newName);
<           List<Node> references = nameMap.get(name);
<           Preconditions.checkState(references != null);
<           for (Node n : references) {
<             Preconditions.checkState(n.getType() == Token.NAME);
<             n.setString(newName);
<           }
<           compiler.reportCodeChange();
---
>         
>         referencedNames.add(newName);
>         List<Node> references = nameMap.get(name);
>         Preconditions.checkState(references != null);
>         for (Node n : references) {
>           Preconditions.checkState(n.getType() == Token.NAME);
>           n.setString(newName);
332a327
>         compiler.reportCodeChange();
334a330,355
>     }
>  
>     
> 
> 
>     private String findReplacementName(String name) {
>       String original = getOrginalName(name);
>       String newName = original;
>       int i = 0;
>       while (!isValidName(newName)) {
>         newName = original + 
>             ContextualRenamer.UNIQUE_ID_SEPARATOR + String.valueOf(i++);
>       }
>       return newName;
>     }
> 
>     
> 
> 
>     private boolean isValidName(String name) {
>       if (TokenStream.isJSIdentifier(name) &&
>           !referencedNames.contains(name) &&
>           !name.equals(ARGUMENTS)) {
>         return true;
>       }
>       return false;
