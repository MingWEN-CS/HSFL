56,57c56,57
<     void addWarning(String messageId, String messageArg, int lineno,
<                     int charno) {
---
>     void addParserWarning(String messageId, String messageArg, int lineno,
>         int charno) {
61c61,62
<     void addWarning(String messageId, int lineno, int charno) {
---
> 
>     void addParserWarning(String messageId, int lineno, int charno) {
64a66,80
> 
>     void addTypeWarning(String messageId, String messageArg, int lineno,
>                     int charno) {
>       errorReporter.warning(
>           "Bad type annotation. " +
>           ScriptRuntime.getMessage1(messageId, messageArg),
>           sourceName, lineno, null, charno);
>     }
> 
>     void addTypeWarning(String messageId, int lineno, int charno) {
>       errorReporter.warning(
>           "Bad type annotation. " +
>           ScriptRuntime.getMessage0(messageId),
>           sourceName, lineno, null, charno);
>     }
191c207
<               parser.addWarning("msg.bad.jsdoc.tag", annotationName,
---
>               parser.addParserWarning("msg.bad.jsdoc.tag", annotationName,
204c220
<                       parser.addWarning("msg.jsdoc.authormissing",
---
>                       parser.addParserWarning("msg.jsdoc.authormissing",
217c233
<                     parser.addWarning("msg.jsdoc.const",
---
>                     parser.addParserWarning("msg.jsdoc.const",
226c242
<                       parser.addWarning("msg.jsdoc.interface.constructor",
---
>                       parser.addTypeWarning("msg.jsdoc.interface.constructor",
229c245
<                       parser.addWarning("msg.jsdoc.incompat.type",
---
>                       parser.addTypeWarning("msg.jsdoc.incompat.type",
238c254
<                     parser.addWarning("msg.jsdoc.deprecated",
---
>                     parser.addParserWarning("msg.jsdoc.deprecated",
258c274
<                       parser.addWarning("msg.jsdoc.interface.constructor",
---
>                       parser.addTypeWarning("msg.jsdoc.interface.constructor",
261c277
<                       parser.addWarning("msg.jsdoc.incompat.type",
---
>                       parser.addTypeWarning("msg.jsdoc.incompat.type",
270c286
<                     parser.addWarning("msg.jsdoc.desc.extra",
---
>                     parser.addParserWarning("msg.jsdoc.desc.extra",
301c317
<                     parser.addWarning("msg.jsdoc.fileoverview.extra",
---
>                     parser.addParserWarning("msg.jsdoc.fileoverview.extra",
338c354
<                     parser.addWarning(
---
>                     parser.addTypeWarning(
346c362
<                     parser.addWarning("msg.jsdoc.export",
---
>                     parser.addParserWarning("msg.jsdoc.export",
354c370
<                     parser.addWarning("msg.jsdoc.externs",
---
>                     parser.addParserWarning("msg.jsdoc.externs",
362c378
<                     parser.addWarning("msg.jsdoc.javadispatch",
---
>                     parser.addParserWarning("msg.jsdoc.javadispatch",
396c412
<                         parser.addWarning(
---
>                         parser.addTypeWarning(
403c419
<                         parser.addWarning("msg.jsdoc.implements.duplicate",
---
>                         parser.addTypeWarning("msg.jsdoc.implements.duplicate",
410c426
<                         parser.addWarning("msg.jsdoc.missing.rc",
---
>                         parser.addTypeWarning("msg.jsdoc.missing.rc",
415c431
<                       parser.addWarning("msg.end.annotation.expected",
---
>                       parser.addTypeWarning("msg.end.annotation.expected",
419c435
<                     parser.addWarning("msg.no.type.name", lineno, charno);
---
>                     parser.addTypeWarning("msg.no.type.name", lineno, charno);
426c442
<                     parser.addWarning("msg.jsdoc.hidden",
---
>                     parser.addParserWarning("msg.jsdoc.hidden",
444c460
<                       parser.addWarning("msg.jsdoc.lends.incompatible",
---
>                       parser.addTypeWarning("msg.jsdoc.lends.incompatible",
448c464
<                     parser.addWarning("msg.jsdoc.lends.missing",
---
>                     parser.addTypeWarning("msg.jsdoc.lends.missing",
453c469
<                     parser.addWarning("msg.jsdoc.missing.rc",
---
>                     parser.addTypeWarning("msg.jsdoc.missing.rc",
465c481
<                     parser.addWarning("msg.jsdoc.meaning.extra",
---
>                     parser.addParserWarning("msg.jsdoc.meaning.extra",
472c488
<                     parser.addWarning("msg.jsdoc.noalias",
---
>                     parser.addParserWarning("msg.jsdoc.noalias",
480c496
<                     parser.addWarning("msg.jsdoc.nocompile",
---
>                     parser.addParserWarning("msg.jsdoc.nocompile",
488c504
<                     parser.addWarning("msg.jsdoc.nocheck",
---
>                     parser.addParserWarning("msg.jsdoc.nocheck",
501c517
<                     parser.addWarning("msg.jsdoc.override",
---
>                     parser.addTypeWarning("msg.jsdoc.override",
579c595
<                     parser.addWarning("msg.missing.variable.name",
---
>                     parser.addTypeWarning("msg.missing.variable.name",
613c629
<                         parser.addWarning("msg.dup.variable.name", name,
---
>                         parser.addTypeWarning("msg.dup.variable.name", name,
616c632
<                         parser.addWarning("msg.jsdoc.incompat.type", name,
---
>                         parser.addTypeWarning("msg.jsdoc.incompat.type", name,
649c665
<                     parser.addWarning("msg.jsdoc.preservertry",
---
>                     parser.addParserWarning("msg.jsdoc.preservertry",
657c673
<                     parser.addWarning("msg.jsdoc.visibility.private",
---
>                     parser.addParserWarning("msg.jsdoc.visibility.private",
665c681
<                     parser.addWarning("msg.jsdoc.visibility.protected",
---
>                     parser.addParserWarning("msg.jsdoc.visibility.protected",
673c689
<                     parser.addWarning("msg.jsdoc.visibility.public",
---
>                     parser.addParserWarning("msg.jsdoc.visibility.public",
681c697
<                     parser.addWarning("msg.jsdoc.noshadow",
---
>                     parser.addParserWarning("msg.jsdoc.noshadow",
689c705
<                     parser.addWarning("msg.jsdoc.nosideeffects",
---
>                     parser.addParserWarning("msg.jsdoc.nosideeffects",
701c717
<                     parser.addWarning("msg.jsdoc.implicitcast",
---
>                     parser.addTypeWarning("msg.jsdoc.implicitcast",
713c729
<                       parser.addWarning("msg.jsdoc.seemissing",
---
>                       parser.addParserWarning("msg.jsdoc.seemissing",
734c750
<                     parser.addWarning("msg.jsdoc.templatemissing",
---
>                     parser.addTypeWarning("msg.jsdoc.templatemissing",
738c754
<                     parser.addWarning("msg.jsdoc.template.at.most.once",
---
>                     parser.addTypeWarning("msg.jsdoc.template.at.most.once",
750c766
<                     parser.addWarning("msg.jsdoc.versionmissing",
---
>                     parser.addParserWarning("msg.jsdoc.versionmissing",
754c770
<                        parser.addWarning("msg.jsdoc.extraversion",
---
>                        parser.addParserWarning("msg.jsdoc.extraversion",
790c806
<                           parser.addWarning("msg.jsdoc.define",
---
>                           parser.addParserWarning("msg.jsdoc.define",
797c813
<                           parser.addWarning(
---
>                           parser.addTypeWarning(
826c842
<                           parser.addWarning(
---
>                           parser.addTypeWarning(
833c849
<                           parser.addWarning(
---
>                           parser.addTypeWarning(
840c856
<                           parser.addWarning(
---
>                           parser.addTypeWarning(
864c880
<           parser.addWarning("msg.unexpected.eof",
---
>           parser.addParserWarning("msg.unexpected.eof",
904c920
<             parser.addWarning("msg.jsdoc.suppress.unknown", name,
---
>             parser.addParserWarning("msg.jsdoc.suppress.unknown", name,
911c927
<           parser.addWarning("msg.jsdoc.suppress",
---
>           parser.addParserWarning("msg.jsdoc.suppress",
924c940
<         parser.addWarning("msg.jsdoc.suppress",
---
>         parser.addParserWarning("msg.jsdoc.suppress",
929c945
<           parser.addWarning("msg.jsdoc.suppress.duplicate",
---
>           parser.addParserWarning("msg.jsdoc.suppress.duplicate",
951c967
<               parser.addWarning("msg.jsdoc.modifies.unknown", name,
---
>               parser.addParserWarning("msg.jsdoc.modifies.unknown", name,
958c974
<           parser.addWarning("msg.jsdoc.modifies",
---
>           parser.addParserWarning("msg.jsdoc.modifies",
971c987
<         parser.addWarning("msg.jsdoc.modifies",
---
>         parser.addParserWarning("msg.jsdoc.modifies",
976c992
<           parser.addWarning("msg.jsdoc.modifies.duplicate",
---
>           parser.addParserWarning("msg.jsdoc.modifies.duplicate",
2103c2119
<     parser.addWarning(warning, stream.getLineno(), stream.getCharno());
---
>     parser.addTypeWarning(warning, stream.getLineno(), stream.getCharno());
