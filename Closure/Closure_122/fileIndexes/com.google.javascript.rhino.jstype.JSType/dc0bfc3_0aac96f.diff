234c234
<     return this.isSubtype(
---
>     return isSubtype(
243c243
<     return this.isSubtype(
---
>     return isSubtype(
297a298,303
>       ObjectType iproto = objType.getImplicitPrototype();
>       
>       
>       if (iproto != null && iproto.isStruct()) {
>         return true;
>       }
316c322,329
<       FunctionType ctor = toObjectType().getConstructor();
---
>       ObjectType objType = toObjectType();
>       ObjectType iproto = objType.getImplicitPrototype();
>       
>       
>       if (iproto != null && iproto.isDict()) {
>         return true;
>       }
>       FunctionType ctor = objType.getConstructor();
659c672
<       return this.toMaybeUnionType().checkUnionEquivalenceHelper(
---
>       return toMaybeUnionType().checkUnionEquivalenceHelper(
664c677
<       return this.toMaybeFunctionType().checkFunctionEquivalenceHelper(
---
>       return toMaybeFunctionType().checkFunctionEquivalenceHelper(
669c682
<       return this.toMaybeRecordType().checkRecordEquivalenceHelper(
---
>       return toMaybeRecordType().checkRecordEquivalenceHelper(
827,830c840
<     if (this.isSubtype(that)) {
<       return true;
<     }
<     return false;
---
>     return isSubtype(that);
890c900
<     return this.testForEquality(that).equals(UNKNOWN);
---
>     return testForEquality(that).equals(UNKNOWN);
975c985
<     return this.isSubtype(getNativeType(JSTypeNative.NULL_TYPE));
---
>     return isSubtype(getNativeType(JSTypeNative.NULL_TYPE));
1185c1195
<     switch (this.testForEquality(that)) {
---
>     switch (testForEquality(that)) {
1218c1228
<     switch (this.testForEquality(that)) {
---
>     switch (testForEquality(that)) {
1265,1266c1275,1276
<     if (this.isNullType() && that.isNullType() ||
<         this.isVoidType() && that.isVoidType()) {
---
>     if (isNullType() && that.isNullType() ||
>         isVoidType() && that.isVoidType()) {
1458c1468
<     return "{" + this.hashCode() + "}";
---
>     return "{" + hashCode() + "}";
