293,296c293,307
<       for(Node sibling = n.getNext(); sibling != null;
<           sibling = sibling.getNext()) {
<         if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {
<           VariableLiveness state = isVariableReadBeforeKill(sibling, variable);
---
>       VariableLiveness state = VariableLiveness.MAYBE_LIVE;
>       switch (n.getParent().getType()) {
>         case Token.OR:
>         case Token.AND:
>           
>           
>           
>           if (n.getNext() != null) {
>             state = isVariableReadBeforeKill(
>                 n.getNext(), variable);
>             if (state == VariableLiveness.KILL) {
>               state = VariableLiveness.MAYBE_LIVE;
>             }
>           }
>           break;
297a309
>         case Token.HOOK:
299,302c311,315
<           if (state == VariableLiveness.READ) {
<             return true;
<           } else if (state == VariableLiveness.KILL) {
<             return false;
---
>           
>           
>           if (n.getNext() != null && n.getNext().getNext() != null) {
>             state = checkHookBranchReadBeforeKill(
>                 n.getNext(), n.getNext().getNext(), variable);
304c317,333
<         }
---
>           break;
> 
>         default:
>           for(Node sibling = n.getNext(); sibling != null;
>               sibling = sibling.getNext()) {
>             state = isVariableReadBeforeKill(sibling, variable);
>             if (state != VariableLiveness.MAYBE_LIVE) {
>               break;
>             }
>           }
>       }
> 
>       
>       if (state == VariableLiveness.READ) {
>         return true;
>       } else if (state == VariableLiveness.KILL) {
>         return false;
324a354,357
>     if (ControlFlowGraph.isEnteringNewCfgNode(n)) { 
>       return VariableLiveness.MAYBE_LIVE;
>     }
> 
342,348c375,408
<     
<     for (Node child = n.getFirstChild();
<         child != null; child = child.getNext()) {
<       if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { 
<         VariableLiveness state = isVariableReadBeforeKill(child, variable);
<         if (state != VariableLiveness.MAYBE_LIVE) {
<           return state;
---
>     switch (n.getType()) {
>       
>       case Token.OR:
>       case Token.AND:
>         VariableLiveness v1 = isVariableReadBeforeKill(
>           n.getFirstChild(), variable);
>         VariableLiveness v2 = isVariableReadBeforeKill(
>           n.getLastChild(), variable);
>         
>         
>         if (v1 != VariableLiveness.MAYBE_LIVE) {
>           return v1;
>         } else if (v2 == VariableLiveness.READ) {
>           return VariableLiveness.READ;
>         } else {
>           return VariableLiveness.MAYBE_LIVE;
>         }
>       case Token.HOOK:
>         VariableLiveness first = isVariableReadBeforeKill(
>             n.getFirstChild(), variable);
>         if (first != VariableLiveness.MAYBE_LIVE) {
>           return first;
>         }
>         return checkHookBranchReadBeforeKill(
>             n.getFirstChild().getNext(), n.getLastChild(), variable);
> 
>       default:
>         
>         for (Node child = n.getFirstChild();
>             child != null; child = child.getNext()) {
>           VariableLiveness state = isVariableReadBeforeKill(child, variable);
>           if (state != VariableLiveness.MAYBE_LIVE) {
>             return state;
>           }
350d409
<       }
351a411
> 
352a413,430
>   }
> 
>   private VariableLiveness checkHookBranchReadBeforeKill(
>       Node trueCase, Node falseCase, String variable) {
>     VariableLiveness v1 = isVariableReadBeforeKill(
>       trueCase, variable);
>     VariableLiveness v2 = isVariableReadBeforeKill(
>       falseCase, variable);
>     
>     
>     
>     if (v1 == VariableLiveness.READ || v2 == VariableLiveness.READ) {
>       return VariableLiveness.READ;
>     } else if (v1 == VariableLiveness.KILL && v2 == VariableLiveness.KILL) {
>       return VariableLiveness.KILL;
>     } else {
>       return VariableLiveness.MAYBE_LIVE;
>     }
