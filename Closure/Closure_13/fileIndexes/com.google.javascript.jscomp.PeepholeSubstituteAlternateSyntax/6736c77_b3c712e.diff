208c208
<     Preconditions.checkState(n.getType() == Token.CALL);
---
>     Preconditions.checkState(n.isCall());
210c210
<     if (callTarget != null && callTarget.getType() == Token.NAME &&
---
>     if (callTarget != null && callTarget.isName() &&
229c229
<     Preconditions.checkState(n.getType() == Token.CALL);
---
>     Preconditions.checkState(n.isCall());
274c274
<     if (parent.getType() == Token.EXPR_RESULT
---
>     if (parent.isExprResult()
301c301
<       if (child.getType() == Token.IF){
---
>       if (child.isIf()){
451c451
<     if (follow == null && (n.getType() == Token.THROW || result != null)) {
---
>     if (follow == null && (n.isThrow() || result != null)) {
495c495
<     if (follow == null && (n.getType() == Token.THROW || exitExpr != null)) {
---
>     if (follow == null && (n.isThrow() || exitExpr != null)) {
545,547c545,547
<     Preconditions.checkState(n.getType() == Token.RETURN
<         || n.getType() == Token.THROW);
<     return n.getType() == Token.THROW
---
>     Preconditions.checkState(n.isReturn()
>         || n.isThrow());
>     return n.isThrow()
622c622
<         if (cond.getType() == Token.NOT) {
---
>         if (cond.isNot()) {
666c666
<           if (innerIf.getType() == Token.IF) {
---
>           if (innerIf.isIf()) {
697c697
<     if (cond.getType() == Token.NOT && !consumesDanglingElse(elseBranch)) {
---
>     if (cond.isNot() && !consumesDanglingElse(elseBranch)) {
785c785
<           && maybeName2.getType() == Token.NAME
---
>           && maybeName2.isName()
810c810
<           && maybeName1.getType() == Token.NAME
---
>           && maybeName1.isName()
852c852
<     Preconditions.checkState(n.getType() == Token.IF);
---
>     Preconditions.checkState(n.isIf());
886c886
<     if (n.getType() == Token.BLOCK) {
---
>     if (n.isBlock()) {
889c889
<         if (maybeExpr.getType() == Token.EXPR_RESULT) {
---
>         if (maybeExpr.isExprResult()) {
896c896
<           if (maybeExpr.getFirstChild().getType() == Token.CALL) {
---
>           if (maybeExpr.getFirstChild().isCall()) {
901c901
<             if (calledFn.getType() == Token.GETELEM) {
---
>             if (calledFn.isGetElem()) {
903c903
<             } else if (calledFn.getType() == Token.GETPROP &&
---
>             } else if (calledFn.isGetProp() &&
931c931
<     if (n.getType() == Token.BLOCK) {
---
>     if (n.isBlock()) {
934c934
<         return first.getType() == Token.RETURN;
---
>         return first.isReturn();
946c946
<     if (n.getType() == Token.BLOCK) {
---
>     if (n.isBlock()) {
949c949
<         if (first.getType() == Token.RETURN) {
---
>         if (first.isReturn()) {
962c962
<     if (n.getType() == Token.RETURN) {
---
>     if (n.isReturn()) {
981c981
<     if (n.getType() == Token.BLOCK) {
---
>     if (n.isBlock()) {
984c984
<         if (first.getType() == Token.VAR) {
---
>         if (first.isVar()) {
1065,1066c1065,1066
<         return (input.getType() == Token.GETPROP &&
<             input.getParent().getType() == Token.ASSIGN);
---
>         return (input.isGetProp() &&
>             input.getParent().isAssign());
1134c1134
<               if (leftParent.getType() == Token.NOT) {
---
>               if (leftParent.isNot()) {
1141c1141
<               if (rightParent.getType() == Token.NOT) {
---
>               if (rightParent.isNot()) {
1149c1149
<               int newOp = (first.getType() == Token.AND) ? Token.OR : Token.AND;
---
>               int newOp = (first.isAnd()) ? Token.OR : Token.AND;
1305c1305
<     Preconditions.checkState(n.getType() == Token.NEW);
---
>     Preconditions.checkState(n.isNew());
1311c1311
<       if (n.getFirstChild().getType() == Token.NAME) {
---
>       if (n.getFirstChild().isName()) {
1329,1330c1329,1330
<     Preconditions.checkArgument(n.getType() == Token.CALL
<         || n.getType() == Token.NEW);
---
>     Preconditions.checkArgument(n.isCall()
>         || n.isNew());
1428c1428
<         pattern.getType() == Token.STRING
---
>         pattern.isString()
1436c1436
<         && (null == flags || flags.getType() == Token.STRING)
---
>         && (null == flags || flags.isString())
1476c1476
<           Node.newNumber(n.getType() == Token.TRUE ? 0 : 1));
---
>           Node.newNumber(n.isTrue() ? 0 : 1));
