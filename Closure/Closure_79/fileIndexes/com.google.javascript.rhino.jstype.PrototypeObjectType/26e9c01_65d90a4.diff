43a44
> import com.google.common.base.Preconditions;
44a46
> import com.google.common.collect.Sets;
77a80,85
>   
>   private boolean prettyPrint = false;
> 
>   private static final int MAX_PRETTY_PRINTED_PROPERTIES = 4;
> 
>   
168c176
<   protected void collectPropertyNames(Set<String> props) {
---
>   void collectPropertyNames(Set<String> props) {
322c330,370
<     return getReferenceName();
---
>     if (hasReferenceName()) {
>       return getReferenceName();
>     } else if (prettyPrint) {
>       
>       Set<String> propertyNames = Sets.newTreeSet();
>       for (ObjectType current = this;
>            current != null && !current.isNativeObjectType() &&
>                propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
>            current = current.getImplicitPrototype()) {
>         propertyNames.addAll(current.getOwnPropertyNames());
>       }
> 
>       StringBuilder sb = new StringBuilder();
>       sb.append("{");
> 
>       int i = 0;
>       for (String property : propertyNames) {
>         if (i > 0) {
>           sb.append(", ");
>         }
> 
>         sb.append(property);
>         sb.append(": ");
>         sb.append(getPropertyType(property).toString());
> 
>         ++i;
>         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
>           sb.append(", ...");
>           break;
>         }
>       }
> 
>       sb.append("}");
>       return sb.toString();
>     } else {
>       return "{...}";
>     }
>   }
> 
>   void setPrettyPrint(boolean prettyPrint) {
>     this.prettyPrint = prettyPrint;
351c399
<       return "{...}";
---
>       return null;
