19a20
> import com.google.common.collect.ImmutableSet;
65a67,68
>   static private final Set<String> modifiesAnnotationKeywords =
>       ImmutableSet.<String>of("this", "arguments");
648a652,655
>                 case MODIFIES:
>                   token = parseModifiesTag(next());
>                   continue retry;
> 
879a887,933
>               stream.getLineno(), stream.getCharno());
>         }
>       }
>     }
>     return token;
>   }
> 
>   
> 
> 
> 
> 
> 
>   private JsDocToken parseModifiesTag(JsDocToken token) {
>     if (token == JsDocToken.LC) {
>       Set<String> modifies = new HashSet<String>();
>       while (true) {
>         if (match(JsDocToken.STRING)) {
>           String name = stream.getString();
>           if (!modifiesAnnotationKeywords.contains(name)
>               && !jsdocBuilder.hasParameter(name)) {
>               parser.addWarning("msg.jsdoc.modifies.unknown", name,
>                   stream.getLineno(), stream.getCharno());
>           }
> 
>           modifies.add(stream.getString());
>           token = next();
>         } else {
>           parser.addWarning("msg.jsdoc.modifies",
>               stream.getLineno(), stream.getCharno());
>           return token;
>         }
> 
>         if (match(JsDocToken.PIPE)) {
>           token = next();
>         } else {
>           break;
>         }
>       }
> 
>       if (!match(JsDocToken.RC)) {
>         parser.addWarning("msg.jsdoc.modifies",
>             stream.getLineno(), stream.getCharno());
>       } else {
>         token = next();
>         if (!jsdocBuilder.recordModifies(modifies)) {
>           parser.addWarning("msg.jsdoc.modifies.duplicate",
