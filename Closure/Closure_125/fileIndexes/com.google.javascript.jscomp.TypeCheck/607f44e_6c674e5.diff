881,907d880
<       
<       
<       
<       
<       
<       
<       
<       
<       if (object.isGetProp()) {
<         Node object2 = object.getFirstChild();
<         String property2 = NodeUtil.getStringValue(object.getLastChild());
< 
<         if ("prototype".equals(property2)) {
<           JSType jsType = getJSType(object2);
<           if (jsType.isFunctionType()) {
<             FunctionType functionType = jsType.toMaybeFunctionType();
<             if (functionType.isConstructor() || functionType.isInterface()) {
<               checkDeclaredPropertyInheritance(
<                   t, assign, functionType, property, info, getJSType(rvalue));
<             }
<           }
<         }
<       }
< 
<       
<       
<       
918a892,893
>             checkPropertyInheritanceOnGetpropAssign(
>                 t, assign, object, property, info, expectedType);
922a898,902
> 
>       
>       
>       checkPropertyInheritanceOnGetpropAssign(
>           t, assign, object, property, info, getNativeType(UNKNOWN_TYPE));
959a940,970
>     }
>   }
> 
>   private void checkPropertyInheritanceOnGetpropAssign(
>       NodeTraversal t, Node assign, Node object, String property,
>       JSDocInfo info, JSType propertyType) {
>     
>     
>     
>     
>     
>     
>     
>     
>     
>     
>     
>     if (object.isGetProp()) {
>       Node object2 = object.getFirstChild();
>       String property2 = NodeUtil.getStringValue(object.getLastChild());
> 
>       if ("prototype".equals(property2)) {
>         JSType jsType = getJSType(object2);
>         if (jsType.isFunctionType()) {
>           FunctionType functionType = jsType.toMaybeFunctionType();
>           if (functionType.isConstructor() || functionType.isInterface()) {
>             checkDeclaredPropertyInheritance(
>                 t, assign, functionType, property, info, propertyType);
>           }
>         }
>       }
