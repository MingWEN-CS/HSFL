3114a3115,3156
>   
> 
> 
> 
> 
>   static boolean isExpressionUnconditionallyExecuted(Node n) {
>     inspect: do {
>       Node parent = n.getParent();
>       switch (parent.getType()) {
>         case Token.IF:
>         case Token.HOOK:
>         case Token.AND:
>         case Token.OR:
>           if (parent.getFirstChild() != n) {
>             return false;
>           }
>           
>           continue inspect;
>         case Token.FOR:
>           if (parent.getFirstChild() != n) {
>             return false;
>           }
>           
>           continue inspect;
>         case Token.WHILE:
>         case Token.DO:
>           return false;
>         case Token.TRY:
>           
>           return false;
>         case Token.CASE:
>         case Token.DEFAULT_CASE:
>           return false;
>         case Token.SCRIPT:
>         case Token.FUNCTION:
>           
>           break inspect;
>       }
>     } while ((n = n.getParent()) != null);
>     return true;
>   }
> 
