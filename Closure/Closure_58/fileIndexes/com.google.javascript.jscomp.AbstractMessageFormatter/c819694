














package com.google.javascript.jscomp;

import com.google.common.collect.ImmutableSet;
import com.google.javascript.jscomp.CheckLevel;

import java.util.Set;







public abstract class AbstractMessageFormatter implements MessageFormatter {
  private final SourceExcerptProvider source;
  private boolean colorize;

  public AbstractMessageFormatter(SourceExcerptProvider source) {
    this.source = source;
  }

  public void setColorize(boolean colorize) {
    this.colorize = colorize;
  }

  


  protected final SourceExcerptProvider getSource() {
    return source;
  }

  private static final Set<String> SUPPORTED_COLOR_TERMINALS =
      ImmutableSet.of("xterm",
                      "xterm-color",
                      "xterm-256color",
                      "screen-bce");

  static boolean termSupportsColor(String term) {
    return SUPPORTED_COLOR_TERMINALS.contains(term);
  }

  private static enum Color {
    ERROR("\033[31m"),
    WARNING("\033[35m"),
    RESET("\033[39m");

    private final String controlCharacter;

    Color(String controlCharacter) {
      this.controlCharacter = controlCharacter;
    }

    public String getControlCharacter() {
      return controlCharacter;
    }
  }

  String getLevelName(CheckLevel level) {
    switch (level) {
      case ERROR: return maybeColorize("ERROR", Color.ERROR);
      case WARNING: return maybeColorize("WARNING", Color.WARNING);
      default: return level.toString();
    }
  }

  private String maybeColorize(String text, Color color) {
    if (!colorize) return text;

    return color.getControlCharacter() + 
        text + Color.RESET.getControlCharacter();
  }
}
