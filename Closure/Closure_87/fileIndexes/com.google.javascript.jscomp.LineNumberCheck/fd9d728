















package com.google.javascript.jscomp;

import com.google.javascript.jscomp.NodeTraversal.Callback;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.Token;







class LineNumberCheck implements Callback, CompilerPass {

  static final DiagnosticType MISSING_LINE_INFO = DiagnosticType.error(
      "JSC_MISSING_LINE_INFO",
      "No source line associated with {0}");

  private final AbstractCompiler compiler;
  private boolean requiresLineNumbers = false;

  LineNumberCheck(AbstractCompiler compiler) {
    this.compiler = compiler;
  }

  public void process(Node externs, Node root) {
    requiresLineNumbers = false;

    NodeTraversal.traverse(compiler, root, this);
  }

  public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
    
    
    if (n.getType() == Token.SCRIPT) {
      requiresLineNumbers = true;
    }
    return true;
  }

  public void visit(NodeTraversal t, Node n, Node parent) {
    if (n.getType() == Token.SCRIPT) {
      requiresLineNumbers = false;
    } else if (requiresLineNumbers) {
      if (n.getLineno() == -1) {
        
        
        compiler.report(
            t.makeError(n, MISSING_LINE_INFO,
                n.toStringTree()));
      }
    }
  }
}
