157c157
<           normalizeObjectLitJsDocs(n);
---
>           visitObjectLiteral(n);
161a162,178
>     private void visitObjectLiteral(Node objlit) {
>       Preconditions.checkState(objlit.getType() == Token.OBJECTLIT);
>       for (Node key = objlit.getFirstChild();
>            key != null; key = key.getNext().getNext()) {
>         Node value = key.getNext();
>         visitObjectLiteralKey(objlit, key, value);
>       }
>     }
> 
>     
> 
> 
>     private void visitObjectLiteralKey(Node objlit, Node key, Node value) {
>       normalizeObjectLitJsDocs(objlit, key, value);
>       annotateObjLitConstants(objlit, key, value);
>     }
> 
213,221c230,234
<     private void normalizeObjectLitJsDocs(Node n) {
<       Preconditions.checkState(n.getType() == Token.OBJECTLIT);
<       for (Node key = n.getFirstChild();
<            key != null; key = key.getNext().getNext()) {
<         Node value = key.getNext();
<         if (key.getJSDocInfo() != null &&
<             key.getNext().getType() == Token.FUNCTION) {
<           value.setJSDocInfo(key.getJSDocInfo());
<         }
---
>     private void normalizeObjectLitJsDocs(Node objlit, Node key, Node value) {
>       Preconditions.checkState(objlit.getType() == Token.OBJECTLIT);
>       if (key.getJSDocInfo() != null &&
>           value.getType() == Token.FUNCTION) {
>         value.setJSDocInfo(key.getJSDocInfo());
236d248
<           || parent.getType() == Token.OBJECTLIT
239a252,263
>         }
>       }
>     }
> 
>     
> 
> 
>     private void annotateObjLitConstants(Node objlit, Node key, Node value) {
>       if (key.getType() == Token.NAME || key.getType() == Token.STRING) {
>         String name = key.getString();
>         if (convention.isConstantKey(name)) {
>           key.putBooleanProp(Node.IS_CONSTANT_NAME, true);
