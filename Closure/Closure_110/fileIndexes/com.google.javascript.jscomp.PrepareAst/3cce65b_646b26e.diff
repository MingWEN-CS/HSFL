132c132
<       extends NodeTraversal.AbstractPostOrderCallback {
---
>       implements NodeTraversal.Callback {
139a140,148
>     @Override
>     public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
>       if (n.getType() == Token.OBJECTLIT) {
>         normalizeObjectLiteralAnnotations(n);
>       }
>       return true;
>     }
> 
>     @Override
150,158d158
< 
<         case Token.NAME:
<         case Token.STRING:
<           annotateConstants(n, parent);
<           break;
< 
<         case Token.OBJECTLIT:
<           visitObjectLiteral(n);
<           break;
162c162
<     private void visitObjectLiteral(Node objlit) {
---
>     private void normalizeObjectLiteralAnnotations(Node objlit) {
167c167
<         visitObjectLiteralKey(objlit, key, value);
---
>         normalizeObjectLiteralKeyAnnotations(objlit, key, value);
174,181d173
<     private void visitObjectLiteralKey(Node objlit, Node key, Node value) {
<       normalizeObjectLitJsDocs(objlit, key, value);
<       annotateObjLitConstants(objlit, key, value);
<     }
< 
<     
< 
< 
230c222,223
<     private void normalizeObjectLitJsDocs(Node objlit, Node key, Node value) {
---
>     private void normalizeObjectLiteralKeyAnnotations(
>         Node objlit, Node key, Node value) {
235,264d227
<       }
<     }
< 
<     
< 
< 
<     private void annotateConstants(Node n, Node parent) {
<       Preconditions.checkState(
<           n.getType() == Token.NAME || n.getType() == Token.STRING);
< 
<       
<       
<       
<       if (n.getType() != Token.STRING
<           || parent.getType() == Token.GETPROP) {
<         if (NodeUtil.isConstantByConvention(convention, n, parent)) {
<           n.putBooleanProp(Node.IS_CONSTANT_NAME, true);
<         }
<       }
<     }
< 
<     
< 
< 
<     private void annotateObjLitConstants(Node objlit, Node key, Node value) {
<       if (key.getType() == Token.NAME || key.getType() == Token.STRING) {
<         String name = key.getString();
<         if (convention.isConstantKey(name)) {
<           key.putBooleanProp(Node.IS_CONSTANT_NAME, true);
<         }
