27a28
> import com.google.javascript.rhino.IR;
356a358
>         boolean isFunctionDecl = NodeUtil.isFunctionDeclaration(parent);
365,367c367,371
<         } else if (isVar) {
<           Node value = n.hasChildren() ?
<               v.getInitialValue().detachFromParent() :
---
>         } else if (isVar || isFunctionDecl) {
>           boolean isHoisted = NodeUtil.isHoistedFunctionDeclaration(parent);
>           Node grandparent = parent.getParent();
>           Node value = v.getInitialValue() != null ?
>               v.getInitialValue() :
368a373,374
>           Node varNode = null;
> 
378a385,411
>           if (isFunctionDecl) {
>             
>             Node existingName = v.getNameNode();
> 
>             
>             
>             
>             
>             
>             
>             
>             Node newName = IR.name("").useSourceInfoFrom(existingName);
>             value.replaceChild(existingName, newName);
> 
>             varNode = IR.var(existingName).useSourceInfoFrom(existingName);
>             grandparent.replaceChild(parent, varNode);
>           } else {
>             if (value != null) {
>               
>               
>               value.detachFromParent();
>             }
>             varNode = parent;
>           }
> 
>           
>           
388c421,426
<             parent.getParent().addChildBefore(newDecl, parent);
---
> 
>             if (isHoisted) {
>               grandparent.addChildToFront(newDecl);
>             } else {
>               grandparent.addChildBefore(newDecl, varNode);
>             }
